// THIS PROJECT IS JUST FOR DEBUGGING PURPOSES
// NOTHING TO SEE HERE!

open System
open Transform


let leftPadSample = """{"Namespace":"index","Opens":["System","Fable.Core","Fable.Core.JS"],"Files":[{"Kind":"Index","FileName":"C:/Users/dominik/Projects/FSharp.Fable.TypescriptProvider/sample/Simple/node_modules/left-pad/index.d.ts","ModuleName":"left-pad","Modules":[{"HasDeclare":false,"IsNamespace":false,"Name":"","Types":[["Variable",{"Export":{"IsGlobal":false,"Selector":"*","Path":"left-pad"},"HasDeclare":true,"Name":"leftPad","Type":["Mapped",{"Name":"LeftPad.IExports","FullName":"LeftPad.IExports"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"leftPad","TypeParameters":[],"Params":[{"Comment":null,"Name":"str","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Comment":null,"Name":"len","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"ch","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}]],"Accessibility":null}],["Module",{"HasDeclare":true,"IsNamespace":true,"Name":"LeftPad","Types":[],"HelperLines":[],"Attributes":[]}],["ExportAssignment","leftPad"]],"HelperLines":[],"Attributes":[]}]}],"AbbrevTypes":[]}"""
let awesomebutton = """{"Namespace":"react-awesome-button.6.5.1","Opens":["System","Fable.Core","Fable.Core.JS"],"Files":[{"Kind":"Index","FileName":"C:/Users/dominik/Projects/FSharp.Fable.TypescriptProvider/sample/SimpleReact/node_modules/react-awesome-button/index.d.ts","ModuleName":"react-awesome-button","Modules":[{"HasDeclare":false,"IsNamespace":false,"Name":"","Types":[["Variable",{"Export":{"IsGlobal":false,"Selector":"*","Path":"react-awesome-button"},"HasDeclare":true,"Name":"``react-awesome-button``","Type":["Mapped",{"Name":"React_awesome_button.IExports","FullName":"React_awesome_button.IExports"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Module",{"HasDeclare":true,"IsNamespace":false,"Name":"React_awesome_button","Types":[["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AwesomeButton","Option":false,"Type":["Mapped",{"Name":"AwesomeButtonStatic","FullName":"AwesomeButtonStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AwesomeButtonProgress","Option":false,"Type":["Mapped",{"Name":"AwesomeButtonProgressStatic","FullName":"AwesomeButtonProgressStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AwesomeButtonSocial","Option":false,"Type":["Mapped",{"Name":"AwesomeButtonSocialStatic","FullName":"AwesomeButtonSocialStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Component"},"SpecifiedModule":"React","ResolvedModule":null}]],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AwesomeButtonProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"action","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"active","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"blocked","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"children","Option":false,"Type":["Mapped",{"Name":"React.ReactNode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"className","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"cssModule","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"disabled","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"element","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"href","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"moveEvents","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"onPress","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"onReleased","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"placeholder","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ripple","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rootElement","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"size","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``to``","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"visible","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AwesomeButton","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"AwesomeButtonProps","FullName":""}],["Mapped",{"Name":"AwesomeButtonComponent","FullName":"AwesomeButtonComponent"}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AwesomeButtonStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AwesomeButton","FullName":"AwesomeButton"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AwesomeButtonProgressProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"action","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"children","Option":false,"Type":["Mapped",{"Name":"React.ReactNode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"cssModule","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"disabled","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"fakePress","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"loadingLabel","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"onPress","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"releaseDelay","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"resultLabel","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rootElement","Option":false,"Type":["Mapped",{"Name":"React.ReactNode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"size","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AwesomeButtonProgress","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"AwesomeButtonProgressProps","FullName":""}],["Mapped",{"Name":"AwesomeButtonComponent","FullName":"AwesomeButtonComponent"}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AwesomeButtonProgressStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AwesomeButtonProgress","FullName":"AwesomeButtonProgress"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AwesomeButtonSocialProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"action","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"children","Option":false,"Type":["Mapped",{"Name":"React.ReactNode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"disabled","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"href","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"icon","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"iconHeight","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"iconWidth","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"image","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"message","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"onPress","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"phone","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"url","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"user","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AwesomeButtonSocial","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"AwesomeButtonSocialProps","FullName":""}],["Mapped",{"Name":"AwesomeButtonComponent","FullName":"AwesomeButtonComponent"}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AwesomeButtonSocialStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AwesomeButtonSocial","FullName":"AwesomeButtonSocial"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AwesomeButtonComponent","FullName":"AwesomeButtonComponent","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]],"HelperLines":[],"Attributes":[]}]}],"AbbrevTypes":[]}"""
let rechartsLineChart = """{"Namespace":"recharts.8ae8e4afe55fd14475e07bc2eec10365.2.0.4","Opens":["System","Fable.Core","Fable.Core.JS"],"Files":[{"Kind":["Extra","chart\\LineChart"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/recharts/types/chart/LineChart.d.ts","ModuleName":"recharts","Modules":[{"HasDeclare":true,"IsNamespace":false,"Name":"__chart_LineChart","Types":[["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Export":null,"HasDeclare":true,"Name":"_default","Type":["Mapped",{"Name":"IExports_default","FullName":"IExports_default"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["ExportAssignment","_default"],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports_defaultGetAxisNameByLayout","FullName":"IExports_defaultGetAxisNameByLayout","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"numericAxisName","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"cateAxisName","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports_default","FullName":"IExports_default","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Comment":null,"Name":"props","Optional":false,"ParamArray":false,"Type":"TODO"}],"ReturnType":"This","Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"displayName","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"defaultProps","Option":false,"Type":"TODO","IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"createDefaultState","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"props","Optional":false,"ParamArray":false,"Type":"TODO"}],"ReturnType":"TODO","Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"hasBar","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"graphicalItems","Optional":false,"ParamArray":false,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}],["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"getDisplayedData","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"props","Optional":false,"ParamArray":false,"Type":"TODO"},{"Comment":null,"Name":"p1","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"item","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getAxisNameByLayout","TypeParameters":[],"Params":[{"Comment":null,"Name":"layout","Optional":false,"ParamArray":false,"Type":"TODO"}],"ReturnType":["Mapped",{"Name":"IExports_defaultGetAxisNameByLayout","FullName":"IExports_defaultGetAxisNameByLayout"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"renderActiveDot","TypeParameters":[],"Params":[{"Comment":null,"Name":"option","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"props","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":"TODO","Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"contextType","Option":true,"Type":"TODO","IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","demo\\component\\LineChart"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/recharts/types/demo/component/LineChart.d.ts","ModuleName":"recharts","Modules":[{"HasDeclare":true,"IsNamespace":false,"Name":"__demo_component_LineChart","Types":[["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Demo","Option":false,"Type":["Mapped",{"Name":"DemoStatic","FullName":"DemoStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Component"},"SpecifiedModule":"React","ResolvedModule":null}]],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Demo","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"Component","FullName":"error"}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"state","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"handleChangeData","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"handleClick","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"React.MouseEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"handleLineClick","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"React.MouseEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"handleLegendMouseEnter","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"handleClickDot","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"React.MouseEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"handleLegendMouseLeave","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"handleChangeAnotherState","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"render","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"DemoStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Demo","FullName":"Demo"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"displayName","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","src\\chart\\LineChart"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/recharts/types/src/chart/LineChart.d.ts","ModuleName":"recharts","Modules":[{"HasDeclare":true,"IsNamespace":false,"Name":"__src_chart_LineChart","Types":[["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Export":null,"HasDeclare":true,"Name":"LineChart","Type":["Mapped",{"Name":"IExportsLineChart","FullName":"IExportsLineChart"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsLineChart","FullName":"IExportsLineChart","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Comment":null,"Name":"props","Optional":false,"ParamArray":false,"Type":"TODO"}],"ReturnType":"This","Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"displayName","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"defaultProps","Option":false,"Type":"TODO","IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"getDerivedStateFromProps","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"nextProps","Optional":false,"ParamArray":false,"Type":"TODO"},{"Comment":null,"Name":"prevState","Optional":false,"ParamArray":false,"Type":"TODO"}],"ReturnType":"TODO","Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"renderActiveDot","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"option","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"props","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":"TODO","Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"contextType","Option":true,"Type":"TODO","IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]}],"AbbrevTypes":[]}"""
let framerMotion = """{"Namespace":"``framer-motion.338ea96a44f5f7a980863d04c50dfedc.4.1.7``","Opens":["System","Fable.Core","Fable.Core.JS","Browser.Types"],"Files":[{"Kind":["Extra","index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"Index","Types":[],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"Types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"CSSProperties"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SVGAttributes"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TransformProperties"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"CustomStyles"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SVGPathProperties"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"ResolvedKeyframesTarget","Type":["Union",{"Option":false,"Types":[["Tuple",{"Types":["TODO","TODO"],"Kind":"Tuple"}],["Array",["Mapped",{"Name":"float","FullName":"float"}]],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"KeyframesTarget","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ResolvedKeyframesTarget","FullName":""}],["Tuple",{"Types":["TODO","TODO"],"Kind":"Tuple"}],["Array",["Mapped",{"Name":"CustomValueType","FullName":""}]]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"ResolvedSingleTarget","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"SingleTarget","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ResolvedSingleTarget","FullName":""}],["Mapped",{"Name":"CustomValueType","FullName":""}]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"ResolvedValueTarget","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ResolvedSingleTarget","FullName":""}],["Mapped",{"Name":"ResolvedKeyframesTarget","FullName":""}]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"ValueTarget","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"SingleTarget","FullName":""}],["Mapped",{"Name":"KeyframesTarget","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Props","FullName":"Props","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["A function that accepts a progress value between `0` and `1` and returns a","new one."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  ease: progress => progress * progress","}","","<Frame","  animate={{ opacity: 0 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ opacity: 0 }}","  transition={{","    duration: 1,","    ease: progress => progress * progress","  }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"EasingFunction","FullName":"EasingFunction","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["A function that accepts a progress value between `0` and `1` and returns a","new one."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  ease: progress => progress * progress","}","","<Frame","  animate={{ opacity: 0 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ opacity: 0 }}","  transition={{","    duration: 1,","    ease: progress => progress * progress","  }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["Summary",["The easing function to use. Set as one of:","","- The name of an in-built easing function.","- An array of four numbers to define a cubic bezier curve.","- An easing function, that accepts and returns a progress value between `0` and `1`."]],["UnknownTag",{"Name":"public","Content":[]}]],"Name":"Easing","Type":["Union",{"Option":false,"Types":[["Tuple",{"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"float","FullName":"float"}]],"Kind":"Tuple"}],["Mapped",{"Name":"EasingFunction","FullName":""}],["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"linear","Type":"String","Value":"linear"},{"Attributes":[],"Comments":[],"Name":"easeIn","Type":"String","Value":"easeIn"},{"Attributes":[],"Comments":[],"Name":"easeOut","Type":"String","Value":"easeOut"},{"Attributes":[],"Comments":[],"Name":"easeInOut","Type":"String","Value":"easeInOut"},{"Attributes":[],"Comments":[],"Name":"circIn","Type":"String","Value":"circIn"},{"Attributes":[],"Comments":[],"Name":"circOut","Type":"String","Value":"circOut"},{"Attributes":[],"Comments":[],"Name":"circInOut","Type":"String","Value":"circInOut"},{"Attributes":[],"Comments":[],"Name":"backIn","Type":"String","Value":"backIn"},{"Attributes":[],"Comments":[],"Name":"backOut","Type":"String","Value":"backOut"},{"Attributes":[],"Comments":[],"Name":"backInOut","Type":"String","Value":"backInOut"},{"Attributes":[],"Comments":[],"Name":"anticipate","Type":"String","Value":"anticipate"}]}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["Summary",["Options for orchestrating the timing of animations."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Orchestration","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Delay the animation by this duration (in seconds). Defaults to `0`."]],["Remarks",["<code language=\"javascript\">","const transition = {","  delay: 0.2","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Describes the relationship between the transition and its children. Set","to `false` by default."]],["Remarks",["When using variants, the transition can be scheduled in relation to its","children with either `\"beforeChildren\"` to finish this transition before","starting children transitions, `\"afterChildren\"` to finish children","transitions before starting this transition."]],["UnknownTag",{"Name":"library","Content":["```jsx","const container = {","  hidden: {","    opacity: 0,","    transition: { when: \"afterChildren\" }","  }","}","","const item = {","  hidden: {","    opacity: 0,","    transition: { duration: 2 }","  }","}","","return (","  <Frame variants={container} animate=\"hidden\">","    <Frame variants={item} size={50} />","    <Frame variants={item} size={50} />","  </Frame>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const list = {","  hidden: {","    opacity: 0,","    transition: { when: \"afterChildren\" }","  }","}","","const item = {","  hidden: {","    opacity: 0,","    transition: { duration: 2 }","  }","}","","return (","  <motion.ul variants={list} animate=\"hidden\">","    <motion.li variants={item} />","    <motion.li variants={item} />","  </motion.ul>",")","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``when``","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"beforeChildren","Type":"String","Value":"beforeChildren"},{"Attributes":[],"Comments":[],"Name":"afterChildren","Type":"String","Value":"afterChildren"}]}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["When using variants, children animations will start after this duration","(in seconds). You can add the `transition` property to both the `Frame` and the `variant` directly. Adding it to the `variant` generally offers more flexibility, as it allows you to customize the delay per visual state."]],["UnknownTag",{"Name":"library","Content":["```jsx","const container = {","  hidden: { opacity: 0 },","  show: {","    opacity: 1,","    transition: {","      delayChildren: 0.5","    }","  }","}","","const item = {","  hidden: { opacity: 0 },","  show: { opacity: 1 }","}","","return (","  <Frame","    variants={container}","    initial=\"hidden\"","    animate=\"show\"","  >","    <Frame variants={item} size={50} />","    <Frame variants={item} size={50} />","  </Frame>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const container = {","  hidden: { opacity: 0 },","  show: {","    opacity: 1,","    transition: {","      delayChildren: 0.5","    }","  }","}","","const item = {","  hidden: { opacity: 0 },","  show: { opacity: 1 }","}","","return (","  <motion.ul","    variants={container}","    initial=\"hidden\"","    animate=\"show\"","  >","    <motion.li variants={item} />","    <motion.li variants={item} />","  </motion.ul>",")","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"delayChildren","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["When using variants, animations of child components can be staggered by this","duration (in seconds).","","For instance, if `staggerChildren` is `0.01`, the first child will be","delayed by `0` seconds, the second by `0.01`, the third by `0.02` and so","on.","","The calculated stagger delay will be added to `delayChildren`."]],["UnknownTag",{"Name":"library","Content":["```jsx","const container = {","  hidden: { opacity: 0 },","  show: {","    opacity: 1,","    transition: {","      staggerChildren: 0.5","    }","  }","}","","const item = {","  hidden: { opacity: 0 },","  show: { opacity: 1 }","}","","return (","  <Frame","    variants={container}","    initial=\"hidden\"","    animate=\"show\"","  >","    <Frame variants={item} size={50} />","    <Frame variants={item} size={50} />","  </Frame>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const container = {","  hidden: { opacity: 0 },","  show: {","    opacity: 1,","    transition: {","      staggerChildren: 0.5","    }","  }","}","","const item = {","  hidden: { opacity: 0 },","  show: { opacity: 1 }","}","","return (","  <motion.ol","    variants={container}","    initial=\"hidden\"","    animate=\"show\"","  >","    <motion.li variants={item} />","    <motion.li variants={item} />","  </motion.ol>",")","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"staggerChildren","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The direction in which to stagger children.","","A value of `1` staggers from the first to the last while `-1`","staggers from the last to the first."]],["UnknownTag",{"Name":"library","Content":["```jsx","const container = {","  hidden: { opacity: 0 },","  show: {","    opacity: 1,","    transition: {","      delayChildren: 0.5,","      staggerDirection: -1","    }","  }","}","","const item = {","  hidden: { opacity: 0 },","  show: { opacity: 1 }","}","","return (","  <Frame","    variants={container}","    initial=\"hidden\"","    animate=\"show\"","  >","    <Frame variants={item} size={50} />","    <Frame variants={item} size={50} />","  </Frame>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const container = {","  hidden: { opacity: 0 },","  show: {","    opacity: 1,","    transition: {","      delayChildren: 0.5,","      staggerDirection: -1","    }","  }","}","","const item = {","  hidden: { opacity: 0 },","  show: { opacity: 1 }","}","","return (","  <motion.ul","    variants={container}","    initial=\"hidden\"","    animate=\"show\"","  >","    <motion.li variants={item} size={50} />","    <motion.li variants={item} size={50} />","  </motion.ul>",")","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"staggerDirection","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Repeat","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["The number of times to repeat the transition. Set to `Infinity` for perpetual repeating.","","Without setting `repeatType`, this will loop the animation."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  repeat: Infinity,","  duration: 2","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ repeat: Infinity, duration: 2 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"repeat","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["How to repeat the animation. This can be either:","","\"loop\": Repeats the animation from the start","","\"reverse\": Alternates between forward and backwards playback","","\"mirror\": Switchs `from` and `to` alternately"]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  repeat: 1,","  repeatType: \"reverse\",","  duration: 2","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{","    repeat: 1,","    repeatType: \"reverse\",","    duration: 2","  }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"repeatType","Option":true,"Type":["Mapped",{"Name":"RepeatRepeatType","FullName":"RepeatRepeatType"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["When repeating an animation, `repeatDelay` will set the","duration of the time to wait, in seconds, between each repetition."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  repeat: Infinity,","  repeatDelay: 1","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ repeat: Infinity, repeatDelay: 1 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"repeatDelay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["An animation that animates between two or more values over a specific duration of time.","This is the default animation for non-physical values like `color` and `opacity`."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Tween","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"Repeat","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/types\".Repeat"}]],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Set `type` to `\"tween\"` to use a duration-based tween animation.","If any non-orchestration `transition` values are set without a `type` property,","this is used as the default animation."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame","  animate={{ opacity: 0 }}","  transition={{ duration: 2, type: \"tween\" }}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.path","  animate={{ pathLength: 1 }}","  transition={{ duration: 2, type: \"tween\" }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``type``","Option":true,"Type":["StringLiteral","tween"],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The duration of the tween animation. Set to `0.3` by default, 0r `0.8` if animating a series of keyframes."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame","  animate={{ opacity: 0 }}","  transition={{ duration: 2 }}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const variants = {","  visible: {","    opacity: 1,","    transition: { duration: 2 }","  }","}","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"duration","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The easing function to use. Set as one of the below.","","- The name of an existing easing function.","","- An array of four numbers to define a cubic bezier curve.","","- An easing function, that accepts and returns a value `0-1`.","","If the animating value is set as an array of multiple values for a keyframes","animation, `ease` can be set as an array of easing functions to set different easings between","each of those values."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  ease: [0.17, 0.67, 0.83, 0.67]","}","","<Frame","  animate={{ opacity: 0 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ opacity: 0 }}","  transition={{ ease: [0.17, 0.67, 0.83, 0.67] }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"ease","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"Easing","FullName":""}],["Array",["Mapped",{"Name":"Easing","FullName":""}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The duration of time already elapsed in the animation. Set to `0` by","default."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"elapsed","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["When animating keyframes, `times` can be used to determine where in the animation each keyframe is reached.","Each value in `times` is a value between `0` and `1`, representing `duration`.","","There must be the same number of `times` as there are keyframes.","Defaults to an array of evenly-spread durations."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  times: [0, 0.1, 0.9, 1]","}","","<Frame","  animate={{ scale: [0, 1, 0.5, 1] }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ scale: [0, 1, 0.5, 1] }}","  transition={{ times: [0, 0.1, 0.9, 1] }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"times","Option":true,"Type":["Array",["Mapped",{"Name":"float","FullName":"float"}]],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["When animating keyframes, `easings` can be used to define easing functions between each keyframe. This array should be one item fewer than the number of keyframes, as these easings apply to the transitions between the keyframes."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  easings: [\"easeIn\", \"easeOut\"]","}","","<Frame","  animate={{ backgroundColor: [\"#0f0\", \"#00f\", \"#f00\"] }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ backgroundColor: [\"#0f0\", \"#00f\", \"#f00\"] }}","  transition={{ easings: [\"easeIn\", \"easeOut\"] }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"easings","Option":true,"Type":["Array",["Mapped",{"Name":"Easing","FullName":""}]],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The value to animate from.","By default, this is the current state of the animating value."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  from: 90,","  duration: 2","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ from: 90, duration: 2 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"from","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``to``","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"ValueTarget","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"velocity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["An animation that simulates spring physics for realistic motion.","This is the default animation for physical values like `x`, `y`, `scale` and `rotate`."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Spring","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"Repeat","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/types\".Repeat"}]],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Set `type` to `\"spring\"` to animate using spring physics for natural","movement. Type is set to `\"spring\"` by default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\"","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ type: 'spring' }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["StringLiteral","spring"],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Stiffness of the spring. Higher values will create more sudden movement.","Set to `100` by default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\",","  stiffness: 50","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.section","  animate={{ rotate: 180 }}","  transition={{ type: 'spring', stiffness: 50 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"stiffness","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Strength of opposing force. If set to 0, spring will oscillate","indefinitely. Set to `10` by default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\",","  damping: 300","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.a","  animate={{ rotate: 180 }}","  transition={{ type: 'spring', damping: 300 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"damping","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Mass of the moving object. Higher values will result in more lethargic","movement. Set to `1` by default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\",","  mass: 0.5","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.feTurbulence","  animate={{ baseFrequency: 0.5 } as any}","  transition={{ type: \"spring\", mass: 0.5 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"mass","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The duration of the animation, defined in seconds. Spring animations can be a maximum of 10 seconds.","","If `bounce` is set, this defaults to `0.8`.","","Note: `duration` and `bounce` will be overridden if `stiffness`, `damping` or `mass` are set."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\",","  duration: 0.8","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ x: 100 }}","  transition={{ type: \"spring\", duration: 0.8 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"duration","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["`bounce` determines the \"bounciness\" of a spring animation.","","`0` is no bounce, and `1` is extremely bouncy.","","If `duration` is set, this defaults to `0.25`.","","Note: `bounce` and `duration` will be overridden if `stiffness`, `damping` or `mass` are set."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\",","  bounce: 0.25","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ x: 100 }}","  transition={{ type: \"spring\", bounce: 0.25 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"bounce","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["End animation if absolute speed (in units per second) drops below this","value and delta is smaller than `restDelta`. Set to `0.01` by default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\",","  restSpeed: 0.5","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ type: 'spring', restSpeed: 0.5 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"restSpeed","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["End animation if distance is below this value and speed is below","`restSpeed`. When animation ends, spring gets “snapped” to. Set to","`0.01` by default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\",","  restDelta: 0.5","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ type: 'spring', restDelta: 0.5 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"restDelta","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The value to animate from.","By default, this is the initial state of the animating value."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\",","  from: 90","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ type: 'spring', from: 90 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"from","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``to``","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"ValueTarget","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The initial velocity of the spring. By default this is the current velocity of the component."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"spring\",","  velocity: 2","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ type: 'spring', velocity: 2 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"velocity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["An animation that decelerates a value based on its initial velocity,","usually used to implement inertial scrolling.","","Optionally, `min` and `max` boundaries can be defined, and inertia","will snap to these with a spring animation.","","This animation will automatically precalculate a target value,","which can be modified with the `modifyTarget` property.","","This allows you to add snap-to-grid or similar functionality.","","Inertia is also the animation used for `dragTransition`, and can be configured via that prop."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Inertia","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Set `type` to animate using the inertia animation. Set to `\"tween\"` by","default. This can be used for natural deceleration, like momentum scrolling."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"inertia\",","  velocity: 50","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ type: \"inertia\", velocity: 50 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["StringLiteral","inertia"],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["A function that receives the automatically-calculated target and returns a new one. Useful for snapping the target to a grid."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  power: 0,","  // Snap calculated target to nearest 50 pixels","  modifyTarget: target => Math.round(target / 50) * 50","}","","<Frame","  drag","  dragTransition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragTransition={{","    power: 0,","    // Snap calculated target to nearest 50 pixels","    modifyTarget: target => Math.round(target / 50) * 50","  }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"modifyTarget","TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["If `min` or `max` is set, this affects the stiffness of the bounce","spring. Higher values will create more sudden movement. Set to `500` by","default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  min: 0,","  max: 100,","  bounceStiffness: 100","}","","<Frame","  drag","  dragTransition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragTransition={{","    min: 0,","    max: 100,","    bounceStiffness: 100","  }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"bounceStiffness","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["If `min` or `max` is set, this affects the damping of the bounce spring.","If set to `0`, spring will oscillate indefinitely. Set to `10` by","default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  min: 0,","  max: 100,","  bounceDamping: 8","}","","<Frame","  drag","  dragTransition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragTransition={{","    min: 0,","    max: 100,","    bounceDamping: 8","  }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"bounceDamping","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["A higher power value equals a further target. Set to `0.8` by default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  min: 0,","  max: 100,","  power: 0.2","}","","<Frame","  drag","  dragTransition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragTransition={{ power: 0.2 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"power","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Adjusting the time constant will change the duration of the","deceleration, thereby affecting its feel. Set to `700` by default."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  min: 0,","  max: 100,","  timeConstant: 200","}","","<Frame","  drag","  dragTransition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragTransition={{ timeConstant: 200 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"timeConstant","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["End the animation if the distance to the animation target is below this value, and the absolute speed is below `restSpeed`.","When the animation ends, the value gets snapped to the animation target. Set to `0.01` by default.","Generally the default values provide smooth animation endings, only in rare cases should you need to customize these."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  min: 0,","  max: 100,","  restDelta: 10","}","","<Frame","  drag","  dragTransition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragTransition={{ restDelta: 10 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"restDelta","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Minimum constraint. If set, the value will \"bump\" against this value (or immediately spring to it if the animation starts as less than this value)."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame","  drag","  dragTransition={{ min: 0, max: 100 }}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragTransition={{ min: 0, max: 100 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"min","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Maximum constraint. If set, the value will \"bump\" against this value (or immediately snap to it, if the initial animation value exceeds this value)."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame","  drag","  dragTransition={{ min: 0, max: 100 }}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragTransition={{ min: 0, max: 100 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"max","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The value to animate from. By default, this is the current state of the animating value."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  min: 0,","  max: 100,","  from: 50","}","","<Frame","  drag","  dragTransition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<Frame","  drag","  dragTransition={{ from: 50 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"from","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The initial velocity of the animation.","By default this is the current velocity of the component."]],["UnknownTag",{"Name":"library","Content":["```jsx","const transition = {","  type: \"inertia\",","  velocity: 200","}","","<Frame","  animate={{ rotate: 180 }}","  transition={transition}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  animate={{ rotate: 180 }}","  transition={{ type: 'inertia', velocity: 200 }}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"velocity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["Keyframes tweens between multiple `values`.","","These tweens can be arranged using the `duration`, `easings`, and `times` properties."]],["UnknownTag",{"Name":"internalremarks","Content":["We could possibly make the `type` property redundant, if not for all animations","then for this one quite easily."]}],["UnknownTag",{"Name":"internal","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Keyframes","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Set `type` to `\"keyframes\"` to animate using the keyframes animation.","Set to `\"tween\"` by default. This can be used to animate between a series of values."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["StringLiteral","keyframes"],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["An array of values to animate between."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"values","Option":false,"Type":["Mapped",{"Name":"KeyframesTarget","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["An array of numbers between 0 and 1, where `1` represents the `total` duration.","","Each value represents at which point during the animation each item in the animation target should be hit, so the array should be the same length as `values`.","","Defaults to an array of evenly-spread durations."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"times","Option":true,"Type":["Array",["Mapped",{"Name":"float","FullName":"float"}]],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["An array of easing functions for each generated tween, or a single easing function applied to all tweens.","","This array should be one item less than `values`, as these easings apply to the transitions *between* the `values`.","","<code language=\"jsx\">","const transition = {","   backgroundColor: {","     type: 'keyframes',","     easings: ['circIn', 'circOut']","   }","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"ease","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"Easing","FullName":""}],["Array",["Mapped",{"Name":"Easing","FullName":""}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Popmotion's easing prop to define individual easings. `ease` will be mapped to this prop in keyframes animations."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"easings","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"Easing","FullName":""}],["Array",["Mapped",{"Name":"Easing","FullName":""}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"elapsed","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The total duration of the animation. Set to `0.3` by default.","","<code language=\"jsx\">","const transition = {","   type: \"keyframes\",","   duration: 2","}","","&lt;Frame","   animate={{ opacity: 0 }}","   transition={transition}","/&gt;","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"duration","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"repeatDelay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"from","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``to``","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"ValueTarget","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"velocity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Just","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["StringLiteral","just"],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"``to``","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"ValueTarget","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"from","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"velocity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"None","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Set `type` to `false` for an instant transition."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"from","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"velocity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"PopmotionTransitionProps","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"Tween","FullName":""}],["Mapped",{"Name":"Spring","FullName":""}],["Mapped",{"Name":"Keyframes","FullName":""}],["Mapped",{"Name":"Inertia","FullName":""}],["Mapped",{"Name":"Just","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"PermissiveTransitionDefinition","FullName":"PermissiveTransitionDefinition","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"TransitionDefinition","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"Tween","FullName":""}],["Mapped",{"Name":"Spring","FullName":""}],["Mapped",{"Name":"Keyframes","FullName":""}],["Mapped",{"Name":"Inertia","FullName":""}],["Mapped",{"Name":"Just","FullName":""}],["Mapped",{"Name":"None","FullName":""}],["Mapped",{"Name":"PermissiveTransitionDefinition","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TransitionMap","FullName":"TransitionMap","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["Summary",["Transition props"]],["UnknownTag",{"Name":"public","Content":[]}]],"Name":"Transition","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[],"Name":"Omit","Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],"TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]]}],["Alias",{"Attributes":[],"Comments":[],"Name":"CSSPropertiesWithoutTransitionOrSingleTransforms","Type":["Generic",{"Type":["Mapped",{"Name":"Omit","FullName":""}],"TypeParameters":[["Mapped",{"Name":"CSSProperties","FullName":""}],["Mapped",{"Name":"CSSPropertiesWithoutTransitionOrSingleTransformsOmit","FullName":"CSSPropertiesWithoutTransitionOrSingleTransformsOmit"}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TargetProperties","FullName":"TargetProperties","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"MakeCustomValueType","FullName":"MakeCustomValueType","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"Target","Type":["Generic",{"Type":["Mapped",{"Name":"MakeCustomValueType","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TargetProperties","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"MakeKeyframes","FullName":"MakeKeyframes","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"TargetWithKeyframes","Type":["Generic",{"Type":["Mapped",{"Name":"MakeKeyframes","FullName":""}],"TypeParameters":[["Mapped",{"Name":"Target","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["Summary",["An object that specifies values to animate to. Each value may be set either as","a single value, or an array of values.","","It may also option contain these properties:","","- `transition`: Specifies transitions for all or individual values.","- `transitionEnd`: Specifies values to set when the animation finishes.","","<code language=\"jsx\">","const target = {","   x: \"0%\",","   opacity: 0,","   transition: { duration: 1 },","   transitionEnd: { display: \"none\" }","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"TargetAndTransition","FullName":"TargetAndTransition","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TargetResolver","FullName":"TargetResolver","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"custom","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Name":"current","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Target","FullName":""}]},{"Name":"velocity","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Target","FullName":""}]}],"ReturnType":["Mapped",{"Name":"TargetAndTransition","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"Variant","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"TargetResolver","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Variants","FullName":"Variants","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"Variant","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"CustomValueType","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"mix","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"from","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Name":"``to``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"p","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"toValue","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RepeatRepeatType","FullName":"RepeatRepeatType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"loop","Type":"String","Value":"loop"},{"Attributes":[],"Comments":[],"Name":"reverse","Type":"String","Value":"reverse"},{"Attributes":[],"Comments":[],"Name":"mirror","Type":"String","Value":"mirror"}]}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CSSPropertiesWithoutTransitionOrSingleTransformsOmit","FullName":"CSSPropertiesWithoutTransitionOrSingleTransformsOmit","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"transition","Type":"String","Value":"transition"},{"Attributes":[],"Comments":[],"Name":"rotate","Type":"String","Value":"rotate"},{"Attributes":[],"Comments":[],"Name":"scale","Type":"String","Value":"scale"},{"Attributes":[],"Comments":[],"Name":"perspective","Type":"String","Value":"perspective"}]}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\animate"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/animate.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_animate","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Animate a single value or a `MotionValue`.","","The first argument is either a `MotionValue` to animate, or an initial animation value.","","The second is either a value to animate to, or an array of keyframes to animate through.","","The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.","","Returns `AnimationPlaybackControls`, currently just a `stop` method.","","<code language=\"javascript\">","const x = useMotionValue(0)","","useEffect(() =&gt; {","   const controls = animate(x, 100, {","     type: \"spring\",","     stiffness: 2000,","     onComplete: v =&gt; {}","   })","","   return controls.stop","})","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"animate","TypeParameters":[["GenericTypeParameter",{"Name":"'V"}]],"Params":[{"Name":"from","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'V","FullName":""}]]}],["Mapped",{"Name":"'V","FullName":""}]]}]},{"Name":"``to``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"'V","FullName":""}],["Array",["Mapped",{"Name":"'V","FullName":""}]]]}]},{"Name":"transition","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"AnimationOptions","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'V","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"AnimationPlaybackControls","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Spring"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Tween"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"AnimationPlaybackControls","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"stop","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"AnimationPlaybackLifecycles","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'V"}]],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onUpdate","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"latest","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'V","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onPlay","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onComplete","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onRepeat","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onStop","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"AnimationOptions","FullName":"AnimationOptions","TypeParameters":[["GenericTypeParameter",{"Name":"'V"}]],"Inherits":[],"Members":[],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\animation-controls"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/animation-controls.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_animation_controls","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"animationControls","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"AnimationControls","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationControls"},"SpecifiedModule":"__animation_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"TargetAndTransition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetResolver"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Transition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"ControlsAnimationDefinition","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]],["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"TargetResolver","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"PendingAnimations","FullName":"PendingAnimations","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"animation","Option":false,"Type":["Tuple",{"Types":[["Mapped",{"Name":"ControlsAnimationDefinition","FullName":""}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"Transition","FullName":""}]]}]],"Kind":"Tuple"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"resolve","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"AnimationControls","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Subscribes a component's animation controls to this."]],["Param",{"Name":"controls","Content":["The controls to subscribe"]}],["Returns",["An unsubscribe function."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"subscribe","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Starts an animation on all linked components."]],["Remarks",["<code language=\"jsx\">","controls.start(\"variantLabel\")","controls.start({","  x: 0,","  transition: { duration: 1 }","})","</code>"]],["Param",{"Name":"definition","Content":["Properties or variant label to animate to"]}],["Param",{"Name":"transition","Content":["Optional `transtion` to apply to a variant"]}],["Returns",["- A `Promise` that resolves when all animations have completed."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"start","TypeParameters":[],"Params":[{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ControlsAnimationDefinition","FullName":""}]},{"Name":"transitionOverride","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Instantly set to a set of properties or a variant.","","<code language=\"jsx\">","// With properties","controls.set({ opacity: 0 })","","// With variants","controls.set(\"hidden\")","</code>"]],["UnknownTag",{"Name":"internalremarks","Content":["We could perform a similar trick to `.start` where this can be called before mount","and we maintain a list of of pending actions that get applied on mount. But the","expectation of `set` is that it happens synchronously and this would be difficult","to do before any children have even attached themselves. It's also poor practise","and we should discourage render-synchronous `.start` calls rather than lean into this."]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"set","TypeParameters":[],"Params":[{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ControlsAnimationDefinition","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Stops animations on all linked components.","","<code language=\"jsx\">","controls.stop()","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"stop","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"mount","TypeParameters":[],"Params":[],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\use-animated-state"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/use-animated-state.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_use_animated_state","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["This is not an officially supported API and may be removed","on any version."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useAnimatedState","TypeParameters":[],"Params":[{"Name":"initialState","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\use-animation"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/use-animation.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_use_animation","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Creates `AnimationControls`, which can be used to manually start, stop","and sequence animations on one or more components.","","The returned `AnimationControls` should be passed to the `animate` property","of the components you want to animate.","","These components can then be animated with the `start` method."]],["UnknownTag",{"Name":"library","Content":["```jsx","import * as React from 'react'","import { Frame, useAnimation } from 'framer'","","export function MyComponent(props) {","   const controls = useAnimation()","","   controls.start({","       x: 100,","       transition: { duration: 0.5 },","   })","","   return <Frame animate={controls} />","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","import * as React from 'react'","import { motion, useAnimation } from 'framer-motion'","","export function MyComponent(props) {","   const controls = useAnimation()","","   controls.start({","       x: 100,","       transition: { duration: 0.5 },","   })","","   return <motion.div animate={controls} />","}","```"]}],["Returns",["Animation controller with `start` and `stop` methods"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useAnimation","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"AnimationControls","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationControls"},"SpecifiedModule":"__animation_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","context\\LayoutGroupContext"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/context/LayoutGroupContext.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__context_LayoutGroupContext","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"LayoutGroupContext","Type":"TODO","IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","context\\LazyContext"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/context/LazyContext.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__context_LazyContext","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"LazyContext","Type":"TODO","IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"CreateVisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LazyContextProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"renderer","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"CreateVisualElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"strict","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","context\\MotionConfigContext"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/context/MotionConfigContext.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__context_MotionConfigContext","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"MotionConfigContext","Type":"TODO","IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Transition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TransformPoint2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"MotionConfigContext","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"transformPagePoint","Option":false,"Type":["Mapped",{"Name":"TransformPoint2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Determines whether this is a static context ie the Framer canvas. If so,","it'll disable all dynamic functionality."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"isStatic","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Defines a new default transition for the entire tree."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"transition","Option":true,"Type":["Mapped",{"Name":"Transition","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","context\\PresenceContext"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/context/PresenceContext.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__context_PresenceContext","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"PresenceContext","Type":"TODO","IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VariantLabels"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"PresenceContextProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"id","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"isPresent","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"register","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"id","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onExitComplete","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"id","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"initial","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VariantLabels","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"custom","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","context\\SharedLayoutContext"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/context/SharedLayoutContext.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__context_SharedLayoutContext","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"SharedLayoutContext","Type":"TODO","IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"FramerTreeLayoutContext","Type":"TODO","IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isSharedLayout","TypeParameters":[],"Params":[{"Name":"context","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"SyncLayoutBatcher","FullName":""}],["Mapped",{"Name":"SharedLayoutSyncMethods","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"SharedLayoutSyncMethods"},"SpecifiedModule":"__components_AnimateSharedLayout_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SyncLayoutBatcher"},"SpecifiedModule":"__components_AnimateSharedLayout_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","events\\event-info"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/events/event-info.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__events_event_info","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"extractEventInfo","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"pointType","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ExtractEventInfoPointType","FullName":"ExtractEventInfoPointType"}]}],"ReturnType":["Mapped",{"Name":"EventInfo","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getViewportPointFromEvent","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"EventInfo","FullName":""}],"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"wrapHandler","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"handler","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventListenerWithPointInfo","FullName":""}]},{"Name":"shouldFilterPrimaryPointer","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"EventListener","FullName":""}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ExtractEventInfoPointType","FullName":"ExtractEventInfoPointType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"page","Type":"String","Value":"page"},{"Attributes":[],"Comments":[],"Name":"client","Type":"String","Value":"client"}]}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"EventInfo"},"SpecifiedModule":"__events_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EventListenerWithPointInfo","FullName":"EventListenerWithPointInfo","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"e","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","events\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/events/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__events_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"RefObject"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Point2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"EventInfo","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"point","Option":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EventHandler","FullName":"EventHandler","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"ListenerControls","Type":["Tuple",{"Types":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Kind":"Tuple"}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[],"Name":"TargetOrRef","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"EventTarget","FullName":""}],["Generic",{"Type":["Mapped",{"Name":"RefObject","FullName":""}],"TypeParameters":[["Mapped",{"Name":"EventTarget","FullName":""}]]}]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[],"Name":"TargetBasedReturnType","Type":"TODO","TypeParameters":[["GenericTypeParameter",{"Name":"'Target"}]]}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","events\\use-dom-event"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/events/use-dom-event.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__events_use_dom_event","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"addDomEvent","TypeParameters":[],"Params":[{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventTarget","FullName":""}]},{"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"handler","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventListener","FullName":""}]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AddEventListenerOptions","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Attaches an event listener directly to the provided DOM element.","","Bypassing React's event system can be desirable, for instance when attaching non-passive","event handlers.","","<code language=\"jsx\">","const ref = useRef(null)","","useDomEvent(ref, 'wheel', onWheel, { passive: false })","","return &lt;div ref={ref} /&gt;","</code>"]],["Param",{"Name":"ref","Content":["React.RefObject that's been provided to the element you want to bind the listener to."]}],["Param",{"Name":"eventName","Content":["Name of the event you want listen for."]}],["Param",{"Name":"handler","Content":["Function to fire when receiving the event."]}],["Param",{"Name":"options","Content":["Options to pass to `Event.addEventListener`."]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useDomEvent","TypeParameters":[],"Params":[{"Name":"ref","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"RefObject","FullName":""}],"TypeParameters":[["Mapped",{"Name":"EventTarget","FullName":""}]]}]},{"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"handler","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"EventListener","FullName":""}]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AddEventListenerOptions","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"RefObject"},"SpecifiedModule":"React","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","events\\use-pointer-event"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/events/use-pointer-event.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__events_use_pointer_event","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"addPointerEvent","TypeParameters":[],"Params":[{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventTarget","FullName":""}]},{"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"handler","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventListenerWithPointInfo","FullName":""}]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AddEventListenerOptions","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"usePointerEvent","TypeParameters":[],"Params":[{"Name":"ref","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"RefObject","FullName":""}],"TypeParameters":[["Mapped",{"Name":"Element","FullName":""}]]}]},{"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"handler","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"EventListenerWithPointInfo","FullName":""}]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AddEventListenerOptions","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"RefObject"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"EventListenerWithPointInfo"},"SpecifiedModule":"__events_event_info","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","events\\utils"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/events/utils.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__events_utils","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"supportsPointerEvents","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"supportsTouchEvents","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"supportsMouseEvents","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\PanSession"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/PanSession.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_PanSession","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"PanSession","Option":false,"Type":["Mapped",{"Name":"PanSessionStatic","FullName":"PanSessionStatic"}],"Accessor":"ReadOnly","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Point2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TransformPoint2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Alias",{"Attributes":[],"Comments":[],"Name":"AnyPointerEvent","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["Summary",["Passed in to pan event handlers like `onPan` the `PanInfo` object contains","information about the current state of the tap gesture such as its","`point`, `delta`, `offset` and `velocity`."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onPan(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onPan={onPan} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div onPan={(event, info) => {","  console.log(info.point.x, info.point.y)","}} />","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"PanInfo","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Contains `x` and `y` values for the current pan position relative","to the device or page."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onPan(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onPan={onPan} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onPan(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onPan={onPan} />","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"point","Option":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Contains `x` and `y` values for the distance moved since","the last event."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onPan(event, info) {","  console.log(info.delta.x, info.delta.y)","}","","<Frame onPan={onPan} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onPan(event, info) {","  console.log(info.delta.x, info.delta.y)","}","","<motion.div onPan={onPan} />","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"delta","Option":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Contains `x` and `y` values for the distance moved from","the first pan event."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onPan(event, info) {","  console.log(info.offset.x, info.offset.y)","}","","<Frame onPan={onPan} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onPan(event, info) {","  console.log(info.offset.x, info.offset.y)","}","","<motion.div onPan={onPan} />","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"offset","Option":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Contains `x` and `y` values for the current velocity of the pointer."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onPan(event, info) {","  console.log(info.velocity.x, info.velocity.y)","}","","<Frame onPan={onPan} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onPan(event, info) {","  console.log(info.velocity.x, info.velocity.y)","}","","<motion.div onPan={onPan} />","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"velocity","Option":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PanHandler","FullName":"PanHandler","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Event","FullName":""}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PanSessionHandlers","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onSessionStart","Option":false,"Type":["Mapped",{"Name":"PanHandler","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onStart","Option":false,"Type":["Mapped",{"Name":"PanHandler","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onMove","Option":false,"Type":["Mapped",{"Name":"PanHandler","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onEnd","Option":false,"Type":["Mapped",{"Name":"PanHandler","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PanSessionOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transformPagePoint","Option":true,"Type":["Mapped",{"Name":"TransformPoint2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"IsStatic":false,"IsClass":true,"Name":"PanSession","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateHandlers","TypeParameters":[],"Params":[{"Name":"handlers","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"``end``","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"IsStatic":true,"IsClass":true,"Name":"PanSessionStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnyPointerEvent","FullName":""}]},{"Name":"handlers","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]},{"Name":"p2","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"PanSessionOptions","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"PanSession","FullName":"PanSession"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"EventInfo"},"SpecifiedModule":"__events_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VariantLabels"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetAndTransition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Point2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"PanInfo"},"SpecifiedModule":"__gestures_PanSession","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RemoveEvent","FullName":"RemoveEvent","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"FocusHandlers","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Properties or variant label to animate to while the focus gesture is recognised."]],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.input whileFocus={{ scale: 1.2 }} />","```"]}]],"Kind":"Regular","Index":null,"Name":"whileFocus","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VariantLabels","FullName":""}],["Mapped",{"Name":"TargetAndTransition","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["Passed in to tap event handlers like `onTap` the `TapInfo` object contains","information about the tap gesture such as it‘s location."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onTap(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onTap={onTap} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onTap(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onTap={onTap} />","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"TapInfo","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Contains `x` and `y` values for the tap gesture relative to the","device or page."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onTapStart(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onTapStart={onTapStart} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onTapStart(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onTapStart={onTapStart} />","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"point","Option":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"TapHandlers","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Callback when the tap gesture successfully ends on this element."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onTap(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onTap={onTap} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onTap(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onTap={onTap} />","```"]}],["Param",{"Name":"event","Content":["The originating pointer event."]}],["Param",{"Name":"info","Content":["An {@link TapInfo} object containing `x` and `y` values for the `point` relative to the device or page."]}]],"Kind":"Regular","IsStatic":false,"Name":"onTap","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TapInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback when the tap gesture starts on this element."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onTapStart(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onTapStart={onTapStart} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onTapStart(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onTapStart={onTapStart} />","```"]}],["Param",{"Name":"event","Content":["The originating pointer event."]}],["Param",{"Name":"info","Content":["An {@link TapInfo} object containing `x` and `y` values for the `point` relative to the device or page."]}]],"Kind":"Regular","IsStatic":false,"Name":"onTapStart","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TapInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback when the tap gesture ends outside this element."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onTapCancel(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onTapCancel={onTapCancel} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onTapCancel(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onTapCancel={onTapCancel} />","```"]}],["Param",{"Name":"event","Content":["The originating pointer event."]}],["Param",{"Name":"info","Content":["An {@link TapInfo} object containing `x` and `y` values for the `point` relative to the device or page."]}]],"Kind":"Regular","IsStatic":false,"Name":"onTapCancel","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TapInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Properties or variant label to animate to while the component is pressed."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame whileTap={{ scale: 0.8 }} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div whileTap={{ scale: 0.8 }} />","```"]}]],"Kind":"Regular","Index":null,"Name":"whileTap","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VariantLabels","FullName":""}],["Mapped",{"Name":"TargetAndTransition","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PanHandler","FullName":"PanHandler","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Event","FullName":""}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"PanHandlers","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when the pan gesture is recognised on this element.","","**Note:** For pan gestures to work correctly with touch input, the element needs","touch scrolling to be disabled on either x/y or both axis with the","[touch-action](https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action) CSS rule."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onPan(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onPan={onPan} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onPan(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onPan={onPan} />","```"]}],["Param",{"Name":"event","Content":["The originating pointer event."]}],["Param",{"Name":"info","Content":["A {@link PanInfo} object containing `x` and `y` values for:","","- `point`: Relative to the device or page.","- `delta`: Distance moved since the last event.","- `offset`: Offset from the original pan event.","- `velocity`: Current velocity of the pointer."]}]],"Kind":"Regular","IsStatic":false,"Name":"onPan","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when the pan gesture begins on this element."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onPanStart(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onPanStart={onPanStart} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onPanStart(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onPanStart={onPanStart} />","```"]}],["Param",{"Name":"event","Content":["The originating pointer event."]}],["Param",{"Name":"info","Content":["A {@link PanInfo} object containing `x`/`y` values for:","","- `point`: Relative to the device or page.","- `delta`: Distance moved since the last event.","- `offset`: Offset from the original pan event.","- `velocity`: Current velocity of the pointer."]}]],"Kind":"Regular","IsStatic":false,"Name":"onPanStart","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when we begin detecting a pan gesture. This","is analogous to `onMouseStart` or `onTouchStart`."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onPanSessionStart(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onPanSessionStart={onPanSessionStart} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onPanSessionStart(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onPanSessionStart={onPanSessionStart} />","```"]}],["Param",{"Name":"event","Content":["The originating pointer event."]}],["Param",{"Name":"info","Content":["An {@link EventInfo} object containing `x`/`y` values for:","","- `point`: Relative to the device or page."]}]],"Kind":"Regular","IsStatic":false,"Name":"onPanSessionStart","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when the pan gesture ends on this element."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onPanEnd(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame onPanEnd={onPanEnd} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onPanEnd(event, info) {","  console.log(info.point.x, info.point.y)","}","","<motion.div onPanEnd={onPanEnd} />","```"]}],["Param",{"Name":"event","Content":["The originating pointer event."]}],["Param",{"Name":"info","Content":["A {@link PanInfo} object containing `x`/`y` values for:","","- `point`: Relative to the device or page.","- `delta`: Distance moved since the last event.","- `offset`: Offset from the original pan event.","- `velocity`: Current velocity of the pointer."]}]],"Kind":"Regular","IsStatic":false,"Name":"onPanEnd","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"HoverHandlers","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Properties or variant label to animate to while the hover gesture is recognised."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame whileHover={{ scale: 1.2 }} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div whileHover={{ scale: 1.2 }} />","```"]}]],"Kind":"Regular","Index":null,"Name":"whileHover","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VariantLabels","FullName":""}],["Mapped",{"Name":"TargetAndTransition","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when pointer starts hovering over the component."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onHoverStart(event) {","  console.log(\"Hover starts\")","}","","<Frame onHoverStart={onHoverStart} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div onHoverStart={() => console.log('Hover starts')} />","```"]}]],"Kind":"Regular","IsStatic":false,"Name":"onHoverStart","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MouseEvent","FullName":""}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when pointer stops hovering over the component."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onHoverEnd(event) {","  console.log(\"Hover ends\")","}","","<Frame onHoverEnd={onHoverEnd} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div onHoverEnd={() => console.log(\"Hover ends\")} />","```"]}]],"Kind":"Regular","IsStatic":false,"Name":"onHoverEnd","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MouseEvent","FullName":""}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\use-focus-gesture"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/use-focus-gesture.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_use_focus_gesture","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Param",{"Name":"props","Content":[]}],["Param",{"Name":"ref","Content":[]}],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useFocusGesture","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureProps"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\use-hover-gesture"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/use-hover-gesture.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_use_hover_gesture","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useHoverGesture","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureProps"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\use-pan-gesture"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/use-pan-gesture.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_use_pan_gesture","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internalremarks","Content":["Currently this sets new pan gesture functions every render. The memo route has been explored","in the past but ultimately we're still creating new functions every render. An optimisation","to explore is creating the pan gestures and loading them into a `ref`."]}],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"usePanGesture","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureProps"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\use-tap-gesture"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/use-tap-gesture.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_use_tap_gesture","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useTapGesture","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureProps"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Create a `motion` component.","","This function accepts a Component argument, which can be either a string (ie \"div\"","for `motion.div`), or an actual React component.","","Alongside this is a config option which provides a way of rendering the provided","component \"offline\", or outside the React render cycle."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"createMotionComponent","TypeParameters":[["GenericTypeParameter",{"Name":"'Props","Constraint":null}],["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}]],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionComponentConfig","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ForwardRefExoticComponent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"RenderComponent"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureBundle"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"CreateVisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"UseVisualState"},"SpecifiedModule":"__motion_utils_use_visual_state","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MotionComponentConfig","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}]],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"preloadedFeatures","Option":true,"Type":["Mapped",{"Name":"FeatureBundle","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"createVisualElement","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"CreateVisualElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"useRender","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"RenderComponent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"useVisualState","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"UseVisualState","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"Component","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"React.ComponentType","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"CSSProperties"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationControls"},"SpecifiedModule":"__animation_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Variants"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Target"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Transition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetAndTransition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Omit"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MakeCustomValueType"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"DraggableProps"},"SpecifiedModule":"__gestures_drag_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"LayoutProps"},"SpecifiedModule":"__motion_features_layout_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElementLifecycles"},"SpecifiedModule":"__render_utils_lifecycles","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"PanHandlers"},"SpecifiedModule":"__gestures_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TapHandlers"},"SpecifiedModule":"__gestures_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HoverHandlers"},"SpecifiedModule":"__gestures_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"FocusHandlers"},"SpecifiedModule":"__gestures_types","ResolvedModule":null}]],["Alias",{"Attributes":[],"Comments":[],"Name":"MotionStyleProp","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"MotionValue","FullName":""}]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[["Summary",["Either a string, or array of strings, that reference variants defined via the `variants` prop."]],["UnknownTag",{"Name":"public","Content":[]}]],"Name":"VariantLabels","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TransformProperties","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"z","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"translateX","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"translateY","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"translateZ","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"rotate","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"rotateX","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"rotateY","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"rotateZ","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scale","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleX","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleY","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleZ","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"skew","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"skewX","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"skewY","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"originX","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"originY","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"originZ","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"perspective","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transformPerspective","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"SVGPathProperties","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"pathLength","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"pathOffset","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"pathSpacing","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CustomStyles","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Framer Library custom prop types. These are not actually supported in Motion - preferably","we'd have a way of external consumers injecting supported styles into this library."]]],"Kind":"Regular","Index":null,"Name":"size","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"radius","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"shadow","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"image","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"MakeMotion","Type":["Generic",{"Type":["Mapped",{"Name":"MakeCustomValueType","FullName":""}],"TypeParameters":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]]}],["Alias",{"Attributes":[],"Comments":[],"Name":"MotionCSS","Type":["Generic",{"Type":["Mapped",{"Name":"MakeMotion","FullName":""}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"Omit","FullName":""}],"TypeParameters":[["Mapped",{"Name":"CSSProperties","FullName":""}],["Mapped",{"Name":"MotionCSSMakeMotionOmit","FullName":"MotionCSSMakeMotionOmit"}]]}]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"MotionTransform","Type":["Generic",{"Type":["Mapped",{"Name":"MakeMotion","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TransformProperties","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"MotionStyle","FullName":"MotionStyle","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"OnUpdate","FullName":"OnUpdate","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Target","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"RelayoutInfo","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"delta","Option":false,"Type":["Mapped",{"Name":"RelayoutInfoDelta","FullName":"RelayoutInfoDelta"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"ResolveLayoutTransition","FullName":"ResolveLayoutTransition","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"RelayoutInfo","FullName":""}]}],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"Transition","FullName":""}],["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"AnimationProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Values to animate to, variant label(s), or `AnimationControls`."]],["UnknownTag",{"Name":"library","Content":["```jsx","// As values","<Frame animate={{ opacity: 1 }} />","","// As variant","<Frame animate=\"visible\" variants={variants} />","","// Multiple variants","<Frame animate={[\"visible\", \"active\"]} variants={variants} />","","// AnimationControls","<Frame animate={animation} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","// As values","<motion.div animate={{ opacity: 1 }} />","","// As variant","<motion.div animate=\"visible\" variants={variants} />","","// Multiple variants","<motion.div animate={[\"visible\", \"active\"]} variants={variants} />","","// AnimationControls","<motion.div animate={animation} />","```"]}]],"Kind":"Regular","Index":null,"Name":"animate","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"AnimationControls","FullName":""}],["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"VariantLabels","FullName":""}],["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["A target to animate to when this component is removed from the tree.","","This component **must** be the first animatable child of an `AnimatePresence` to enable this exit animation.","","This limitation exists because React doesn't allow components to defer unmounting until after","an animation is complete. Once this limitation is fixed, the `AnimatePresence` component will be unnecessary."]],["UnknownTag",{"Name":"library","Content":["```jsx","import { Frame, AnimatePresence } from 'framer'","","export function MyComponent(props) {","  return (","    <AnimatePresence>","       {props.isVisible && (","         <Frame","           initial={{ opacity: 0 }}","           animate={{ opacity: 1 }}","           exit={{ opacity: 0 }}","         />","       )}","    </AnimatePresence>","  )","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","import { AnimatePresence, motion } from 'framer-motion'","","export const MyComponent = ({ isVisible }) => {","  return (","    <AnimatePresence>","       {isVisible && (","         <motion.div","           initial={{ opacity: 0 }}","           animate={{ opacity: 1 }}","           exit={{ opacity: 0 }}","         />","       )}","    </AnimatePresence>","  )","}","```"]}]],"Kind":"Regular","Index":null,"Name":"exit","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"VariantLabels","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Variants allow you to define animation states and organise them by name. They allow","you to control animations throughout a component tree by switching a single `animate` prop.","","Using `transition` options like `delayChildren` and `staggerChildren`, you can orchestrate","when children animations play relative to their parent."]],["UnknownTag",{"Name":"library","Content":["After passing variants to one or more `Frame`'s `variants` prop, these variants","can be used in place of values on the `animate`, `initial`, `whileFocus`, `whileTap` and `whileHover` props.","","```jsx","const variants = {","  active: {","    backgroundColor: \"#f00\"","  },","  inactive: {","    backgroundColor: \"#fff\",","    transition: { duration: 2 }","  }","}","","<Frame variants={variants} animate=\"active\" />","```"]}],["UnknownTag",{"Name":"motion","Content":["After passing variants to one or more `motion` component's `variants` prop, these variants","can be used in place of values on the `animate`, `initial`, `whileFocus`, `whileTap` and `whileHover` props.","","```jsx","const variants = {","  active: {","      backgroundColor: \"#f00\"","  },","  inactive: {","    backgroundColor: \"#fff\",","    transition: { duration: 2 }","  }","}","","<motion.div variants={variants} animate=\"active\" />","```"]}]],"Kind":"Regular","Index":null,"Name":"variants","Option":true,"Type":["Mapped",{"Name":"Variants","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Default transition. If no `transition` is defined in `animate`, it will use the transition defined here."]],["UnknownTag",{"Name":"library","Content":["```jsx","const spring = {","  type: \"spring\",","  damping: 10,","  stiffness: 100","}","","<Frame transition={spring} animate={{ scale: 1.2 }} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const spring = {","  type: \"spring\",","  damping: 10,","  stiffness: 100","}","","<motion.div transition={spring} animate={{ scale: 1.2 }} />","```"]}]],"Kind":"Regular","Index":null,"Name":"transition","Option":true,"Type":["Mapped",{"Name":"Transition","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"MotionAdvancedProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Custom data to use to resolve dynamic variants differently for each animating component."]],["UnknownTag",{"Name":"library","Content":["```jsx","const variants = {","  visible: (custom) => ({","    opacity: 1,","    transition: { delay: custom * 0.2 }","  })","}","","<Frame custom={0} animate=\"visible\" variants={variants} />","<Frame custom={1} animate=\"visible\" variants={variants} />","<Frame custom={2} animate=\"visible\" variants={variants} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const variants = {","  visible: (custom) => ({","    opacity: 1,","    transition: { delay: custom * 0.2 }","  })","}","","<motion.div custom={0} animate=\"visible\" variants={variants} />","<motion.div custom={1} animate=\"visible\" variants={variants} />","<motion.div custom={2} animate=\"visible\" variants={variants} />","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"custom","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":["Set to `false` to prevent inheriting variant changes from its parent."]}]],"Kind":"Regular","Index":null,"Name":"``inherit``","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["Props for `motion` components."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"MotionProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimationProps","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/types\".AnimationProps"}],["Mapped",{"Name":"VisualElementLifecycles","FullName":"error"}],["Mapped",{"Name":"PanHandlers","FullName":"error"}],["Mapped",{"Name":"TapHandlers","FullName":"error"}],["Mapped",{"Name":"HoverHandlers","FullName":"error"}],["Mapped",{"Name":"FocusHandlers","FullName":"error"}],["Mapped",{"Name":"DraggableProps","FullName":"error"}],["Mapped",{"Name":"LayoutProps","FullName":"error"}],["Mapped",{"Name":"MotionAdvancedProps","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/types\".MotionAdvancedProps"}]],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Properties, variant label or array of variant labels to start in.","","Set to `false` to initialise with the values in `animate` (disabling the mount animation)"]],["UnknownTag",{"Name":"library","Content":["```jsx","// As values","<Frame initial={{ opacity: 1 }} />","","// As variant","<Frame initial=\"visible\" variants={variants} />","","// Multiple variants","<Frame initial={[\"visible\", \"active\"]} variants={variants} />","","// As false (disable mount animation)","<Frame initial={false} animate={{ opacity: 0 }} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","// As values","<motion.div initial={{ opacity: 1 }} />","","// As variant","<motion.div initial=\"visible\" variants={variants} />","","// Multiple variants","<motion.div initial={[\"visible\", \"active\"]} variants={variants} />","","// As false (disable mount animation)","<motion.div initial={false} animate={{ opacity: 0 }} />","```"]}]],"Kind":"Regular","Index":null,"Name":"initial","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}],["Mapped",{"Name":"Target","FullName":""}],["Mapped",{"Name":"VariantLabels","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"library","Content":["The React DOM `style` prop, useful for setting CSS properties that aren't explicitly exposed by `Frame` props.","","```jsx","<Frame style={{ mixBlendMode: \"difference\" }}  />","```"]}],["UnknownTag",{"Name":"motion","Content":["The React DOM `style` prop, enhanced with support for `MotionValue`s and separate `transform` values.","","```jsx","export const MyComponent = () => {","  const x = useMotionValue(0)","","  return <motion.div style={{ x, opacity: 1, scale: 0.5 }} />","}","```"]}]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Mapped",{"Name":"MotionStyle","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["By default, Framer Motion generates a `transform` property with a sensible transform order. `transformTemplate`","can be used to create a different order, or to append/preprend the automatically generated `transform` property."]],["UnknownTag",{"Name":"library","Content":["```jsx","function transformTemplate({ x, rotate }) {","  return `rotate(${rotate}deg) translateX(${x}px)`","}","","<Frame x={0} rotate={180} transformTemplate={transformTemplate} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  style={{ x: 0, rotate: 180 }}","  transformTemplate={","    ({ x, rotate }) => `rotate(${rotate}deg) translateX(${x}px)`","  }","/>","```"]}],["Param",{"Name":"transform","Content":["The latest animated transform props."]}],["Param",{"Name":"generatedTransform","Content":["The transform string as automatically generated by Framer Motion"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"transformTemplate","TypeParameters":[],"Params":[{"Name":"transform","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TransformProperties","FullName":""}]},{"Name":"generatedTransform","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["This allows values to be transformed before being animated or set as styles.","","For instance, this allows custom values in Framer Library like `size` to be converted into `width` and `height`.","It also allows us a chance to take a value like `Color` and convert it to an animatable color string.","","A few structural typing changes need making before this can be a public property:","- Allow `Target` values to be appended by user-defined types (delete `CustomStyles` - does `size` throw a type error?)","- Extract `CustomValueType` as a separate user-defined type (delete `CustomValueType` and animate a `Color` - does this throw a type error?)."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"transformValues","TypeParameters":[["GenericTypeParameter",{"Name":"'V","Constraint":["Mapped",{"Name":"ResolvedValues","FullName":""}]}]],"Params":[{"Name":"values","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'V","FullName":""}]}],"ReturnType":["Mapped",{"Name":"'V","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TransformTemplate","FullName":"TransformTemplate","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"transform","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TransformProperties","FullName":""}]},{"Name":"generatedTransform","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MotionCSSMakeMotionOmit","FullName":"MotionCSSMakeMotionOmit","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"rotate","Type":"String","Value":"rotate"},{"Attributes":[],"Comments":[],"Name":"scale","Type":"String","Value":"scale"},{"Attributes":[],"Comments":[],"Name":"perspective","Type":"String","Value":"perspective"}]}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RelayoutInfoDelta","FullName":"RelayoutInfoDelta","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"visualElement","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'MutableState"}],["GenericTypeParameter",{"Name":"'Options"}]],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualElementConfig","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'MutableState","FullName":""}],["Mapped",{"Name":"'Options","FullName":""}]]}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualElementOptions","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"'Options","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElementConfig"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElementOptions"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_types","Types":[["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"startAnimation"},"SpecifiedModule":"__animation_utils_transitions","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Presence"},"SpecifiedModule":"__components_AnimateSharedLayout_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SharedLayoutAnimationConfig"},"SpecifiedModule":"__components_AnimateSharedLayout_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Crossfader"},"SpecifiedModule":"__components_AnimateSharedLayout_utils_crossfader","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualState"},"SpecifiedModule":"__motion_utils_use_visual_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetAndTransition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Transition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Variant"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Point2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationState"},"SpecifiedModule":"__render_utils_animation_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"LifecycleManager"},"SpecifiedModule":"__render_utils_lifecycles","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"LayoutState"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetProjection"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"FlatTree"},"SpecifiedModule":"__render_utils_flat_tree","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MotionPoint","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"VisualElement","Type":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":"VisualElement"}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[],"Name":"VisualElement","Type":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":"VisualElement"}],"TypeParameters":[["GenericTypeParameter",{"Name":"'Instance","Default":null}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"TypeParameters":[["GenericTypeParameter",{"Name":"'Instance","Default":null}]]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VisualElement","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance","Default":null}],["GenericTypeParameter",{"Name":"'RenderState","Default":null}]],"Inherits":[["Mapped",{"Name":"LifecycleManager","FullName":"error"}]],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"treeType","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"depth","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"parent","Option":true,"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"children","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Set","FullName":""}],"TypeParameters":[["Mapped",{"Name":"VisualElement","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"variantChildren","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"Set","FullName":""}],"TypeParameters":[["Mapped",{"Name":"VisualElement","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"current","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"'Instance","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"layoutTree","Option":false,"Type":["Mapped",{"Name":"FlatTree","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"manuallyAnimateOnMount","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"blockInitialAnimation","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"presenceId","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"projection","Option":false,"Type":["Mapped",{"Name":"TargetProjection","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"isProjecting","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isMounted","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"mount","TypeParameters":[],"Params":[{"Name":"instance","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"unmount","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"isStatic","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getInstance","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"'Instance","FullName":""}]]}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"path","Option":false,"Type":["Array",["Mapped",{"Name":"VisualElement","FullName":""}]],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"sortNodePosition","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"addVariantChild","TypeParameters":[],"Params":[{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Union",{"Option":true,"Types":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getClosestVariantNode","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"VisualElement","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setCrossfader","TypeParameters":[],"Params":[{"Name":"crossfader","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Crossfader","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"layoutSafeToRemove","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"animateMotionValue","Option":true,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Visibility"]]],"Kind":"Regular","Index":null,"Name":"isVisible","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setVisibility","TypeParameters":[],"Params":[{"Name":"visibility","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"hasValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"addValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"value","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"removeValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"MotionValue","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"defaultValue","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Mapped",{"Name":"MotionValue","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"defaultValue","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"MotionValue","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"forEachValue","TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionValue","FullName":""}]},{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"readValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setBaseTarget","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getBaseTarget","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getStaticValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setStaticValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getLatestValues","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scheduleRender","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setProps","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getProps","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"MotionProps","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getVariant","TypeParameters":[],"Params":[{"Name":"name","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"Variant","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getDefaultTransition","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"Transition","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getVariantContext","TypeParameters":[],"Params":[{"Name":"startAtParent","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"VisualElementGetVariantContext","FullName":"VisualElementGetVariantContext"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"build","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"'RenderState","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"syncRender","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Layout projection - perhaps a candidate for lazy-loading","or an external interface. Move into Projection?"]]],"Kind":"Regular","Index":null,"Name":"isHoverEventsEnabled","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"suspendHoverEvents","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"enableLayoutProjection","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"lockProjectionTarget","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"unlockProjectionTarget","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"rebaseProjectionTarget","TypeParameters":[],"Params":[{"Name":"force","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]},{"Name":"sourceBox","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"measureViewportBox","TypeParameters":[],"Params":[{"Name":"withTransform","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"getLayoutState","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"LayoutState","FullName":""}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"getProjectionParent","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VisualElement","FullName":""}]]}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getProjectionAnimationProgress","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"MotionPoint","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setProjectionTargetAxis","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElementSetProjectionTargetAxisAxis","FullName":"VisualElementSetProjectionTargetAxisAxis"}]},{"Name":"min","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"max","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"isRelative","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"startLayoutAnimation","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElementStartLayoutAnimationAxis","FullName":"VisualElementStartLayoutAnimationAxis"}]},{"Name":"transition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]},{"Name":"isRelative","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"stopLayoutAnimation","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateLayoutProjection","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateTreeLayoutProjection","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resolveRelativeTargetBox","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"makeTargetAnimatable","TypeParameters":[],"Params":[{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetAndTransition","FullName":""}]},{"Name":"isLive","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"TargetAndTransition","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scheduleUpdateLayoutProjection","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"notifyLayoutReady","TypeParameters":[],"Params":[{"Name":"config","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"SharedLayoutAnimationConfig","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"pointTo","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resetTransform","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"restoreTransform","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"isPresent","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"presence","Option":false,"Type":["Mapped",{"Name":"Presence","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"isPresenceRoot","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"prevDragCursor","Option":true,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"prevViewportBox","Option":true,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getLayoutId","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"animationState","Option":true,"Type":["Mapped",{"Name":"AnimationState","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VisualElementSetProjectionTargetAxisAxis","FullName":"VisualElementSetProjectionTargetAxisAxis","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"x","Type":"String","Value":"x"},{"Attributes":[],"Comments":[],"Name":"y","Type":"String","Value":"y"}]}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VisualElementStartLayoutAnimationAxis","FullName":"VisualElementStartLayoutAnimationAxis","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"x","Type":"String","Value":"x"},{"Attributes":[],"Comments":[],"Name":"y","Type":"String","Value":"y"}]}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VisualElementConfig","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}],["GenericTypeParameter",{"Name":"'Options"}]],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"treeType","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getBaseTarget","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"MotionValue","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"build","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}]},{"Name":"renderState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'RenderState","FullName":""}]},{"Name":"latestValues","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"projection","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetProjection","FullName":""}]},{"Name":"layoutState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutState","FullName":""}]},{"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Options","FullName":""}]},{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"sortNodePosition","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"a","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]},{"Name":"b","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"makeTargetAnimatable","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}]},{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetAndTransition","FullName":""}]},{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"isLive","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"TargetAndTransition","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"measureViewportBox","TypeParameters":[],"Params":[{"Name":"instance","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]},{"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Options","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"readValueFromInstance","TypeParameters":[],"Params":[{"Name":"instance","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]},{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Options","FullName":""}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resetTransform","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}]},{"Name":"instance","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]},{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"restoreTransform","TypeParameters":[],"Params":[{"Name":"instance","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]},{"Name":"renderState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'RenderState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"render","TypeParameters":[],"Params":[{"Name":"instance","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]},{"Name":"renderState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'RenderState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"removeValueFromRenderState","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"renderState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'RenderState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scrapeMotionValuesFromProps","Option":false,"Type":["Mapped",{"Name":"ScrapeMotionValuesFromProps","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrapeMotionValuesFromProps","FullName":"ScrapeMotionValuesFromProps","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"ScrapeMotionValuesFromPropsInvokeReturn","FullName":"ScrapeMotionValuesFromPropsInvokeReturn"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrapeMotionValuesFromPropsInvokeReturn","FullName":"ScrapeMotionValuesFromPropsInvokeReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MotionValue","FullName":""}],["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"UseRenderState","Type":["Generic",{"Type":["Mapped",{"Name":"UseRenderState","FullName":"UseRenderState"}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UseRenderState","FullName":"UseRenderState","TypeParameters":[["GenericTypeParameter",{"Name":"'RenderState","Default":null}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"'RenderState","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"VisualElementOptions","Type":["Generic",{"Type":["Mapped",{"Name":"VisualElementOptions","FullName":"VisualElementOptions"}],"TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}]]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VisualElementOptions","FullName":"VisualElementOptions","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState","Default":null}]],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"visualState","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualState","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"parent","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":["TODO"]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"variantParent","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":["TODO"]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"snapshot","Option":true,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"presenceId","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"props","Option":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"blockInitialAnimation","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CreateVisualElement","FullName":"CreateVisualElement","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"Component","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"React.ComponentType","FullName":""}]]}]},{"Name":"options","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualElementOptions","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["A generic set of string/number values"]]],"IsStatic":false,"IsClass":false,"Name":"ResolvedValues","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VisualElementGetVariantContext","FullName":"VisualElementGetVariantContext","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"initial","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"animate","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"exit","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"whileHover","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"whileDrag","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"whileFocus","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"whileTap","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","types\\geometry"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/types/geometry.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__types_geometry","Types":[["Interface",{"Attributes":[],"Comments":[["Summary",["A typically user-facing description of a bounding box using traditional t/l/r/b"]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"BoundingBox2D","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"top","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"left","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"bottom","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"right","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["A 3D bounding box"]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"BoundingBox3D","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"BoundingBox2D","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/types/geometry\".BoundingBox2D"}]],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"front","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"back","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["A description of a single axis using non-axis specific terms to denote the min and max","value of any axis."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Axis","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"min","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"max","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["A description of a bounding box describing each axis individually. This allows us","to treate each axis generically."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"AxisBox2D","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"Axis","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"Axis","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"AxisBox3D","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AxisBox2D","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/types/geometry\".AxisBox2D"}]],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"z","Option":false,"Type":["Mapped",{"Name":"Axis","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["A description of a two-dimensional point"]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Point2D","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["A description of a three-dimensional point"]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Point3D","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"Point2D","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/types/geometry\".Point2D"}]],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"z","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["A function that accepts a two-dimensional point and returns a new one."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"TransformPoint2D","FullName":"TransformPoint2D","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["A function that accepts a two-dimensional point and returns a new one."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"point","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"Point2D","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["The transform delta that, when applied to Axis a will visually transform it to Axis b"]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"AxisDelta","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"translate","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scale","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"origin","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"originPoint","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["The transform delta that, when applied to Box a will visually transform it to Box b."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"BoxDelta","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"AxisDelta","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"AxisDelta","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\array"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/array.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_array","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"addUniqueItem","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"arr","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"'T","FullName":""}]]},{"Name":"item","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"removeItem","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"arr","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"'T","FullName":""}]]},{"Name":"item","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\each-axis"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/each-axis.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_each_axis","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"eachAxis","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"IExportsEachAxis","FullName":"IExportsEachAxis"}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}]}],"ReturnType":["Array",["Mapped",{"Name":"'T","FullName":""}]],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsEachAxis","FullName":"IExportsEachAxis","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"x","Type":"String","Value":"x"},{"Attributes":[],"Comments":[],"Name":"y","Type":"String","Value":"y"}]}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\is-browser"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/is-browser.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_is_browser","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"isBrowser","Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\is-numerical-string"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/is-numerical-string.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_is_numerical_string","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\""]]],"Export":null,"HasDeclare":true,"Name":"isNumericalString","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\is-ref-object"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/is-ref-object.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_is_ref_object","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isRefObject","TypeParameters":[["GenericTypeParameter",{"Name":"'E","Default":null}]],"Params":[{"Name":"ref","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MutableRefObject"},"SpecifiedModule":"React","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\noop"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/noop.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_noop","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"noop","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"any","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\resolve-value"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/resolve-value.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_resolve_value","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"isCustomValue","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"resolveFinalValueInKeyframes","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueTarget","FullName":""}]}],"ReturnType":["Mapped",{"Name":"SingleTarget","FullName":""}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"CustomValueType"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ValueTarget"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SingleTarget"},"SpecifiedModule":"Types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\shallow-compare"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/shallow-compare.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_shallow_compare","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"shallowCompare","TypeParameters":[],"Params":[{"Name":"next","Optional":false,"ParamArray":false,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]},{"Name":"prev","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\subscription-manager"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/subscription-manager.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_subscription_manager","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"SubscriptionManager","Option":false,"Type":["Mapped",{"Name":"SubscriptionManagerStatic","FullName":"SubscriptionManagerStatic"}],"Accessor":"ReadOnly","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GenericHandler","FullName":"GenericHandler","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"args","Optional":false,"ParamArray":true,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":true,"Name":"SubscriptionManager","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'Handler","Constraint":["Mapped",{"Name":"GenericHandler","FullName":""}]}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"add","TypeParameters":[],"Params":[{"Name":"handler","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Handler","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"notify","TypeParameters":[],"Params":[{"Name":"a","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Parameters","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Handler","FullName":""}]]}]},{"Name":"b","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Parameters","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Handler","FullName":""}]]}]},{"Name":"c","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Parameters","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Handler","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getSize","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"clear","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":true,"IsClass":true,"Name":"SubscriptionManagerStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[["GenericTypeParameter",{"Name":"'Handler","Constraint":["Mapped",{"Name":"GenericHandler","FullName":""}]}]],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SubscriptionManager","FullName":"SubscriptionManager"}],"TypeParameters":[["GenericTypeParameter",{"Name":"'Handler","Constraint":["Mapped",{"Name":"GenericHandler","FullName":""}]}]]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\time-conversion"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/time-conversion.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_time_conversion","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Converts seconds to milliseconds"]],["Param",{"Name":"seconds","Content":["Time in seconds."]}],["Returns",["milliseconds - Converted time in milliseconds."]]],"Export":null,"HasDeclare":true,"Name":"secondsToMilliseconds","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"seconds","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\transform"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/transform.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_transform","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Transforms numbers into other values by mapping them from an input range to an output range.","Returns the type of the input provided."]],["Remarks",["Given an input range of `[0, 200]` and an output range of","`[0, 1]`, this function will return a value between `0` and `1`.","The input range must be a linear series of numbers. The output range","can be any supported value type, such as numbers, colors, shadows, arrays, objects and more.","Every value in the output range must be of the same type and in the same format."]],["UnknownTag",{"Name":"library","Content":["```jsx","import * as React from \"react\"","import { Frame, transform } from \"framer\"","","export function MyComponent() {","   const inputRange = [0, 200]","   const outputRange = [0, 1]","   const output = transform(100, inputRange, outputRange)","","   // Returns 0.5","   return <Frame>{output}</Frame>","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","import * as React from \"react\"","import { transform } from \"framer-motion\"","","export function MyComponent() {","   const inputRange = [0, 200]","   const outputRange = [0, 1]","   const output = transform(100, inputRange, outputRange)","","   // Returns 0.5","   return <div>{output}</div>","}","```"]}],["Param",{"Name":"inputValue","Content":["A number to transform between the input and output ranges."]}],["Param",{"Name":"inputRange","Content":["A linear series of numbers (either all increasing or decreasing)."]}],["Param",{"Name":"outputRange","Content":["A series of numbers, colors, strings, or arrays/objects of those. Must be the same length as `inputRange`."]}],["Param",{"Name":"options","Content":["Clamp: Clamp values to within the given range. Defaults to `true`."]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"transform","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"inputValue","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"inputRange","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"float","FullName":"float"}]]},{"Name":"outputRange","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"'T","FullName":""}]]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"TransformOptions","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"library","Content":["For improved performance, `transform` can pre-calculate the function that will transform a value between two ranges.","Returns a function.","","```jsx","import * as React from \"react\"","import { Frame, transform } from \"framer\"","","export function MyComponent() {","    const inputRange = [-200, -100, 100, 200]","    const outputRange = [0, 1, 1, 0]","    const convertRange = transform(inputRange, outputRange)","    const output = convertRange(-150)","","    // Returns 0.5","    return <Frame>{output}</Frame>","}","","```"]}],["UnknownTag",{"Name":"motion","Content":["Transforms numbers into other values by mapping them from an input range to an output range.","","Given an input range of `[0, 200]` and an output range of","`[0, 1]`, this function will return a value between `0` and `1`.","The input range must be a linear series of numbers. The output range","can be any supported value type, such as numbers, colors, shadows, arrays, objects and more.","Every value in the output range must be of the same type and in the same format.","","```jsx","import * as React from \"react\"","import { Frame, transform } from \"framer\"","","export function MyComponent() {","    const inputRange = [-200, -100, 100, 200]","    const outputRange = [0, 1, 1, 0]","    const convertRange = transform(inputRange, outputRange)","    const output = convertRange(-150)","","    // Returns 0.5","    return <div>{output}</div>","}","","```"]}],["Param",{"Name":"inputRange","Content":["A linear series of numbers (either all increasing or decreasing)."]}],["Param",{"Name":"outputRange","Content":["A series of numbers, colors or strings. Must be the same length as `inputRange`."]}],["Param",{"Name":"options","Content":["Clamp: clamp values to within the given range. Defaults to `true`."]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"transform","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"inputRange","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"float","FullName":"float"}]]},{"Name":"outputRange","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"'T","FullName":""}]]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"TransformOptions","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"inputValue","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Easing"},"SpecifiedModule":"Popmotion","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"TransformOptions","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Clamp values to within the given range. Defaults to `true`"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"clamp","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Easing functions to use on the interpolations between each value in the input and output ranges.","","If provided as an array, the array must be one item shorter than the input and output ranges, as the easings apply to the transition **between** each."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"ease","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"Easing","FullName":""}],["Array",["Mapped",{"Name":"Easing","FullName":""}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"mixer","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"from","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]},{"Name":"``to``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\use-constant"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/use-constant.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_use_constant","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Creates a constant value over the lifecycle of a component.","","Even if `useMemo` is provided an empty array as its final argument, it doesn't offer","a guarantee that it won't re-run for performance reasons later on. By using `useConstant`","you can ensure that initialisers don't execute twice or more."]]],"Kind":"Regular","IsStatic":false,"Name":"useConstant","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"init","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Init","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Init","FullName":"Init","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\use-cycle"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/use-cycle.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_use_cycle","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments."]],["UnknownTag",{"Name":"library","Content":["```jsx","import * as React from \"react\"","import { Frame, useCycle } from \"framer\"","","export function MyComponent() {","  const [x, cycleX] = useCycle(0, 50, 100)","","  return (","    <Frame","      animate={{ x: x }}","      onTap={() => cycleX()}","     />","   )","}","```"]}],["UnknownTag",{"Name":"motion","Content":["An index value can be passed to the returned `cycle` function to cycle to a specific index.","","```jsx","import * as React from \"react\"","import { motion, useCycle } from \"framer-motion\"","","export const MyComponent = () => {","  const [x, cycleX] = useCycle(0, 50, 100)","","  return (","    <motion.div","      animate={{ x: x }}","      onTap={() => cycleX()}","     />","   )","}","```"]}],["Param",{"Name":"items","Content":["items to cycle through"]}],["Returns",["[currentState, cycleState]"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useCycle","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"items","Optional":false,"ParamArray":true,"Type":["Array",["Mapped",{"Name":"'T","FullName":""}]]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"CycleState","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Cycle","FullName":"Cycle","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"i","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"CycleState","Type":["Tuple",{"Types":[["Mapped",{"Name":"'T","FullName":""}],["Mapped",{"Name":"Cycle","FullName":""}]],"Kind":"Tuple"}],"TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]]}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\use-force-update"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/use-force-update.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_use_force_update","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useForceUpdate","TypeParameters":[],"Params":[],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\use-isomorphic-effect"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/use-isomorphic-effect.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_use_isomorphic_effect","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"useIsomorphicLayoutEffect","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"useEffect"},"SpecifiedModule":"React","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\use-reduced-motion"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/use-reduced-motion.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_use_reduced_motion","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.","","This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing","`x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.","","It will actively respond to changes and re-render your components with the latest setting.","","<code language=\"jsx\">","export function Sidebar({ isOpen }) {","   const shouldReduceMotion = useReducedMotion()","   const closedX = shouldReduceMotion ? 0 : \"-100%\"","","   return (","     &lt;motion.div animate={{","       opacity: isOpen ? 1 : 0,","       x: isOpen ? 0 : closedX","     }} /&gt;","   )","}","</code>"]],["Returns",["boolean"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useReducedMotion","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\use-unmount-effect"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/use-unmount-effect.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_use_unmount_effect","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useUnmountEffect","TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["`MotionValue` is used to track the state and velocity of motion values."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"MotionValue","Option":false,"Type":["Mapped",{"Name":"MotionValueStatic","FullName":"MotionValueStatic"}],"Accessor":"ReadOnly","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"motionValue","TypeParameters":[["GenericTypeParameter",{"Name":"'V"}]],"Params":[{"Name":"init","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'V","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'V","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"SubscriptionManager"},"SpecifiedModule":"__utils_subscription_manager","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Transformer","FullName":"Transformer","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"Subscriber","FullName":"Subscriber","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"PassiveEffect","FullName":"PassiveEffect","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]},{"Name":"safeSetter","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"StartAnimation","FullName":"StartAnimation","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"complete","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["Summary",["`MotionValue` is used to track the state and velocity of motion values."]],["UnknownTag",{"Name":"public","Content":[]}]],"Name":"MotionValue","Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":"MotionValue"}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["Summary",["`MotionValue` is used to track the state and velocity of motion values."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":true,"Name":"MotionValue","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'V","Default":null}]],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Functions to notify when the velocity updates."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"velocityUpdateSubscribers","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"SubscriptionManager","FullName":""}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"Subscriber","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Adds a function that will be notified when the `MotionValue` is updated.","","It returns a function that, when called, will cancel the subscription.","","When calling `onChange` inside a React component, it should be wrapped with the","`useEffect` hook. As it returns an unsubscribe function, this should be returned","from the `useEffect` function to ensure you don't add duplicate subscribers.."]],["UnknownTag",{"Name":"library","Content":["```jsx","function MyComponent() {","  const x = useMotionValue(0)","  const y = useMotionValue(0)","  const opacity = useMotionValue(1)","","  useEffect(() => {","    function updateOpacity() {","      const maxXY = Math.max(x.get(), y.get())","      const newOpacity = transform(maxXY, [0, 100], [1, 0])","      opacity.set(newOpacity)","    }","","    const unsubscribeX = x.onChange(updateOpacity)","    const unsubscribeY = y.onChange(updateOpacity)","","    return () => {","      unsubscribeX()","      unsubscribeY()","    }","  }, [])","","  return <Frame x={x} />","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","export const MyComponent = () => {","  const x = useMotionValue(0)","  const y = useMotionValue(0)","  const opacity = useMotionValue(1)","","  useEffect(() => {","    function updateOpacity() {","      const maxXY = Math.max(x.get(), y.get())","      const newOpacity = transform(maxXY, [0, 100], [1, 0])","      opacity.set(newOpacity)","    }","","    const unsubscribeX = x.onChange(updateOpacity)","    const unsubscribeY = y.onChange(updateOpacity)","","    return () => {","      unsubscribeX()","      unsubscribeY()","    }","  }, [])","","  return <motion.div style={{ x }} />","}","```"]}],["UnknownTag",{"Name":"internalremarks","Content":["We could look into a `useOnChange` hook if the above lifecycle management proves confusing.","","```jsx","useOnChange(x, () => {})","```"]}],["Param",{"Name":"subscriber","Content":["A function that receives the latest value."]}],["Returns",["A function that, when called, will cancel this subscription."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onChange","TypeParameters":[],"Params":[{"Name":"subscription","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Subscriber","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'V","FullName":""}]]}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"clearListeners","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Adds a function that will be notified when the `MotionValue` requests a render."]],["Param",{"Name":"subscriber","Content":["A function that's provided the latest value."]}],["Returns",["A function that, when called, will cancel this subscription."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onRenderRequest","TypeParameters":[],"Params":[{"Name":"subscription","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Subscriber","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'V","FullName":""}]]}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Attaches a passive effect to the `MotionValue`."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"attach","TypeParameters":[],"Params":[{"Name":"passiveEffect","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"PassiveEffect","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'V","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Sets the state of the `MotionValue`."]],["Remarks",["<code language=\"jsx\">","const x = useMotionValue(0)","x.set(10)","</code>"]],["Param",{"Name":"latest","Content":["Latest value to set."]}],["Param",{"Name":"render","Content":["Whether to notify render subscribers. Defaults to `true`"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"set","TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'V","FullName":""}]},{"Name":"render","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"updateAndNotify","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'V","FullName":""}]},{"Name":"render","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Returns the latest state of `MotionValue`"]],["Returns",["- The latest state of `MotionValue`"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"get","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"'V","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"getPrevious","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"'V","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Returns the latest velocity of `MotionValue`"]],["Returns",["- The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"getVelocity","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"hasAnimated","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Registers a new animation to control this `MotionValue`. Only one","animation can drive a `MotionValue` at one time.","","<code language=\"jsx\">","value.start()","</code>"]],["Param",{"Name":"animation","Content":["A function that starts the provided animation"]}],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"start","TypeParameters":[],"Params":[{"Name":"animation","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"StartAnimation","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Stop the currently active animation."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"stop","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Returns `true` if this value is currently animating."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"isAnimating","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Destroy and clean up subscribers to this `MotionValue`.","","The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically","handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually","created a `MotionValue` via the `motionValue` function."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"destroy","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["`MotionValue` is used to track the state and velocity of motion values."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":true,"IsClass":true,"Name":"MotionValueStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Param",{"Name":"init","Content":["The initiating value"]}],["Param",{"Name":"config","Content":["Optional configuration options","","-  `transformer`: A function to transform incoming values with."]}],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Name":"init","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'V","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":"MotionValue"}],"TypeParameters":[["GenericTypeParameter",{"Name":"'V","Default":null}]]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\use-combine-values"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/use-combine-values.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_use_combine_values","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useCombineMotionValues","TypeParameters":[["GenericTypeParameter",{"Name":"'R"}]],"Params":[{"Name":"values","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"MotionValue","FullName":""}]]},{"Name":"combineValues","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"'R","FullName":""}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'R","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"_","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\use-inverted-scale"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/use-inverted-scale.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_use_inverted_scale","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"invertScale","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"scale","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[[{"Namespace":null,"Name":"Obsolete","Arguments":[{"Name":null,"Value":"\"\""}]}]],"Comments":[["Summary",["Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse","of their respective parent scales.","","This is useful for undoing the distortion of content when scaling a parent component.","","By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.","By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output","of those instead."]],["UnknownTag",{"Name":"motion","Content":["```jsx","const MyComponent = () => {","  const { scaleX, scaleY } = useInvertedScale()","  return <motion.div style={{ scaleX, scaleY }} />","}","```"]}],["UnknownTag",{"Name":"library","Content":["```jsx","function MyComponent() {","  const { scaleX, scaleY } = useInvertedScale()","  return <Frame scaleX={scaleX} scaleY={scaleY} />","}","```"]}],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useInvertedScale","TypeParameters":[],"Params":[{"Name":"scale","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]}],"ReturnType":["Mapped",{"Name":"ScaleMotionValues","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"__value_","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScaleMotionValues","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleX","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleY","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\use-motion-template"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/use-motion-template.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_use_motion_template","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Combine multiple motion values into a new one using a string template literal.","","<code language=\"jsx\">","import {","   motion,","   useSpring,","   useMotionValue,","   useMotionTemplate","} from \"framer-motion\"","","function Component() {","   const shadowX = useSpring(0)","   const shadowY = useMotionValue(0)","   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`","","   return &lt;motion.div style={{ filter: shadow }} /&gt;","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useMotionTemplate","TypeParameters":[],"Params":[{"Name":"fragments","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TemplateStringsArray","FullName":""}]},{"Name":"values","Optional":false,"ParamArray":true,"Type":["Array",["Mapped",{"Name":"MotionValue","FullName":""}]]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"_","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\use-motion-value"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/use-motion-value.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_use_motion_value","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Creates a `MotionValue` to track the state and velocity of a value.","","Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop."]],["UnknownTag",{"Name":"library","Content":["```jsx","export function MyComponent() {","  const scale = useMotionValue(1)","","  return <Frame scale={scale} />","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","export const MyComponent = () => {","  const scale = useMotionValue(1)","","  return <motion.div style={{ scale }} />","}","```"]}],["Param",{"Name":"initial","Content":["The initial state."]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useMotionValue","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"initial","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"_","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\use-on-change"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/use-on-change.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_use_on_change","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useOnChange","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}],["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}]},{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Subscriber","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useMultiOnChange","TypeParameters":[],"Params":[{"Name":"values","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"MotionValue","FullName":""}]]},{"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"__value_","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Subscriber"},"SpecifiedModule":"__value_","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\use-spring"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/use-spring.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_use_spring","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.","","It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber","to another `MotionValue`."]],["Remarks",["<code language=\"jsx\">","const x = useSpring(0, { stiffness: 300 })","const y = useSpring(x, { damping: 10 })","</code>"]],["Param",{"Name":"inputValue","Content":["`MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value."]}],["Param",{"Name":"springConfig","Content":["Configuration options for the spring."]}],["Returns",["`MotionValue`"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useSpring","TypeParameters":[],"Params":[{"Name":"source","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MotionValue","FullName":""}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Name":"config","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"SpringOptions","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"SpringOptions"},"SpecifiedModule":"Popmotion","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\use-transform"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/use-transform.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_use_transform","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Create a `MotionValue` that transforms the output of another `MotionValue` by mapping it from one range of values into another."]],["Remarks",["Given an input range of `[-200, -100, 100, 200]` and an output range of","`[0, 1, 1, 0]`, the returned `MotionValue` will:","","- When provided a value between `-200` and `-100`, will return a value between `0` and  `1`.","- When provided a value between `-100` and `100`, will return `1`.","- When provided a value between `100` and `200`, will return a value between `1` and  `0`","","","The input range must be a linear series of numbers. The output range","can be any value type supported by Framer Motion: numbers, colors, shadows, etc.","","Every value in the output range must be of the same type and in the same format."]],["UnknownTag",{"Name":"library","Content":["```jsx","export function MyComponent() {","  const x = useMotionValue(0)","  const xRange = [-200, -100, 100, 200]","  const opacityRange = [0, 1, 1, 0]","  const opacity = useTransform(x, xRange, opacityRange)","","  return <Frame x={x} animate={{ x: 200 }} opacity={opacity} />","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","export const MyComponent = () => {","  const x = useMotionValue(0)","  const xRange = [-200, -100, 100, 200]","  const opacityRange = [0, 1, 1, 0]","  const opacity = useTransform(x, xRange, opacityRange)","","  return (","    <motion.div","      animate={{ x: 200 }}","      style={{ opacity, x }}","    />","  )","}","```"]}],["Param",{"Name":"inputValue","Content":["`MotionValue`"]}],["Param",{"Name":"inputRange","Content":["A linear series of numbers (either all increasing or decreasing)"]}],["Param",{"Name":"outputRange","Content":["A series of numbers, colors or strings. Must be the same length as `inputRange`."]}],["Param",{"Name":"options","Content":["","- clamp: boolean. Clamp values to within the given range. Defaults to `true`","- ease: EasingFunction[]. Easing functions to use on the interpolations between each value in the input and output ranges. If provided as an array, the array must be one item shorter than the input and output ranges, as the easings apply to the transition between each."]}],["Returns",["`MotionValue`"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useTransform","TypeParameters":[["GenericTypeParameter",{"Name":"'I"}],["GenericTypeParameter",{"Name":"'O"}]],"Params":[{"Name":"value","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Name":"inputRange","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"InputRange","FullName":""}]},{"Name":"outputRange","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"'O","FullName":""}]]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"TransformOptions","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'O","FullName":""}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'O","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Create a `MotionValue` that transforms the output of another `MotionValue` through a function.","In this example, `y` will always be double `x`."]],["UnknownTag",{"Name":"library","Content":["```jsx","import * as React from \"react\"","import { Frame, useMotionValue, useTransform } from \"framer\"","","export function MyComponent() {","  const x = useMotionValue(10)","  const y = useTransform(x, value => value * 2)","","  return <Frame x={x} y={y} />","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","export const MyComponent = () => {","  const x = useMotionValue(10)","  const y = useTransform(x, value => value * 2)","","  return <motion.div style={{ x, y }} />","}","```"]}],["Param",{"Name":"input","Content":["A `MotionValue` that will pass its latest value through `transform` to update the returned `MotionValue`."]}],["Param",{"Name":"transform","Content":["A function that accepts the latest value from `input` and returns a new value."]}],["Returns",["`MotionValue`"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useTransform","TypeParameters":[["GenericTypeParameter",{"Name":"'I"}],["GenericTypeParameter",{"Name":"'O"}]],"Params":[{"Name":"input","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'I","FullName":""}]]}]},{"Name":"transformer","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"SingleTransformer","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'I","FullName":""}],["Mapped",{"Name":"'O","FullName":""}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'O","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Pass an array of `MotionValue`s and a function to combine them. In this example, `z` will be the `x` multiplied by `y`."]],["UnknownTag",{"Name":"library","Content":["```jsx","import * as React from \"react\"","import { Frame, useMotionValue, useTransform } from \"framer\"","","export function MyComponent() {","  const x = useMotionValue(0)","  const y = useMotionValue(0)","  const z = useTransform([x, y], [latestX, latestY] => latestX * latestY)","","  return <Frame x={x} y={y} z={z} />","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","export const MyComponent = () => {","  const x = useMotionValue(0)","  const y = useMotionValue(0)","  const z = useTransform([x, y], [latestX, latestY] => latestX * latestY)","","  return <motion.div style={{ x, y, z }} />","}","```"]}],["Param",{"Name":"input","Content":["An array of `MotionValue`s that will pass their latest values through `transform` to update the returned `MotionValue`."]}],["Param",{"Name":"transform","Content":["A function that accepts the latest values from `input` and returns a new value."]}],["Returns",["`MotionValue`"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useTransform","TypeParameters":[["GenericTypeParameter",{"Name":"'I"}],["GenericTypeParameter",{"Name":"'O"}]],"Params":[{"Name":"input","Optional":false,"ParamArray":false,"Type":["Array",["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]]}]]},{"Name":"transformer","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MultiTransformer","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'I","FullName":""}],["Mapped",{"Name":"'O","FullName":""}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'O","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TransformOptions"},"SpecifiedModule":"__utils_transform","ResolvedModule":null}]],["Alias",{"Attributes":[],"Comments":[],"Name":"InputRange","Type":["Array",["Mapped",{"Name":"float","FullName":"float"}]],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SingleTransformer","FullName":"SingleTransformer","TypeParameters":[["GenericTypeParameter",{"Name":"'I"}],["GenericTypeParameter",{"Name":"'O"}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"input","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'I","FullName":""}]}],"ReturnType":["Mapped",{"Name":"'O","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MultiTransformer","FullName":"MultiTransformer","TypeParameters":[["GenericTypeParameter",{"Name":"'I"}],["GenericTypeParameter",{"Name":"'O"}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"input","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"'I","FullName":""}]]}],"ReturnType":["Mapped",{"Name":"'O","FullName":""}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\use-velocity"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/use-velocity.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_use_velocity","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.","","<code language=\"javascript\">","const x = useMotionValue(0)","const xVelocity = useVelocity(x)","const xAcceleration = useVelocity(xVelocity)","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useVelocity","TypeParameters":[],"Params":[{"Name":"value","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"_","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\utils\\default-transitions"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/utils/default-transitions.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_utils_default_transitions","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"underDampedSpring","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"IExportsUnderDampedSpring","FullName":"IExportsUnderDampedSpring"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"criticallyDampedSpring","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"``to``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SingleTarget","FullName":""}]}],"ReturnType":["Mapped",{"Name":"IExportsUnderDampedSpring","FullName":"IExportsUnderDampedSpring"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"linearTween","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"IExportsLinearTween","FullName":"IExportsLinearTween"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"getDefaultTransition","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"valueKey","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"``to``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueTarget","FullName":""}]}],"ReturnType":["Mapped",{"Name":"PopmotionTransitionProps","FullName":""}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"PopmotionTransitionProps"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ValueTarget"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SingleTarget"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsUnderDampedSpring","FullName":"IExportsUnderDampedSpring","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"stiffness","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"damping","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"restDelta","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"restSpeed","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsLinearTween","FullName":"IExportsLinearTween","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"ease","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"duration","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\utils\\easing"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/utils/easing.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_utils_easing","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"easingDefinitionToFunction","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Easing","FullName":""}]}],"ReturnType":"TODO","Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"isEasingArray","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"ease","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Easing"},"SpecifiedModule":"Types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\utils\\is-animatable"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/utils/is-animatable.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_utils_is_animatable","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Check if a value is animatable. Examples:","","✅: 100, \"100px\", \"#fff\"","❌: \"block\", \"url(2.jpg)\""]],["Param",{"Name":"value","Content":[]}],["UnknownTag",{"Name":"internal","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"isAnimatable","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValueTarget","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValueTarget"},"SpecifiedModule":"Types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\utils\\is-animation-controls"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/utils/is-animation-controls.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_utils_is_animation_controls","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isAnimationControls","TypeParameters":[],"Params":[{"Name":"v","Optional":true,"ParamArray":false,"Type":"TODO"}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationControls"},"SpecifiedModule":"__animation_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\utils\\is-keyframes-target"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/utils/is-keyframes-target.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_utils_is_keyframes_target","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"isKeyframesTarget","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueTarget","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ValueTarget"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"KeyframesTarget"},"SpecifiedModule":"Types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\utils\\transitions"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/utils/transitions.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_utils_transitions","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Decide whether a transition is defined on a given Transition.","This filters out orchestration options and returns true","if any options are left."]]],"Kind":"Regular","IsStatic":false,"Name":"isTransitionDefined","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Convert Framer Motion's Transition type into Popmotion-compatible options."]]],"Kind":"Regular","IsStatic":false,"Name":"convertTransitionToAnimationOptions","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PermissiveTransitionDefinition","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AnimationOptions","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Get the delay for a value by checking Transition with decreasing specificity."]]],"Kind":"Regular","IsStatic":false,"Name":"getDelayFromTransition","TypeParameters":[],"Params":[{"Name":"transition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]},{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"hydrateKeyframes","TypeParameters":[],"Params":[{"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PermissiveTransitionDefinition","FullName":""}]}],"ReturnType":["Mapped",{"Name":"PermissiveTransitionDefinition","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getPopmotionAnimationOptions","TypeParameters":[],"Params":[{"Name":"transition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PermissiveTransitionDefinition","FullName":""}]},{"Name":"options","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isZero","TypeParameters":[],"Params":[{"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getZeroUnit","TypeParameters":[],"Params":[{"Name":"potentialUnitType","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getValueTransition","TypeParameters":[],"Params":[{"Name":"transition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]},{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Start animation on a MotionValue. This function is an interface between","Framer Motion and Popmotion"]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"startAnimation","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionValue","FullName":""}]},{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValueTarget","FullName":""}]},{"Name":"transition","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Transition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"PermissiveTransitionDefinition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValueTarget"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationOptions"},"SpecifiedModule":"Popmotion","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","animation\\utils\\variant-resolvers"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/animation/utils/variant-resolvers.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__animation_utils_variant_resolvers","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"resolveVariantLabels","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"variant","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"UnresolvedVariant","FullName":""}]}],"ReturnType":["Mapped",{"Name":"VariantNameList","FullName":""}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[["Summary",["Hooks in React sometimes accept a dependency array as their final argument. (ie useEffect/useMemo)","When values in this array change, React re-runs the dependency. However if the array","contains a variable number of items, React throws an error."]]],"Export":null,"HasDeclare":true,"Name":"asDependencyList","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"list","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VariantNameList","FullName":""}]}],"ReturnType":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]],["Alias",{"Attributes":[],"Comments":[],"Name":"VariantNameList","Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[],"Name":"VariantName","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"VariantNameList","FullName":""}]]}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[],"Name":"UnresolvedVariant","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VariantName","FullName":""}],["Mapped",{"Name":"MotionValue","FullName":""}]]}],"TypeParameters":[]}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimatePresence\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimatePresence/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimatePresence_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["`AnimatePresence` enables the animation of components that have been removed from the tree.","","When adding/removing more than a single child, every child **must** be given a unique `key` prop."]],["UnknownTag",{"Name":"library","Content":["Any `Frame` components that have an `exit` property defined will animate out when removed from","the tree.","","```jsx","import { Frame, AnimatePresence } from 'framer'","","// As items are added and removed from `items`","export function Items({ items }) {","  return (","    <AnimatePresence>","      {items.map(item => (","        <Frame","          key={item.id}","          initial={{ opacity: 0 }}","          animate={{ opacity: 1 }}","          exit={{ opacity: 0 }}","        />","      ))}","    </AnimatePresence>","  )","}","```","","You can sequence exit animations throughout a tree using variants."]}],["UnknownTag",{"Name":"motion","Content":["Any `motion` components that have an `exit` property defined will animate out when removed from","the tree.","","```jsx","import { motion, AnimatePresence } from 'framer-motion'","","export const Items = ({ items }) => (","  <AnimatePresence>","    {items.map(item => (","      <motion.div","        key={item.id}","        initial={{ opacity: 0 }}","        animate={{ opacity: 1 }}","        exit={{ opacity: 0 }}","      />","    ))}","  </AnimatePresence>",")","```","","You can sequence exit animations throughout a tree using variants.","","If a child contains multiple `motion` components with `exit` props, it will only unmount the child","once all `motion` components have finished animating out. Likewise, any components using","`usePresence` all need to call `safeToRemove`."]}],["UnknownTag",{"Name":"public","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"AnimatePresence","Type":["Generic",{"Type":["Mapped",{"Name":"React.FunctionComponent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"AnimatePresenceProps","FullName":""}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnimatePresenceProps"},"SpecifiedModule":"__components_AnimatePresence_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimatePresence\\PresenceChild"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimatePresence/PresenceChild.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimatePresence_PresenceChild","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"PresenceChild","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PresenceChildProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VariantLabels"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PresenceChildProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"children","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"isPresent","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onExitComplete","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"initial","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VariantLabels","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"custom","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"presenceAffectsLayout","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimatePresence\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimatePresence/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimatePresence_types","Types":[["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"AnimatePresenceProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["By passing `initial={false}`, `AnimatePresence` will disable any initial animations on children","that are present when the component is first rendered."]],["UnknownTag",{"Name":"library","Content":["```jsx","<AnimatePresence initial={false}>","  {isVisible && (","    <Frame","      key=\"modal\"","      initial={{ opacity: 0 }}","      animate={{ opacity: 1 }}","      exit={{ opacity: 0 }}","    />","  )}","</AnimatePresence>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<AnimatePresence initial={false}>","  {isVisible && (","    <motion.div","      key=\"modal\"","      initial={{ opacity: 0 }}","      animate={{ opacity: 1 }}","      exit={{ opacity: 0 }}","    />","  )}","</AnimatePresence>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"initial","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["When a component is removed, there's no longer a chance to update its props. So if a component's `exit`","prop is defined as a dynamic variant and you want to pass a new `custom` prop, you can do so via `AnimatePresence`.","This will ensure all leaving components animate using the latest data."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"custom","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Fires when all exiting nodes have completed animating out."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"onExitComplete","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["If set to `true`, `AnimatePresence` will only render one component at a time. The exiting component","will finished its exit animation before the entering component is rendered."]],["UnknownTag",{"Name":"library","Content":["```jsx","function MyComponent({ currentItem }) {","  return (","    <AnimatePresence exitBeforeEnter>","      <Frame key={currentItem} exit={{ opacity: 0 }} />","    </AnimatePresence>","  )","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const MyComponent = ({ currentItem }) => (","  <AnimatePresence exitBeforeEnter>","    <motion.div key={currentItem} exit={{ opacity: 0 }} />","  </AnimatePresence>",")","```"]}],["UnknownTag",{"Name":"beta","Content":[]}]],"Kind":"Regular","Index":null,"Name":"exitBeforeEnter","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Used in Framer to flag that sibling children *shouldn't* re-render as a result of a","child being removed."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"presenceAffectsLayout","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimatePresence\\use-presence"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimatePresence/use-presence.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimatePresence_use_presence","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["When a component is the child of `AnimatePresence`, it can use `usePresence`","to access information about whether it's still present in the React tree.","","<code language=\"jsx\">","import { usePresence } from \"framer-motion\"","","export const Component = () =&gt; {","   const [isPresent, safeToRemove] = usePresence()","","   useEffect(() =&gt; {","     !isPresent &amp;&amp; setTimeout(safeToRemove, 1000)","   }, [isPresent])","","   return &lt;div /&gt;","}","</code>","","If `isPresent` is `false`, it means that a component has been removed the tree, but","`AnimatePresence` won't really remove it until `safeToRemove` has been called."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"usePresence","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"AlwaysPresent","FullName":""}],["Mapped",{"Name":"Present","FullName":""}],["Mapped",{"Name":"NotPresent","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.","There is no `safeToRemove` function.","","<code language=\"jsx\">","import { useIsPresent } from \"framer-motion\"","","export const Component = () =&gt; {","   const isPresent = useIsPresent()","","   useEffect(() =&gt; {","     !isPresent &amp;&amp; console.log(\"I've been removed!\")","   }, [isPresent])","","   return &lt;div /&gt;","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useIsPresent","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isPresent","TypeParameters":[],"Params":[{"Name":"context","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"PresenceContextProps","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"PresenceContextProps"},"SpecifiedModule":"__context_PresenceContext","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SafeToRemove","FullName":"SafeToRemove","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"AlwaysPresent","Type":["Tuple",{"Types":[["Mapped",{"Name":"obj","FullName":"obj"}],"TODO"],"Kind":"Tuple"}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[],"Name":"Present","Type":["Tuple",{"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]],"Kind":"Tuple"}],"TypeParameters":[]}],["Alias",{"Attributes":[],"Comments":[],"Name":"NotPresent","Type":["Tuple",{"Types":[["Mapped",{"Name":"obj","FullName":"obj"}],["Mapped",{"Name":"SafeToRemove","FullName":""}]],"Kind":"Tuple"}],"TypeParameters":[]}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimateSharedLayout\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimateSharedLayout/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimateSharedLayout_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"AnimateSharedLayout","Option":false,"Type":["Mapped",{"Name":"AnimateSharedLayoutStatic","FullName":"AnimateSharedLayoutStatic"}],"Accessor":"ReadOnly","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SharedLayoutProps"},"SpecifiedModule":"__components_AnimateSharedLayout_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SharedLayoutSyncMethods"},"SpecifiedModule":"__components_AnimateSharedLayout_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionContextProps"},"SpecifiedModule":"__context_MotionContext","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":true,"Name":"AnimateSharedLayout","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"SharedLayoutProps","FullName":""}],["Mapped",{"Name":"AnimateSharedLayoutReactComponent","FullName":"AnimateSharedLayoutReactComponent"}],["Mapped",{"Name":"VisualElement","FullName":""}]]}]],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["The methods provided to all children in the shared layout tree."]]],"Kind":"Regular","Index":null,"Name":"syncContext","Option":false,"Type":["Mapped",{"Name":"SharedLayoutSyncMethods","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"componentDidMount","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"componentDidUpdate","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"shouldComponentUpdate","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateStacks","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"render","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":true,"IsClass":true,"Name":"AnimateSharedLayoutStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AnimateSharedLayout","FullName":"AnimateSharedLayout"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"contextType","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"React.Context","FullName":""}],"TypeParameters":[["Mapped",{"Name":"MotionContextProps","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimateSharedLayoutReactComponent","FullName":"AnimateSharedLayoutReactComponent","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimateSharedLayout\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimateSharedLayout/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimateSharedLayout_types","Types":[["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Transition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]],["Enum",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"Presence","Cases":[{"Attributes":[],"Comments":[],"Name":"Entering","Type":"Numeric","Value":"0"},{"Attributes":[],"Comments":[],"Name":"Present","Type":"Numeric","Value":"1"},{"Attributes":[],"Comments":[],"Name":"Exiting","Type":"Numeric","Value":"2"}]}],["Enum",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"VisibilityAction","Cases":[{"Attributes":[],"Comments":[],"Name":"Hide","Type":"Numeric","Value":"0"},{"Attributes":[],"Comments":[],"Name":"Show","Type":"Numeric","Value":"1"}]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"SharedLayoutProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"children","Option":false,"Type":["Mapped",{"Name":"React.ReactNode","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["When combined with `AnimatePresence`, `SharedLayoutProps` can customise how to visually switch","between `layoutId` components as new ones enter and leave the tree.","","- \"switch\" (default): The old `layoutId` component will be hidden instantly when a new one enters, and","the new one will perform the full transition. When the newest one is removed, it will perform","the full exit transition and then the old component will be shown instantly.","- \"crossfade\": The root shared components will crossfade as `layoutId` children of both perform","the same transition."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"``type``","Option":true,"Type":["Mapped",{"Name":"SharedLayoutPropsType","FullName":"SharedLayoutPropsType"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SharedLayoutAnimationConfig","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"visibilityAction","Option":true,"Type":["Mapped",{"Name":"VisibilityAction","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"originBox","Option":true,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"targetBox","Option":true,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transition","Option":true,"Type":["Mapped",{"Name":"Transition","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"crossfadeOpacity","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"shouldStackAnimate","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onComplete","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"isRelative","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"prevParent","Option":true,"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["Handlers for batching sync layout lifecycles. We batches these processes to cut","down on layout thrashing"]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"SyncLayoutLifecycles","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"layoutReady","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"parent","Option":true,"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["The exposed API for children to add themselves to the batcher and to flush it."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"SyncLayoutBatcher","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"add","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"flush","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"handler","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"SyncLayoutLifecycles","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["Extra API methods available to children if they're a descendant of AnimateSharedLayout"]]],"IsStatic":false,"IsClass":false,"Name":"SharedLayoutSyncMethods","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"SyncLayoutBatcher","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimateSharedLayout/types\".SyncLayoutBatcher"}]],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"syncUpdate","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"force","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"forceUpdate","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"register","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"remove","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SharedLayoutPropsType","FullName":"SharedLayoutPropsType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"switch","Type":"String","Value":"switch"},{"Attributes":[],"Comments":[],"Name":"crossfade","Type":"String","Value":"crossfade"}]}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\LazyMotion\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/LazyMotion/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_LazyMotion_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Used in conjunction with the `m` component to reduce bundle size.","","`m` is a version of the `motion` component that only loads functionality","critical for the initial render.","","`LazyMotion` can then be used to either synchronously or asynchronously","load animation and gesture support.","","<code language=\"jsx\">","// Synchronous loading","import { LazyMotion, m, domAnimations } from \"framer-motion\"","","function App() {","   return (","     &lt;LazyMotion features={domAnimations}&gt;","       &lt;m.div animate={{ scale: 2 }} /&gt;","     &lt;/LazyMotion&gt;","   )","}","","// Asynchronous loading","import { LazyMotion, m } from \"framer-motion\"","","function App() {","   return (","     &lt;LazyMotion features={() =&gt; import('./path/to/domAnimations')}&gt;","       &lt;m.div animate={{ scale: 2 }} /&gt;","     &lt;/LazyMotion&gt;","   )","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"LazyMotion","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LazyProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"LazyProps"},"SpecifiedModule":"__components_LazyMotion_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\LazyMotion\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/LazyMotion/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_LazyMotion_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"FeatureBundle"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LazyFeatureBundle","FullName":"LazyFeatureBundle","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"FeatureBundle","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"LazyProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"children","Option":true,"Type":["Mapped",{"Name":"React.ReactNode","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Can be used to provide a feature bundle synchronously or asynchronously.","","<code language=\"jsx\">","// features.js","import { domAnimations } from \"framer-motion\"","export default domAnimations","","// index.js","import { LazyMotion, m } from \"framer-motion\"","","const loadFeatures = import(\"./features.js\")","   .then(res =&gt; res.default)","","function Component() {","   return (","     &lt;LazyMotion features={loadFeatures}&gt;","       &lt;m.div animate={{ scale: 1.5 }} /&gt;","     &lt;/LazyMotion&gt;","   )","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"features","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"FeatureBundle","FullName":""}],["Mapped",{"Name":"LazyFeatureBundle","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["If `true`, will throw an error if a `motion` component renders within","a `LazyMotion` component.","","<code language=\"jsx\">","// This component will throw an error that explains using a motion component","// instead of the m component will break the benefits of code-splitting.","function Component() {","   return (","     &lt;LazyMotion features={domAnimation} strict&gt;","       &lt;motion.div /&gt;","     &lt;/LazyMotion&gt;","   )","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"strict","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\MotionConfig\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/MotionConfig/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_MotionConfig_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["`MotionConfig` is used to set configuration options for all children `motion` components.","","<code language=\"jsx\">","import { motion, MotionConfig } from \"framer-motion\"","","export function App() {","   return (","     &lt;MotionConfig transition={{ type: \"spring\" }}&gt;","       &lt;motion.div animate={{ x: 100 }} /&gt;","     &lt;/MotionConfig&gt;","   )","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"MotionConfig","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionConfigProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionConfigContext"},"SpecifiedModule":"__context_MotionConfigContext","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MotionConfigProps","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"children","Option":true,"Type":["Mapped",{"Name":"React.ReactNode","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","context\\MotionContext\\create"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/context/MotionContext/create.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__context_MotionContext_create","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useCreateMotionContext","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"isStatic","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"MotionContextProps","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionContextProps"},"SpecifiedModule":"_","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","context\\MotionContext\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/context/MotionContext/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__context_MotionContext_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"MotionContext","Type":"TODO","IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useVisualElementContext","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MotionContextProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"visualElement","Option":true,"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"initial","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"animate","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","context\\MotionContext\\utils"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/context/MotionContext/utils.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__context_MotionContext_utils","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getCurrentTreeVariants","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"context","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionContextProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"MotionContextProps","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionContextProps"},"SpecifiedModule":"_","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\drag\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/drag/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_drag_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"RefObject"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"PanInfo"},"SpecifiedModule":"__gestures_PanSession","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Inertia"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetAndTransition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Axis"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BoundingBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"DragControls"},"SpecifiedModule":"__gestures_drag_use_drag_controls","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VariantLabels"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DragHandler","FullName":"DragHandler","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"DragElastic","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}],["Mapped",{"Name":"float","FullName":"float"}],["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ResolvedConstraints","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ResolvedElastic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"Axis","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"Axis","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"DragHandlers","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when dragging starts."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onDragStart(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame drag onDragStart={onDragStart} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  onDragStart={","    (event, info) => console.log(info.point.x, info.point.y)","  }","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onDragStart","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when dragging ends."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onDragEnd(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame drag onDragEnd={onDragEnd} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  onDragEnd={","    (event, info) => console.log(info.point.x, info.point.y)","  }","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onDragEnd","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when the component is dragged."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onDrag(event, info) {","  console.log(info.point.x, info.point.y)","}","","<Frame drag onDrag={onDrag} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  onDrag={","    (event, info) => console.log(info.point.x, info.point.y)","  }","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onDrag","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires a drag direction is determined."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onDirectionLock(axis) {","  console.log(axis)","}","","<Frame","  drag","  dragDirectionLock","  onDirectionLock={onDirectionLock}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragDirectionLock","  onDirectionLock={axis => console.log(axis)}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onDirectionLock","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DragHandlersOnDirectionLockAxis","FullName":"DragHandlersOnDirectionLockAxis"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback function that fires when drag momentum/bounce transition finishes."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onDragTransitionEnd() {","  console.log('drag transition has ended')","}","","<Frame","  drag","  onDragTransitionEnd={onDragTransitionEnd}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  onDragTransitionEnd={() => console.log('Drag transition complete')}","/>","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onDragTransitionEnd","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DragHandlersOnDirectionLockAxis","FullName":"DragHandlersOnDirectionLockAxis","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"x","Type":"String","Value":"x"},{"Attributes":[],"Comments":[],"Name":"y","Type":"String","Value":"y"}]}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"InertiaOptions","Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"DraggableProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"DragHandlers","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/drag/types\".DragHandlers"}]],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Enable dragging for this element. Set to `false` by default.","Set `true` to drag in both directions.","Set `\"x\"` or `\"y\"` to only drag in a specific direction."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame drag=\"x\" />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div drag=\"x\" />","```"]}]],"Kind":"Regular","Index":null,"Name":"drag","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}],["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"x","Type":"String","Value":"x"},{"Attributes":[],"Comments":[],"Name":"y","Type":"String","Value":"y"}]}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Properties or variant label to animate to while the drag gesture is recognised.","","<code language=\"jsx\">","<motion.div whileDrag={{ scale: 1.2 }} />","</code>"]]],"Kind":"Regular","Index":null,"Name":"whileDrag","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VariantLabels","FullName":""}],["Mapped",{"Name":"TargetAndTransition","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["If `true`, this will lock dragging to the initially-detected direction. Defaults to `false`."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame drag={true} dragDirectionLock={true} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div drag dragDirectionLock />","```"]}]],"Kind":"Regular","Index":null,"Name":"dragDirectionLock","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Allows drag gesture propagation to child components. Set to `false` by","default."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame drag=\"x\" dragPropagation={true} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div drag=\"x\" dragPropagation />","```"]}]],"Kind":"Regular","Index":null,"Name":"dragPropagation","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Applies constraints on the permitted draggable area.","","It can accept an object of optional `top`, `left`, `right`, and `bottom` values, measured in pixels.","This will define a distance the named edge of the draggable component.","","Alternatively, it can accept a `ref` to another component created with React's `useRef` hook.","This `ref` should be passed both to the draggable component's `dragConstraints` prop, and the `ref`","of the component you want to use as constraints."]],["UnknownTag",{"Name":"library","Content":["```jsx","// In pixels","<Frame","  drag=\"x\"","  dragConstraints={{ left: 0, right: 300 }}","/>","","// As a ref to another component","function MyComponent() {","  const constraintsRef = useRef(null)","","  return (","     <Frame ref={constraintsRef} width={400} height={400}>","         <Frame drag dragConstraints={constraintsRef} />","     </Frame>","  )","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","// In pixels","<motion.div","  drag=\"x\"","  dragConstraints={{ left: 0, right: 300 }}","/>","","// As a ref to another component","const MyComponent = () => {","  const constraintsRef = useRef(null)","","  return (","     <motion.div ref={constraintsRef}>","         <motion.div drag dragConstraints={constraintsRef} />","     </motion.div>","  )","}","```"]}]],"Kind":"Regular","Index":null,"Name":"dragConstraints","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],["Generic",{"Type":["Mapped",{"Name":"RefObject","FullName":""}],"TypeParameters":[["Mapped",{"Name":"Element","FullName":""}]]}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The degree of movement allowed outside constraints. 0 = no movement, 1 =","full movement.","","Set to `0.5` by default. Can also be set as `false` to disable movement.","","By passing an object of `top`/`right`/`bottom`/`left`, individual values can be set","per constraint. Any missing values will be set to `0`."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame","  drag={true}","  dragConstraints={{ left: 0, right: 300 }}","  dragElastic={0.2}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragConstraints={{ left: 0, right: 300 }}","  dragElastic={0.2}","/>","```"]}]],"Kind":"Regular","Index":null,"Name":"dragElastic","Option":true,"Type":["Mapped",{"Name":"DragElastic","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Apply momentum from the pan gesture to the component when dragging","finishes. Set to `true` by default."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame","  drag={true}","  dragConstraints={{ left: 0, right: 300 }}","  dragMomentum={false}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragConstraints={{ left: 0, right: 300 }}","  dragMomentum={false}","/>","```"]}]],"Kind":"Regular","Index":null,"Name":"dragMomentum","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Allows you to change dragging inertia parameters.","When releasing a draggable Frame, an animation with type `inertia` starts. The animation is based on your dragging velocity. This property allows you to customize it.","See {@link https://framer.com/api/animation/#inertia | Inertia} for all properties you can use."]],["UnknownTag",{"Name":"library","Content":["```jsx","<Frame","  drag={true}","  dragTransition={{ bounceStiffness: 600, bounceDamping: 10 }}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","<motion.div","  drag","  dragTransition={{ bounceStiffness: 600, bounceDamping: 10 }}","/>","```"]}]],"Kind":"Regular","Index":null,"Name":"dragTransition","Option":true,"Type":["Mapped",{"Name":"InertiaOptions","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Usually, dragging is initiated by pressing down on a component and moving it. For some","use-cases, for instance clicking at an arbitrary point on a video scrubber, we","might want to initiate dragging from a different component than the draggable one.","","By creating a `dragControls` using the `useDragControls` hook, we can pass this into","the draggable component's `dragControls` prop. It exposes a `start` method","that can start dragging from pointer events on other components."]],["UnknownTag",{"Name":"library","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <Frame onTapStart={startDrag} />","    <Frame drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <div onPointerDown={startDrag} />","    <motion.div drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}]],"Kind":"Regular","Index":null,"Name":"dragControls","Option":true,"Type":["Mapped",{"Name":"DragControls","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["By default, if `drag` is defined on a component then an event listener will be attached","to automatically initiate dragging when a user presses down on it.","","By setting `dragListener` to `false`, this event listener will not be created."]],["UnknownTag",{"Name":"library","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <Frame onTapStart={startDrag} />","    <Frame","      drag=\"x\"","      dragControls={dragControls}","      dragListener={false}","    />","  </>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <div onPointerDown={startDrag} />","    <motion.div","      drag=\"x\"","      dragControls={dragControls}","      dragListener={false}","    />","  </>",")","```"]}]],"Kind":"Regular","Index":null,"Name":"dragListener","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["If `dragConstraints` is set to a React ref, this callback will call with the measured drag constraints."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"onMeasureDragConstraints","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"constraints","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BoundingBox2D","FullName":""}]}],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"BoundingBox2D","FullName":""}],["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Usually, dragging uses the layout project engine, and applies transforms to the underlying VisualElement.","Passing MotionValues as _dragX and _dragY instead applies drag updates to these motion values.","This allows you to manually control how updates from a drag gesture on an element is applied."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"_dragX","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Usually, dragging uses the layout project engine, and applies transforms to the underlying VisualElement.","Passing MotionValues as _dragX and _dragY instead applies drag updates to these motion values.","This allows you to manually control how updates from a drag gesture on an element is applied."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"_dragY","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\drag\\use-drag-controls"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/drag/use-drag-controls.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_drag_use_drag_controls","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components."]],["UnknownTag",{"Name":"library","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <Frame onTapStart={startDrag} />","    <Frame drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <div onPointerDown={startDrag} />","    <motion.div drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"DragControls","Option":false,"Type":["Mapped",{"Name":"DragControlsStatic","FullName":"DragControlsStatic"}],"Accessor":"ReadOnly","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop","and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we","might want to initiate that dragging from a different component than the draggable one.","","By creating a `dragControls` using the `useDragControls` hook, we can pass this into","the draggable component's `dragControls` prop. It exposes a `start` method","that can start dragging from pointer events on other components."]],["UnknownTag",{"Name":"library","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <Frame onTapStart={startDrag} />","    <Frame drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <div onPointerDown={startDrag} />","    <motion.div drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useDragControls","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"DragControls","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElementDragControls"},"SpecifiedModule":"__gestures_drag_VisualElementDragControls","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"DragControlOptions"},"SpecifiedModule":"__gestures_drag_VisualElementDragControls","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["Summary",["Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components."]],["UnknownTag",{"Name":"library","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <Frame onTapStart={startDrag} />","    <Frame drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <div onPointerDown={startDrag} />","    <motion.div drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":true,"Name":"DragControls","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Subscribe a component's internal `VisualElementDragControls` to the user-facing API."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"subscribe","TypeParameters":[],"Params":[{"Name":"controls","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElementDragControls","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Start a drag gesture on every `motion` component that has this set of drag controls","passed into it via the `dragControls` prop.","","<code language=\"jsx\">","dragControls.start(e, {","   snapToCursor: true","})","</code>"]],["Param",{"Name":"event","Content":["PointerEvent"]}],["Param",{"Name":"options","Content":["Options"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"start","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"React.MouseEvent","FullName":""}],["Mapped",{"Name":"React.TouchEvent","FullName":""}],["Mapped",{"Name":"React.PointerEvent","FullName":""}],["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"DragControlOptions","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateConstraints","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components."]],["UnknownTag",{"Name":"library","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <Frame onTapStart={startDrag} />","    <Frame drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","const dragControls = useDragControls()","","function startDrag(event) {","  dragControls.start(event, { snapToCursor: true })","}","","return (","  <>","    <div onPointerDown={startDrag} />","    <motion.div drag=\"x\" dragControls={dragControls} />","  </>",")","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":true,"IsClass":true,"Name":"DragControlsStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"DragControls","FullName":"DragControls"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\drag\\use-drag"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/drag/use-drag.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_drag_use_drag","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["A hook that allows an element to be dragged."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useDrag","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureProps"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\drag\\VisualElementDragControls"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/drag/VisualElementDragControls.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_drag_VisualElementDragControls","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"elementDragControls","Type":["Generic",{"Type":["Mapped",{"Name":"WeakMap","FullName":""}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Mapped",{"Name":"VisualElementDragControls","FullName":""}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"VisualElementDragControls","Option":false,"Type":["Mapped",{"Name":"VisualElementDragControlsStatic","FullName":"VisualElementDragControlsStatic"}],"Accessor":"ReadOnly","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"expectsResolvedDragConstraints","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"RefObject"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnyPointerEvent"},"SpecifiedModule":"__gestures_PanSession","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"PanInfo"},"SpecifiedModule":"__gestures_PanSession","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"DraggableProps"},"SpecifiedModule":"__gestures_drag_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TransformPoint2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Point2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DragControlConfig","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"visualElement","Option":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DragControlOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"snapToCursor","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"cursorProgress","Option":true,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DragControlsProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"DraggableProps","FullName":"error"}]],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transformPagePoint","Option":true,"Type":["Mapped",{"Name":"TransformPoint2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DragDirection","FullName":"DragDirection","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"x","Type":"String","Value":"x"},{"Attributes":[],"Comments":[],"Name":"y","Type":"String","Value":"y"}]}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":true,"Name":"VisualElementDragControls","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Track whether we're currently dragging."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"isDragging","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Track the initial position of the cursor relative to the dragging element","when dragging starts as a value of 0-1 on each axis. We then use this to calculate","an ideal bounding box for the VisualElement renderer to project into every frame."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","Index":null,"Name":"cursorProgress","Option":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Instantiate a PanSession for the drag gesture"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"start","TypeParameters":[],"Params":[{"Name":"originEvent","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnyPointerEvent","FullName":""}]},{"Name":"p1","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"DragControlOptions","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateLayoutMeasurements","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resolveDragConstraints","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resolveRefConstraints","TypeParameters":[],"Params":[{"Name":"layoutBox","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"constraints","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"RefObject","FullName":""}],"TypeParameters":[["Mapped",{"Name":"Element","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"VisualElementDragControlsResolveRefConstraintsReturn","FullName":"VisualElementDragControlsResolveRefConstraintsReturn"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"cancelDrag","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"stop","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnyPointerEvent","FullName":""}]},{"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanInfo","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"snapToCursor","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnyPointerEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Update the specified axis with the latest pointer information."]]],"Kind":"Regular","IsStatic":false,"Name":"updateAxis","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DragDirection","FullName":""}]},{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnyPointerEvent","FullName":""}]},{"Name":"offset","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateAxisMotionValue","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DragDirection","FullName":""}]},{"Name":"offset","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateVisualElementAxis","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DragDirection","FullName":""}]},{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnyPointerEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setProps","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"stopMotion","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scalePoint","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"mount","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VisualElementDragControlsResolveRefConstraintsReturn","FullName":"VisualElementDragControlsResolveRefConstraintsReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"VisualElementDragControlsResolveRefConstraintsReturnX","FullName":"VisualElementDragControlsResolveRefConstraintsReturnX"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"VisualElementDragControlsResolveRefConstraintsReturnX","FullName":"VisualElementDragControlsResolveRefConstraintsReturnX"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":true,"IsClass":true,"Name":"VisualElementDragControlsStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DragControlConfig","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"VisualElementDragControls","FullName":"VisualElementDragControls"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VisualElementDragControlsResolveRefConstraintsReturnX","FullName":"VisualElementDragControlsResolveRefConstraintsReturnX","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"min","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"max","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\utils\\event-type"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/utils/event-type.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_utils_event_type","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isMouseEvent","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isTouchEvent","TypeParameters":[],"Params":[{"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"MouseEvent","FullName":""}],["Mapped",{"Name":"TouchEvent","FullName":""}],["Mapped",{"Name":"PointerEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\utils\\is-node-or-child"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/utils/is-node-or-child.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_utils_is_node_or_child","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Recursively traverse up the tree to check whether the provided child node","is the parent or a descendant of it."]],["Param",{"Name":"parent","Content":["Element to find"]}],["Param",{"Name":"child","Content":["Element to test against parent"]}]],"Export":null,"HasDeclare":true,"Name":"isNodeOrChild","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"parent","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Element","FullName":""}]},{"Name":"child","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Element","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\animations"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/animations.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_animations","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"animations","Type":["Mapped",{"Name":"FeatureComponents","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureComponents"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\definitions"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/definitions.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_definitions","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"featureDefinitions","Type":["Mapped",{"Name":"FeatureDefinitions","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"loadFeatures","TypeParameters":[],"Params":[{"Name":"features","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureComponents","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureComponents"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureDefinitions"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\drag"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/drag.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_drag","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"drag","Type":["Mapped",{"Name":"FeatureComponents","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureComponents"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\gestures"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/gestures.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_gestures","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"gestureAnimations","Type":["Mapped",{"Name":"FeatureComponents","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureComponents"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_types","Types":[["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualState"},"SpecifiedModule":"__motion_utils_use_visual_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"CreateVisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"FeatureProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"MotionProps","FullName":"error"}]],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"visualElement","Option":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FeatureNames","FullName":"FeatureNames","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"animation","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"exit","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"drag","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"tap","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"focus","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"hover","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"pan","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"layoutAnimation","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"measureLayout","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"FeatureComponent","Type":["Generic",{"Type":["Mapped",{"Name":"React.ComponentType","FullName":""}],"TypeParameters":[["Mapped",{"Name":"FeatureProps","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"FeatureDefinition","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"isEnabled","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"Component","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FeatureComponents","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"animation","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"exit","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"drag","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"tap","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"focus","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"hover","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"pan","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"layoutAnimation","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"measureLayout","Option":true,"Type":["Mapped",{"Name":"FeatureComponent","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FeatureBundle","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"FeatureComponents","FullName":"\"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/types\".FeatureComponents"}]],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"renderer","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"CreateVisualElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LazyFeatureBundle","FullName":"LazyFeatureBundle","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"FeatureBundle","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FeatureDefinitions","FullName":"FeatureDefinitions","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RenderComponent","FullName":"RenderComponent","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"Component","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"React.ComponentType","FullName":""}]]}]},{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"ref","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"React.Ref","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}]},{"Name":"visualState","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualState","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}]},{"Name":"isStatic","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\use-features"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/use-features.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_use_features","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Load features via renderless components based on the provided MotionProps."]]],"Kind":"Regular","IsStatic":false,"Name":"useFeatures","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"visualElement","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"preloadedFeatures","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureBundle","FullName":""}]}],"ReturnType":["Union",{"Option":true,"Types":[["Array",["Mapped",{"Name":"JSX.Element","FullName":""}]]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureBundle"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\utils\\is-forced-motion-value"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/utils/is-forced-motion-value.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_utils_is_forced_motion_value","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isForcedMotionValue","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"_","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\utils\\make-renderless-component"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/utils/make-renderless-component.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_utils_make_renderless_component","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"makeRenderlessComponent","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[["GenericTypeParameter",{"Name":"'P","Default":null}]],"Params":[{"Name":"hook","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Function","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'P","FullName":""}]}],"ReturnType":"TODO","Accessibility":null}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureProps"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\utils\\should-inherit-variant"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/utils/should-inherit-variant.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_utils_should_inherit_variant","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"checkShouldInheritVariant","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\utils\\use-motion-ref"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/utils/use-motion-ref.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_utils_use_motion_ref","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Creates a ref function that, when called, hydrates the provided","external ref and VisualElement."]]],"Kind":"Regular","IsStatic":false,"Name":"useMotionRef","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}]],"Params":[{"Name":"visualState","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualState","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}]},{"Name":"visualElement","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}]},{"Name":"externalRef","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"React.Ref","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.Ref","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualState"},"SpecifiedModule":"__motion_utils_use_visual_state","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\utils\\use-visual-element"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/utils/use-visual-element.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_utils_use_visual_element","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useVisualElement","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}]],"Params":[{"Name":"Component","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"React.ComponentType","FullName":""}]]}]},{"Name":"visualState","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualState","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}]},{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"createVisualElement","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"CreateVisualElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Generic",{"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"CreateVisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualState"},"SpecifiedModule":"__motion_utils_use_visual_state","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\utils\\use-visual-state"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/utils/use-visual-state.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_utils_use_visual_state","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"makeUseVisualState","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[["GenericTypeParameter",{"Name":"'I"}],["GenericTypeParameter",{"Name":"'RS"}]],"Params":[{"Name":"config","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"UseVisualStateConfig","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'I","FullName":""}],["Mapped",{"Name":"'RS","FullName":""}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"UseVisualState","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'I","FullName":""}],["Mapped",{"Name":"'RS","FullName":""}]]}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ScrapeMotionValuesFromProps"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VisualState","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}]],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"renderState","Option":false,"Type":["Mapped",{"Name":"'RenderState","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"latestValues","Option":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"mount","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"instance","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UseVisualState","FullName":"UseVisualState","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}]],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"isStatic","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"VisualState","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UseVisualStateConfig","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}]],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scrapeMotionValuesFromProps","Option":false,"Type":["Mapped",{"Name":"ScrapeMotionValuesFromProps","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"createRenderState","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"'RenderState","FullName":""}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onMount","Option":true,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"instance","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'Instance","FullName":""}]},{"Name":"visualState","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"VisualState","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\utils\\valid-prop"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/utils/valid-prop.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_utils_valid_prop","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Check whether a prop name is a valid `MotionProp` key."]],["Param",{"Name":"key","Content":["Name of the property to check"]}],["Returns",["`true` is key is a valid `MotionProp`."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"isValidMotionProp","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\create-visual-element"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/create-visual-element.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_create_visual_element","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"createDomVisualElement","Type":["Generic",{"Type":["Mapped",{"Name":"CreateVisualElement","FullName":""}],"TypeParameters":[["Union",{"Option":false,"Types":[["Mapped",{"Name":"HTMLElement","FullName":""}],["Mapped",{"Name":"SVGElement","FullName":""}]]}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"CreateVisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\features-animation"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/features-animation.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_features_animation","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"domAnimation","Type":["Mapped",{"Name":"FeatureBundle","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureBundle"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\features-max"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/features-max.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_features_max","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"domMax","Type":["Mapped",{"Name":"FeatureBundle","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureBundle"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\motion-minimal"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/motion-minimal.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_motion_minimal","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"m","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\motion-proxy"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/motion-proxy.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_motion_proxy","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Convert any React component into a `motion` component. The provided component","**must** use `React.forwardRef` to the underlying DOM component you want to animate.","","<code language=\"jsx\">","const Component = React.forwardRef((props, ref) =&gt; {","   return &lt;div ref={ref} /&gt;","})","","const MotionComponent = motion(Component)","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"createMotionProxy","TypeParameters":[],"Params":[{"Name":"createConfig","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"CreateConfig","FullName":""}]}],"ReturnType":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionComponentConfig"},"SpecifiedModule":"Motion","ResolvedModule":null}]],["Alias",{"Attributes":[],"Comments":[["Summary",["I'd rather the return type of `custom` to be implicit but this throws","incorrect relative paths in the exported types and API Extractor throws","a wobbly."]],["UnknownTag",{"Name":"internal","Content":[]}]],"Name":"CustomDomComponent","Type":["Generic",{"Type":["Mapped",{"Name":"React.ForwardRefExoticComponent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"TypeParameters":[["GenericTypeParameter",{"Name":"'Props"}]]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CustomMotionComponentConfig","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"forwardMotionProps","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CreateConfig","FullName":"CreateConfig","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[["GenericTypeParameter",{"Name":"'Instance"}],["GenericTypeParameter",{"Name":"'RenderState"}],["GenericTypeParameter",{"Name":"'Props"}]],"Params":[{"Name":"Component","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Generic",{"Type":["Mapped",{"Name":"React.ComponentType","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Props","FullName":""}]]}]]}]},{"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"CustomMotionComponentConfig","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MotionComponentConfig","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Instance","FullName":""}],["Mapped",{"Name":"'RenderState","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\motion"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/motion.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_motion","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["HTML &amp; SVG components, optimised for use with gestures and animation. These can be used as","drop-in replacements for any HTML &amp; SVG component, all CSS &amp; SVG properties are supported."]],["UnknownTag",{"Name":"public","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"motion","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Create a DOM `motion` component with the provided string. This is primarily intended","as a full alternative to `motion` for consumers who have to support environments that don't","support `Proxy`.","","<code language=\"javascript\">","import { createDomMotionComponent } from \"framer-motion\"","","const motion = {","   div: createDomMotionComponent('div')","}","</code>"]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"createDomMotionComponent","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["KeyOf",{"Type":["Mapped",{"Name":"DOMMotionComponents","FullName":""}]}]}],"ReturnType":["Mapped",{"Name":"DOMMotionComponents","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"DOMMotionComponents"},"SpecifiedModule":"__render_dom_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"TransformPoint2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLMotionComponents"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SVGMotionComponents"},"SpecifiedModule":"__render_svg_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DOMVisualElementOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["A function that can map a page point between spaces. Used by Framer","to support dragging and layout animations within scaled space."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"transformPagePoint","Option":true,"Type":["Mapped",{"Name":"TransformPoint2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Allow `transform` to be set as `\"none\"` if all transforms are their default","values. Switching to this removes the element as a GPU layer which can lead to subtle","graphical shifts."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"allowTransformNone","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Allow this element to be GPU-accelerated. We currently enable this by","adding a `translateZ(0)`."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"enableHardwareAcceleration","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DOMMotionComponents","FullName":"DOMMotionComponents","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\use-render"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/use-render.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_use_render","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createUseRender","TypeParameters":[],"Params":[{"Name":"forwardMotionProps","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"RenderComponent","FullName":""}],"TypeParameters":[["Union",{"Option":false,"Types":[["Mapped",{"Name":"SVGElement","FullName":""}],["Mapped",{"Name":"HTMLElement","FullName":""}]]}],["Union",{"Option":false,"Types":[["Mapped",{"Name":"HTMLRenderState","FullName":""}],["Mapped",{"Name":"SVGRenderState","FullName":""}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"RenderComponent"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLRenderState"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SVGRenderState"},"SpecifiedModule":"__render_svg_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\config-motion"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/config-motion.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_config_motion","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"htmlMotionConfig","Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionComponentConfig"},"SpecifiedModule":"Motion","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLRenderState"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\supported-elements"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/supported-elements.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_supported_elements","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"htmlElements","Type":["Tuple",{"Types":[["StringLiteral","a"],["StringLiteral","abbr"],["StringLiteral","address"],["StringLiteral","area"],["StringLiteral","article"],["StringLiteral","aside"],["StringLiteral","audio"],["StringLiteral","b"],["StringLiteral","base"],["StringLiteral","bdi"],["StringLiteral","bdo"],["StringLiteral","big"],["StringLiteral","blockquote"],["StringLiteral","body"],["StringLiteral","br"],["StringLiteral","button"],["StringLiteral","canvas"],["StringLiteral","caption"],["StringLiteral","cite"],["StringLiteral","code"],["StringLiteral","col"],["StringLiteral","colgroup"],["StringLiteral","data"],["StringLiteral","datalist"],["StringLiteral","dd"],["StringLiteral","del"],["StringLiteral","details"],["StringLiteral","dfn"],["StringLiteral","dialog"],["StringLiteral","div"],["StringLiteral","dl"],["StringLiteral","dt"],["StringLiteral","em"],["StringLiteral","embed"],["StringLiteral","fieldset"],["StringLiteral","figcaption"],["StringLiteral","figure"],["StringLiteral","footer"],["StringLiteral","form"],["StringLiteral","h1"],["StringLiteral","h2"],["StringLiteral","h3"],["StringLiteral","h4"],["StringLiteral","h5"],["StringLiteral","h6"],["StringLiteral","head"],["StringLiteral","header"],["StringLiteral","hgroup"],["StringLiteral","hr"],["StringLiteral","html"],["StringLiteral","i"],["StringLiteral","iframe"],["StringLiteral","img"],["StringLiteral","input"],["StringLiteral","ins"],["StringLiteral","kbd"],["StringLiteral","keygen"],["StringLiteral","label"],["StringLiteral","legend"],["StringLiteral","li"],["StringLiteral","link"],["StringLiteral","main"],["StringLiteral","map"],["StringLiteral","mark"],["StringLiteral","menu"],["StringLiteral","menuitem"],["StringLiteral","meta"],["StringLiteral","meter"],["StringLiteral","nav"],["StringLiteral","noscript"],["StringLiteral","object"],["StringLiteral","ol"],["StringLiteral","optgroup"],["StringLiteral","option"],["StringLiteral","output"],["StringLiteral","p"],["StringLiteral","param"],["StringLiteral","picture"],["StringLiteral","pre"],["StringLiteral","progress"],["StringLiteral","q"],["StringLiteral","rp"],["StringLiteral","rt"],["StringLiteral","ruby"],["StringLiteral","s"],["StringLiteral","samp"],["StringLiteral","script"],["StringLiteral","section"],["StringLiteral","select"],["StringLiteral","small"],["StringLiteral","source"],["StringLiteral","span"],["StringLiteral","strong"],["StringLiteral","style"],["StringLiteral","sub"],["StringLiteral","summary"],["StringLiteral","sup"],["StringLiteral","table"],["StringLiteral","tbody"],["StringLiteral","td"],["StringLiteral","textarea"],["StringLiteral","tfoot"],["StringLiteral","th"],["StringLiteral","thead"],["StringLiteral","time"],["StringLiteral","title"],["StringLiteral","tr"],["StringLiteral","track"],["StringLiteral","u"],["StringLiteral","ul"],["StringLiteral","var"],["StringLiteral","video"],["StringLiteral","wbr"],["StringLiteral","webview"]],"Kind":"Tuple"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"UnionStringArray","Type":["Mapped",{"Name":"'T","FullName":""}],"TypeParameters":[["GenericTypeParameter",{"Name":"'T","Constraint":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]}]]}],["Alias",{"Attributes":[],"Comments":[],"Name":"HTMLElements","Type":["Generic",{"Type":["Mapped",{"Name":"UnionStringArray","FullName":""}],"TypeParameters":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"TypeParameters":[]}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"DetailedHTMLFactory"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ForwardRefExoticComponent"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLAttributes"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"PropsWithoutRef"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ReactHTML"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"RefAttributes"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLElements"},"SpecifiedModule":"__render_html_supported_elements","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TransformOrigin","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"originX","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"originY","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"originZ","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"HTMLRenderState","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["A mutable record of transforms we want to apply directly to the rendered Element","every frame. We use a mutable data structure to reduce GC during animations."]]],"Kind":"Regular","Index":null,"Name":"transform","Option":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["A mutable record of transform keys we want to apply to the rendered Element. We order","this to order transforms in the desired order. We use a mutable data structure to reduce GC during animations."]]],"Kind":"Regular","Index":null,"Name":"transformKeys","Option":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["A mutable record of transform origins we want to apply directly to the rendered Element","every frame. We use a mutable data structure to reduce GC during animations."]]],"Kind":"Regular","Index":null,"Name":"transformOrigin","Option":false,"Type":["Mapped",{"Name":"TransformOrigin","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["A mutable record of styles we want to apply directly to the rendered Element","every frame. We use a mutable data structure to reduce GC during animations."]]],"Kind":"Regular","Index":null,"Name":"style","Option":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["A mutable record of CSS variables we want to apply directly to the rendered Element","every frame. We use a mutable data structure to reduce GC during animations."]]],"Kind":"Regular","Index":null,"Name":"vars","Option":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"Name":"ForwardRefComponent","Type":["Generic",{"Type":["Mapped",{"Name":"ForwardRefExoticComponent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"TypeParameters":[["GenericTypeParameter",{"Name":"'T"}],["GenericTypeParameter",{"Name":"'P"}]]}],["Alias",{"Attributes":[],"Comments":[["Summary",["Support for React component props"]]],"Name":"UnwrapFactoryAttributes","Type":"TODO","TypeParameters":[["GenericTypeParameter",{"Name":"'F"}]]}],["Alias",{"Attributes":[],"Comments":[],"Name":"UnwrapFactoryElement","Type":"TODO","TypeParameters":[["GenericTypeParameter",{"Name":"'F"}]]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"HTMLAttributesWithoutMotionProps","FullName":"HTMLAttributesWithoutMotionProps","TypeParameters":[["GenericTypeParameter",{"Name":"'Attributes","Constraint":["Generic",{"Type":["Mapped",{"Name":"HTMLAttributes","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Element","FullName":""}]]}]}],["GenericTypeParameter",{"Name":"'Element","Constraint":["Mapped",{"Name":"HTMLElement","FullName":""}]}]],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"HTMLMotionProps","FullName":"HTMLMotionProps","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["Motion-optimised versions of React's HTML components."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"HTMLMotionComponents","FullName":"HTMLMotionComponents","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\use-props"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/use-props.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_use_props","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"copyRawValuesOnly","TypeParameters":[],"Params":[{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"source","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"CopyRawValuesOnlySource","FullName":"CopyRawValuesOnlySource"}]},{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useStyle","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"visualState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"isStatic","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useHTMLProps","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"visualState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"isStatic","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CopyRawValuesOnlySource","FullName":"CopyRawValuesOnlySource","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"MotionValue","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"Value","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\visual-element"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/visual-element.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_visual_element","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getComputedStyle","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"HTMLElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"CSSStyleDeclaration","FullName":""}],"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"htmlConfig","Type":["Generic",{"Type":["Mapped",{"Name":"VisualElementConfig","FullName":""}],"TypeParameters":[["Mapped",{"Name":"HTMLElement","FullName":""}],["Mapped",{"Name":"HTMLRenderState","FullName":""}],["Mapped",{"Name":"DOMVisualElementOptions","FullName":""}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"htmlVisualElement","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":"TODO"},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"DOMVisualElementOptions","FullName":""}]}],"ReturnType":"TODO","Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLRenderState"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElementConfig"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"DOMVisualElementOptions"},"SpecifiedModule":"__render_dom_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\config-motion"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/config-motion.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_config_motion","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"svgMotionConfig","Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionComponentConfig"},"SpecifiedModule":"Motion","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SVGRenderState"},"SpecifiedModule":"__render_svg_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\lowercase-elements"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/lowercase-elements.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_lowercase_elements","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["We keep these listed seperately as we use the lowercase tag names as part","of the runtime bundle to detect SVG components"]]],"Export":null,"HasDeclare":true,"Name":"lowercaseSVGElements","Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\supported-elements"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/supported-elements.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_supported_elements","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"svgElements","Type":["Tuple",{"Types":[["StringLiteral","animate"],["StringLiteral","circle"],["StringLiteral","defs"],["StringLiteral","desc"],["StringLiteral","ellipse"],["StringLiteral","g"],["StringLiteral","image"],["StringLiteral","line"],["StringLiteral","filter"],["StringLiteral","marker"],["StringLiteral","mask"],["StringLiteral","metadata"],["StringLiteral","path"],["StringLiteral","pattern"],["StringLiteral","polygon"],["StringLiteral","polyline"],["StringLiteral","rect"],["StringLiteral","stop"],["StringLiteral","svg"],["StringLiteral","switch"],["StringLiteral","symbol"],["StringLiteral","text"],["StringLiteral","tspan"],["StringLiteral","use"],["StringLiteral","view"],["StringLiteral","clipPath"],["StringLiteral","feBlend"],["StringLiteral","feColorMatrix"],["StringLiteral","feComponentTransfer"],["StringLiteral","feComposite"],["StringLiteral","feConvolveMatrix"],["StringLiteral","feDiffuseLighting"],["StringLiteral","feDisplacementMap"],["StringLiteral","feDistantLight"],["StringLiteral","feDropShadow"],["StringLiteral","feFlood"],["StringLiteral","feFuncA"],["StringLiteral","feFuncB"],["StringLiteral","feFuncG"],["StringLiteral","feFuncR"],["StringLiteral","feGaussianBlur"],["StringLiteral","feImage"],["StringLiteral","feMerge"],["StringLiteral","feMergeNode"],["StringLiteral","feMorphology"],["StringLiteral","feOffset"],["StringLiteral","fePointLight"],["StringLiteral","feSpecularLighting"],["StringLiteral","feSpotLight"],["StringLiteral","feTile"],["StringLiteral","feTurbulence"],["StringLiteral","foreignObject"],["StringLiteral","linearGradient"],["StringLiteral","radialGradient"],["StringLiteral","textPath"]],"Kind":"Tuple"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"UnionStringArray","Type":["Mapped",{"Name":"'T","FullName":""}],"TypeParameters":[["GenericTypeParameter",{"Name":"'T","Constraint":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]}]]}],["Alias",{"Attributes":[],"Comments":[],"Name":"SVGElements","Type":["Generic",{"Type":["Mapped",{"Name":"UnionStringArray","FullName":""}],"TypeParameters":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"TypeParameters":[]}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SVGAttributes"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MakeMotion"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SVGElements"},"SpecifiedModule":"__render_svg_supported_elements","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ForwardRefComponent"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLRenderState"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SVGRenderState","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"HTMLRenderState","FullName":"error"}]],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Measured dimensions of the SVG element to be used to calculate a transform-origin."]]],"Kind":"Regular","Index":null,"Name":"dimensions","Option":true,"Type":["Mapped",{"Name":"SVGDimensions","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["A mutable record of attributes we want to apply directly to the rendered Element","every frame. We use a mutable data structure to reduce GC during animations."]]],"Kind":"Regular","Index":null,"Name":"attrs","Option":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Measured path length if this is a SVGPathElement"]]],"Kind":"Regular","Index":null,"Name":"totalPathLength","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SVGDimensions","FullName":"SVGDimensions","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SVGAttributesWithoutMotionProps","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]],"Members":[],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[["Summary",["Blanket-accept any SVG attribute as a `MotionValue`"]],["UnknownTag",{"Name":"public","Content":[]}]],"Name":"SVGAttributesAsMotionValues","Type":["Generic",{"Type":["Mapped",{"Name":"MakeMotion","FullName":""}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"SVGAttributesWithoutMotionProps","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]]}],"TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]]}],["Alias",{"Attributes":[],"Comments":[],"Name":"UnwrapSVGFactoryElement","Type":"TODO","TypeParameters":[["GenericTypeParameter",{"Name":"'F"}]]}],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"SVGMotionProps","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"SVGAttributesAsMotionValues","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}],["Mapped",{"Name":"MotionProps","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["Motion-optimised versions of React's SVG components."]],["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"SVGMotionComponents","FullName":"SVGMotionComponents","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\use-props"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/use-props.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_use_props","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"useSVGProps","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"visualState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"UseSVGPropsReturn","FullName":"UseSVGPropsReturn"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UseSVGPropsReturn","FullName":"UseSVGPropsReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":false,"Type":["Mapped",{"Name":"UseSVGPropsReturnStyle","FullName":"UseSVGPropsReturnStyle"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UseSVGPropsReturnStyle","FullName":"UseSVGPropsReturnStyle","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"x","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\visual-element"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/visual-element.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_visual_element","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"svgVisualElement","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":"TODO"},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"DOMVisualElementOptions","FullName":""}]}],"ReturnType":"TODO","Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"DOMVisualElementOptions"},"SpecifiedModule":"__render_dom_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\animation-state"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/animation-state.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_animation_state","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"variantPriorityOrder","Type":["Array",["Mapped",{"Name":"AnimationType","FullName":""}]],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createAnimationState","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AnimationState","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"variantsHaveChanged","TypeParameters":[],"Params":[{"Name":"prev","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Name":"next","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VariantLabels"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetAndTransition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationOptions"},"SpecifiedModule":"__render_utils_animation","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationType"},"SpecifiedModule":"__render_utils_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationState","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"animateChanges","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationOptions","FullName":""}]},{"Name":"``type``","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationType","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"setActive","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationType","FullName":""}]},{"Name":"isActive","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationOptions","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"setAnimateFunction","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"fn","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isAnimated","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"getState","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"AnimationStateGetState","FullName":"AnimationStateGetState"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"AnimationList","Type":["Union",{"Option":false,"Types":[["Array",["Mapped",{"Name":"string","FullName":"string"}]],["Array",["Mapped",{"Name":"TargetAndTransition","FullName":""}]]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationTypeState","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"isActive","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"protectedKeys","Option":false,"Type":["Mapped",{"Name":"AnimationTypeStateProtectedKeys","FullName":"AnimationTypeStateProtectedKeys"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"needsAnimating","Option":false,"Type":["Mapped",{"Name":"AnimationTypeStateNeedsAnimating","FullName":"AnimationTypeStateNeedsAnimating"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"prevResolvedValues","Option":false,"Type":["Mapped",{"Name":"AnimationTypeStatePrevResolvedValues","FullName":"AnimationTypeStatePrevResolvedValues"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"prevProp","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VariantLabels","FullName":""}],["Mapped",{"Name":"TargetAndTransition","FullName":""}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationStateGetState","FullName":"AnimationStateGetState","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"AnimationTypeState","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationTypeStateProtectedKeys","FullName":"AnimationTypeStateProtectedKeys","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationTypeStateNeedsAnimating","FullName":"AnimationTypeStateNeedsAnimating","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationTypeStatePrevResolvedValues","FullName":"AnimationTypeStatePrevResolvedValues","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\animation"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/animation.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_animation","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"animateVisualElement","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationDefinition","FullName":""}]},{"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationOptions","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"stopAnimation","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"sortByTreeOrder","TypeParameters":[],"Params":[{"Name":"a","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"b","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VariantLabels"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Target"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetAndTransition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetResolver"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetWithKeyframes"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Transition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationType"},"SpecifiedModule":"__render_utils_types","ResolvedModule":null}]],["Alias",{"Attributes":[],"Comments":[],"Name":"AnimationDefinition","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"VariantLabels","FullName":""}],["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"TargetResolver","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationOptions","FullName":"AnimationOptions","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transitionOverride","Option":true,"Type":["Mapped",{"Name":"Transition","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"custom","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":true,"Type":["Mapped",{"Name":"AnimationType","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MakeTargetAnimatable","FullName":"MakeTargetAnimatable","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetWithKeyframes","FullName":""}]},{"Name":"origin","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Target","FullName":""}]},{"Name":"transitionEnd","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Target","FullName":""}]}],"ReturnType":["Mapped",{"Name":"MakeTargetAnimatableInvokeReturn","FullName":"MakeTargetAnimatableInvokeReturn"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MakeTargetAnimatableInvokeReturn","FullName":"MakeTargetAnimatableInvokeReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"TargetWithKeyframes","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transitionEnd","Option":true,"Type":["Mapped",{"Name":"Target","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\compare-by-depth"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/compare-by-depth.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_compare_by_depth","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"compareByDepth","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"a","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"b","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WithDepth","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"depth","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\flat-tree"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/flat-tree.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_flat_tree","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"FlatTree","Option":false,"Type":["Mapped",{"Name":"FlatTreeStatic","FullName":"FlatTreeStatic"}],"Accessor":"ReadOnly","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"WithDepth"},"SpecifiedModule":"__render_utils_compare_by_depth","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":true,"Name":"FlatTree","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"add","TypeParameters":[],"Params":[{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"WithDepth","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"remove","TypeParameters":[],"Params":[{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"WithDepth","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"forEach","TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"WithDepth","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":true,"IsClass":true,"Name":"FlatTreeStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"FlatTree","FullName":"FlatTree"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\lifecycles"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/lifecycles.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_lifecycles","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createLifecycles","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"LifecycleManager","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"SharedLayoutAnimationConfig"},"SpecifiedModule":"__components_AnimateSharedLayout_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BoxDelta"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationDefinition"},"SpecifiedModule":"__render_utils_animation","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutMeasureListener","FullName":"LayoutMeasureListener","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"layout","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"prevLayout","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"BeforeLayoutMeasureListener","FullName":"BeforeLayoutMeasureListener","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"layout","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutUpdateListener","FullName":"LayoutUpdateListener","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"layout","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"prevLayout","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"config","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"SharedLayoutAnimationConfig","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UpdateListener","FullName":"UpdateListener","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"latest","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationStartListener","FullName":"AnimationStartListener","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationCompleteListener","FullName":"AnimationCompleteListener","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationDefinition","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutAnimationCompleteListener","FullName":"LayoutAnimationCompleteListener","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SetAxisTargetListener","FullName":"SetAxisTargetListener","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RenderListener","FullName":"RenderListener","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"OnViewportBoxUpdate","FullName":"OnViewportBoxUpdate","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"delta","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BoxDelta","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["TODO: Make more of these lifecycle events available as props"]]],"IsStatic":false,"IsClass":false,"Name":"VisualElementLifecycles","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["A callback that fires whenever the viewport-relative bounding box updates."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onViewportBoxUpdate","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"delta","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BoxDelta","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"onBeforeLayoutMeasure","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"onLayoutMeasure","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"prevBox","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback with latest motion values, fired max once per frame."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onUpdate(latest) {","  console.log(latest.x, latest.opacity)","}","","<Frame animate={{ x: 100, opacity: 0 }} onUpdate={onUpdate} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onUpdate(latest) {","  console.log(latest.x, latest.opacity)","}","","<motion.div animate={{ x: 100, opacity: 0 }} onUpdate={onUpdate} />","```"]}]],"Kind":"Regular","IsStatic":false,"Name":"onUpdate","TypeParameters":[],"Params":[{"Name":"latest","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback when animation defined in `animate` begins."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onStart() {","  console.log(\"Animation started\")","}","","<Frame animate={{ x: 100 }} onAnimationStart={onStart} />","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onStart() {","  console.log(\"Animation started\")","}","","<motion.div animate={{ x: 100 }} onAnimationStart={onStart} />","```"]}]],"Kind":"Regular","IsStatic":false,"Name":"onAnimationStart","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Callback when animation defined in `animate` is complete.","","The provided callback will be called the triggering animation definition.","If this is a variant, it'll be the variant name, and if a target object","then it'll be the target object.","","This way, it's possible to figure out which animation has completed."]],["UnknownTag",{"Name":"library","Content":["```jsx","function onComplete() {","  console.log(\"Animation completed\")","}","","<Frame","  animate={{ x: 100 }}","  onAnimationComplete={definition => {","    console.log('Completed animating', definition)","  }}","/>","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","function onComplete() {","  console.log(\"Animation completed\")","}","","<motion.div","  animate={{ x: 100 }}","  onAnimationComplete={definition => {","    console.log('Completed animating', definition)","  }}","/>","```"]}]],"Kind":"Regular","IsStatic":false,"Name":"onAnimationComplete","TypeParameters":[],"Params":[{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationDefinition","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onLayoutAnimationComplete","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onUnmount","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LifecycleManager","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onLayoutMeasure","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutMeasureListener","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyLayoutMeasure","Option":false,"Type":["Mapped",{"Name":"LayoutMeasureListener","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onBeforeLayoutMeasure","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BeforeLayoutMeasureListener","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyBeforeLayoutMeasure","Option":false,"Type":["Mapped",{"Name":"BeforeLayoutMeasureListener","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onLayoutUpdate","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutUpdateListener","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyLayoutUpdate","Option":false,"Type":["Mapped",{"Name":"LayoutUpdateListener","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onViewportBoxUpdate","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"OnViewportBoxUpdate","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyViewportBoxUpdate","Option":false,"Type":["Mapped",{"Name":"OnViewportBoxUpdate","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onUpdate","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"UpdateListener","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyUpdate","Option":false,"Type":["Mapped",{"Name":"UpdateListener","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onAnimationStart","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationStartListener","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyAnimationStart","Option":false,"Type":["Mapped",{"Name":"AnimationStartListener","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onAnimationComplete","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationCompleteListener","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyAnimationComplete","Option":false,"Type":["Mapped",{"Name":"AnimationCompleteListener","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onLayoutAnimationComplete","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutAnimationCompleteListener","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyLayoutAnimationComplete","Option":false,"Type":["Mapped",{"Name":"LayoutAnimationCompleteListener","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onSetAxisTarget","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SetAxisTargetListener","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifySetAxisTarget","Option":false,"Type":["Mapped",{"Name":"SetAxisTargetListener","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onRender","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"RenderListener","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyRender","Option":false,"Type":["Mapped",{"Name":"RenderListener","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"onUnmount","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"notifyUnmount","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"clearAllListeners","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"updatePropListeners","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\motion-values"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/motion-values.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_motion_values","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateMotionValuesFromProps","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"next","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionStyle","FullName":""}]},{"Name":"prev","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionStyle","FullName":""}]}],"ReturnType":["Mapped",{"Name":"MotionStyle","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionStyle"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\projection"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/projection.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_projection","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateLayoutDeltas","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutState","FullName":""}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetProjection","FullName":""}]},{"Name":"treePath","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"VisualElement","FullName":""}]]},{"Name":"transformOrigin","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"LayoutState"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetProjection"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\setters"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/setters.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_setters","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setTarget","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"TargetResolver","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setValues","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AnimationDefinition","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"checkTargetForNewValues","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetWithKeyframes","FullName":""}]},{"Name":"origin","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getOriginFromTransition","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"transition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getOrigin","TypeParameters":[],"Params":[{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Target","FullName":""}]},{"Name":"transition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]},{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":"TODO","Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Target"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetAndTransition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetResolver"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetWithKeyframes"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Transition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AnimationDefinition"},"SpecifiedModule":"__render_utils_animation","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\state"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/state.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_state","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"createProjectionState","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"TargetProjection","FullName":""}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createLayoutState","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"LayoutState","FullName":""}],"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"zeroLayout","Type":["Mapped",{"Name":"LayoutState","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BoxDelta"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Point2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["Summary",["Represents the size and position we want to project a given visual","element into."]]],"IsStatic":false,"IsClass":false,"Name":"TargetProjection","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Whether we should attempt to project into this target box."]]],"Kind":"Regular","Index":null,"Name":"isEnabled","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Whether this target box is locked. We might want to lock the box, for","instance if the user is dragging or animating it. Otherwise","we want to rebase the target box ontop of the measured layout."]]],"Kind":"Regular","Index":null,"Name":"isTargetLocked","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The parent-relative box we want to derive the viewport box from, if defined.","This is currently all relative to the top/left of the parent box,","but could be expanded in the future."]]],"Kind":"Regular","Index":null,"Name":"relativeTarget","Option":true,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The viewport-relative box we want to project the element into."]]],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The viewport-relative box we want to project the element into after","it's had x/y/scale transforms applied."]]],"Kind":"Regular","Index":null,"Name":"targetFinal","Option":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[["Summary",["Data about the element's current layout. Contains the latest measurements","as well as the latest calculations of how to project from this layout","into a given TargetProjection."]]],"IsStatic":false,"IsClass":false,"Name":"LayoutState","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["Whether we've hydrated this state with the latest measurements."]]],"Kind":"Regular","Index":null,"Name":"isHydrated","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The latest viewport-box measurements of the element without transforms."]]],"Kind":"Regular","Index":null,"Name":"layout","Option":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The measured viewport box as corrected by parent transforms up the","visual element tree."]]],"Kind":"Regular","Index":null,"Name":"layoutCorrected","Option":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The cumulative tree scale for this element. This starts at 1 per axis.","When a transform is applied to an element we also apply it to the tree scale.","The final value is used for scale-correcting values like border-radius,","as well as ensuring calculated CSS translations are applied to compensate","for this scale."]]],"Kind":"Regular","Index":null,"Name":"treeScale","Option":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["A mutable piece of data that we write into the latest projection calculations","that, when applied to an element, will project it from its layoutCorrected","box into the provided TargetProjection.target"]]],"Kind":"Regular","Index":null,"Name":"delta","Option":false,"Type":["Mapped",{"Name":"BoxDelta","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["A mutable piece of data that will project an element from layoutCorrected","into TargetProjection.targetFinal."]]],"Kind":"Regular","Index":null,"Name":"deltaFinal","Option":false,"Type":["Mapped",{"Name":"BoxDelta","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["The latest generated delta transform. This is used to compare against","the previously-generated transform to determine whether we need to trigger","a render."]]],"Kind":"Regular","Index":null,"Name":"deltaTransform","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_types","Types":[["Enum",{"Attributes":[],"Comments":[],"Name":"AnimationType","Cases":[{"Attributes":[],"Comments":[],"Name":"Animate","Type":"String","Value":"animate"},{"Attributes":[],"Comments":[],"Name":"Hover","Type":"String","Value":"whileHover"},{"Attributes":[],"Comments":[],"Name":"Tap","Type":"String","Value":"whileTap"},{"Attributes":[],"Comments":[],"Name":"Drag","Type":"String","Value":"whileDrag"},{"Attributes":[],"Comments":[],"Name":"Focus","Type":"String","Value":"whileFocus"},{"Attributes":[],"Comments":[],"Name":"Exit","Type":"String","Value":"exit"}]}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\utils\\variants"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/utils/variants.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_utils_variants","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Decides if the supplied variable is an array of variant labels"]]],"Kind":"Regular","IsStatic":false,"Name":"isVariantLabels","TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":"TODO"}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Decides if the supplied variable is variant label"]]],"Kind":"Regular","IsStatic":false,"Name":"isVariantLabel","TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":"TODO"}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resolveVariantFromProps","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"TargetResolver","FullName":""}]]}]},{"Name":"custom","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Name":"currentValues","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"currentVelocity","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"TargetAndTransition","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resolveVariantFromProps","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"definition","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"TargetResolver","FullName":""}]]}]},{"Name":"custom","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Name":"currentValues","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"currentVelocity","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"TargetAndTransition","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Resovles a variant if it's a variant resolver"]]],"Kind":"Regular","IsStatic":false,"Name":"resolveVariant","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"definition","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"TargetResolver","FullName":""}]]}]},{"Name":"custom","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Mapped",{"Name":"TargetAndTransition","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resolveVariant","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"definition","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"TargetAndTransition","FullName":""}],["Mapped",{"Name":"TargetResolver","FullName":""}]]}]},{"Name":"custom","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"TargetAndTransition","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"checkIfControllingVariants","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"checkIfVariantNode","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetAndTransition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetResolver"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\geometry\\delta-apply"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/geometry/delta-apply.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_geometry_delta_apply","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Reset an axis to the provided origin box.","","This is a mutative operation."]]],"Kind":"Regular","IsStatic":false,"Name":"resetAxis","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"originAxis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Reset a box to the provided origin box.","","This is a mutative operation."]]],"Kind":"Regular","IsStatic":false,"Name":"resetBox","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"originBox","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Scales a point based on a factor and an originPoint"]]],"Kind":"Regular","IsStatic":false,"Name":"scalePoint","TypeParameters":[],"Params":[{"Name":"point","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"scale","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"originPoint","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Applies a translate/scale delta to a point"]]],"Kind":"Regular","IsStatic":false,"Name":"applyPointDelta","TypeParameters":[],"Params":[{"Name":"point","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"translate","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"scale","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"originPoint","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"boxScale","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Applies a translate/scale delta to an axis"]]],"Kind":"Regular","IsStatic":false,"Name":"applyAxisDelta","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"translate","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Name":"scale","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Name":"originPoint","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"boxScale","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Applies a translate/scale delta to a box"]]],"Kind":"Regular","IsStatic":false,"Name":"applyBoxDelta","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BoxDelta","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Apply a transform to an axis from the latest resolved motion values.","This function basically acts as a bridge between a flat motion value map","and applyAxisDelta"]]],"Kind":"Regular","IsStatic":false,"Name":"applyAxisTransforms","TypeParameters":[],"Params":[{"Name":"final","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"transforms","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"p3","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Apply a transform to a box from the latest resolved motion values."]]],"Kind":"Regular","IsStatic":false,"Name":"applyBoxTransforms","TypeParameters":[],"Params":[{"Name":"finalBox","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"transforms","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse"]]],"Kind":"Regular","IsStatic":false,"Name":"removePointDelta","TypeParameters":[],"Params":[{"Name":"point","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"translate","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"scale","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"originPoint","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"boxScale","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse"]]],"Kind":"Regular","IsStatic":false,"Name":"removeAxisDelta","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"translate","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"scale","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"origin","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"boxScale","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse","and acts as a bridge between motion values and removeAxisDelta"]]],"Kind":"Regular","IsStatic":false,"Name":"removeAxisTransforms","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"transforms","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"p2","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse","and acts as a bridge between motion values and removeAxisDelta"]]],"Kind":"Regular","IsStatic":false,"Name":"removeBoxTransforms","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"transforms","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms","in a tree upon our box before then calculating how to project it into our desired viewport-relative box","","This is the final nested loop within updateLayoutDelta for future refactoring"]]],"Kind":"Regular","IsStatic":false,"Name":"applyTreeDeltas","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"treeScale","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}]},{"Name":"treePath","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"VisualElement","FullName":""}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Axis"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BoxDelta"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Point2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\geometry\\delta-calc"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/geometry/delta-calc.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_geometry_delta_calc","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Returns true if the provided value is within maxDistance of the provided target"]]],"Kind":"Regular","IsStatic":false,"Name":"isNear","TypeParameters":[],"Params":[{"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"target","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"maxDistance","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Calculate a transform origin relative to the source axis, between 0-1, that results","in an asthetically pleasing scale/transform needed to project from source to target."]]],"Kind":"Regular","IsStatic":false,"Name":"calcOrigin","TypeParameters":[],"Params":[{"Name":"source","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Update the AxisDelta with a transform that projects source into target.","","The transform `origin` is optional. If not provided, it'll be automatically","calculated based on the relative positions of the two bounding boxes."]]],"Kind":"Regular","IsStatic":false,"Name":"updateAxisDelta","TypeParameters":[],"Params":[{"Name":"delta","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisDelta","FullName":""}]},{"Name":"source","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"origin","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Update the BoxDelta with a transform that projects the source into the target.","","The transform `origin` is optional. If not provided, it'll be automatically","calculated based on the relative positions of the two bounding boxes."]]],"Kind":"Regular","IsStatic":false,"Name":"updateBoxDelta","TypeParameters":[],"Params":[{"Name":"delta","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BoxDelta","FullName":""}]},{"Name":"source","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"origin","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"calcRelativeAxis","TypeParameters":[],"Params":[{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"relative","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"parent","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"calcRelativeBox","TypeParameters":[],"Params":[{"Name":"projection","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetProjection","FullName":""}]},{"Name":"parentProjection","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetProjection","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Axis"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisDelta"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BoxDelta"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetProjection"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","utils\\geometry\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/utils/geometry/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__utils_geometry_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Bounding boxes tend to be defined as top, left, right, bottom. For various operations","it's easier to consider each axis individually. This function returns a bounding box","as a map of single-axis min/max values."]]],"Kind":"Regular","IsStatic":false,"Name":"convertBoundingBoxToAxisBox","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BoundingBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"convertAxisBoxToBoundingBox","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"BoundingBox2D","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Applies a TransformPoint function to a bounding box. TransformPoint is usually a function","provided by Framer to allow measured points to be corrected for device scaling. This is used","when measuring DOM elements and DOM event points."]]],"Kind":"Regular","IsStatic":false,"Name":"transformBoundingBox","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BoundingBox2D","FullName":""}]},{"Name":"transformPoint","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"TransformPoint2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"BoundingBox2D","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Calculate the center point of the provided axis"]]],"Kind":"Regular","IsStatic":false,"Name":"calcAxisCenter","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Create an empty axis box of zero size"]]],"Kind":"Regular","IsStatic":false,"Name":"axisBox","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"copyAxisBox","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"delta","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"BoxDelta","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"BoundingBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TransformPoint2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Axis"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BoxDelta"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\scroll\\use-element-scroll"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/scroll/use-element-scroll.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_scroll_use_element_scroll","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Returns MotionValues that update when the provided element scrolls:","","- `scrollX` — Horizontal scroll distance in pixels.","- `scrollY` — Vertical scroll distance in pixels.","- `scrollXProgress` — Horizontal scroll progress between `0` and `1`.","- `scrollYProgress` — Vertical scroll progress between `0` and `1`.","","This element must be set to `overflow: scroll` on either or both axes to report scroll offset."]],["UnknownTag",{"Name":"library","Content":["```jsx","import * as React from \"react\"","import {","  Frame,","  useElementScroll,","  useTransform","} from \"framer\"","","export function MyComponent() {","  const ref = React.useRef()","  const { scrollYProgress } = useElementScroll(ref)","","  return (","    <Frame ref={ref}>","      <Frame scaleX={scrollYProgress} />","    </Frame>","  )","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","export const MyComponent = () => {","  const ref = useRef()","  const { scrollYProgress } = useElementScroll(ref)","","  return (","    <div ref={ref}>","      <motion.div style={{ scaleX: scrollYProgress }} />","    </div>","  )","}","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useElementScroll","TypeParameters":[],"Params":[{"Name":"ref","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"RefObject","FullName":""}],"TypeParameters":[["Mapped",{"Name":"HTMLElement","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"ScrollMotionValues","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"RefObject"},"SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ScrollMotionValues"},"SpecifiedModule":"__value_scroll_utils","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\scroll\\use-viewport-scroll"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/scroll/use-viewport-scroll.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_scroll_use_viewport_scroll","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Returns MotionValues that update when the viewport scrolls:","","- `scrollX` — Horizontal scroll distance in pixels.","- `scrollY` — Vertical scroll distance in pixels.","- `scrollXProgress` — Horizontal scroll progress between `0` and `1`.","- `scrollYProgress` — Vertical scroll progress between `0` and `1`.","","**Warning:** Setting `body` or `html` to `height: 100%` or similar will break the `Progress`","values as this breaks the browser's capability to accurately measure the page length."]],["UnknownTag",{"Name":"library","Content":["```jsx","import * as React from \"react\"","import {","  Frame,","  useViewportScroll,","  useTransform","} from \"framer\"","","export function MyComponent() {","  const { scrollYProgress } = useViewportScroll()","  return <Frame scaleX={scrollYProgress} />","}","```"]}],["UnknownTag",{"Name":"motion","Content":["```jsx","export const MyComponent = () => {","  const { scrollYProgress } = useViewportScroll()","  return <motion.div style={{ scaleX: scrollYProgress }} />","}","```"]}],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"useViewportScroll","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ScrollMotionValues","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ScrollMotionValues"},"SpecifiedModule":"__value_scroll_utils","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\scroll\\utils"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/scroll/utils.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_scroll_utils","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createScrollMotionValues","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ScrollMotionValues","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createScrollUpdater","TypeParameters":[],"Params":[{"Name":"values","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollMotionValues","FullName":""}]},{"Name":"getOffsets","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GetScrollOffsets","FullName":""}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"__value_","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"ScrollMotionValues","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scrollX","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scrollY","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scrollXProgress","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"scrollYProgress","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"MotionValue","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollOffsets","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"xOffset","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"yOffset","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"xMaxOffset","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"yMaxOffset","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GetScrollOffsets","FullName":"GetScrollOffsets","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ScrollOffsets","FullName":""}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\utils\\is-motion-value"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/utils/is-motion-value.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_utils_is_motion_value","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"isMotionValue","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"__value_","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","value\\utils\\resolve-motion-value"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/value/utils/resolve-motion-value.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__value_utils_resolve_motion_value","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself","","TODO: Remove and move to library"]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"resolveMotionValue","TypeParameters":[],"Params":[{"Name":"value","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"CustomValueType","FullName":""}],["Mapped",{"Name":"MotionValue","FullName":""}]]}]}],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionValue"},"SpecifiedModule":"__","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"CustomValueType"},"SpecifiedModule":"Types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimateSharedLayout\\utils\\batcher"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimateSharedLayout/utils/batcher.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimateSharedLayout_utils_batcher","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Create a batcher to process VisualElements"]]],"Kind":"Regular","IsStatic":false,"Name":"createBatcher","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"SyncLayoutBatcher","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"SyncLayoutBatcher"},"SpecifiedModule":"__components_AnimateSharedLayout_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimateSharedLayout\\utils\\crossfader"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimateSharedLayout/utils/crossfader.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimateSharedLayout_utils_crossfader","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createCrossfader","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"Crossfader","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"PlaybackControls"},"SpecifiedModule":"Popmotion","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Transition"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Crossfader","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isActive","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getCrossfadeState","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"ResolvedValues","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"toLead","TypeParameters":[],"Params":[{"Name":"transition","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]}],"ReturnType":["Mapped",{"Name":"PlaybackControls","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"fromLead","TypeParameters":[],"Params":[{"Name":"transition","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Transition","FullName":""}]}],"ReturnType":["Mapped",{"Name":"PlaybackControls","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setOptions","TypeParameters":[],"Params":[{"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"CrossfadeAnimationOptions","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"reset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"stop","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getLatestValues","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CrossfadeAnimationOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"lead","Option":true,"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"follow","Option":true,"Type":["Mapped",{"Name":"VisualElement","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"prevValues","Option":true,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"crossfadeOpacity","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"preserveFollowOpacity","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimateSharedLayout\\utils\\rotate"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimateSharedLayout/utils/rotate.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimateSharedLayout_utils_rotate","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resetRotate","TypeParameters":[],"Params":[{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","components\\AnimateSharedLayout\\utils\\stack"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/components/AnimateSharedLayout/utils/stack.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__components_AnimateSharedLayout_utils_stack","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"layoutStack","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"LayoutStack","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Alias",{"Attributes":[],"Comments":[],"Name":"LeadAndFollow","Type":["Tuple",{"Types":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"VisualElement","FullName":""}]]}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"VisualElement","FullName":""}]]}]],"Kind":"Tuple"}],"TypeParameters":[]}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutStack","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"add","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"remove","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getLead","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"VisualElement","FullName":""}]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateSnapshot","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"clearSnapshot","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"animate","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"crossfade","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateLeadAndFollow","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\drag\\utils\\constraints"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/drag/utils/constraints.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_drag_utils_constraints","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Apply constraints to a point. These constraints are both physical along an","axis, and an elastic factor that determines how much to constrain the point","by if it does lie outside the defined parameters."]]],"Kind":"Regular","IsStatic":false,"Name":"applyConstraints","TypeParameters":[],"Params":[{"Name":"point","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]},{"Name":"elastic","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Calculates a min projection point based on a pointer, pointer progress","within the drag target, and constraints.","","For instance if an element was 100px width, we were dragging from 0.25","along this axis, the pointer is at 200px, and there were no constraints,","we would calculate a min projection point of 175px."]]],"Kind":"Regular","IsStatic":false,"Name":"calcConstrainedMinPoint","TypeParameters":[],"Params":[{"Name":"point","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"length","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"progress","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"constraints","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]},{"Name":"elastic","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Calculate constraints in terms of the viewport when defined relatively to the","measured axis. This is measured from the nearest edge, so a max constraint of 200","on an axis with a max value of 300 would return a constraint of 500 - axis length"]]],"Kind":"Regular","IsStatic":false,"Name":"calcRelativeAxisConstraints","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"min","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"max","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Calculate constraints in terms of the viewport when","defined relatively to the measured bounding box."]]],"Kind":"Regular","IsStatic":false,"Name":"calcRelativeConstraints","TypeParameters":[],"Params":[{"Name":"layoutBox","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]}],"ReturnType":["Mapped",{"Name":"ResolvedConstraints","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Calculate viewport constraints when defined as another viewport-relative axis"]]],"Kind":"Regular","IsStatic":false,"Name":"calcViewportAxisConstraints","TypeParameters":[],"Params":[{"Name":"layoutAxis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"constraintsAxis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]}],"ReturnType":["Mapped",{"Name":"CalcViewportAxisConstraintsReturn","FullName":"CalcViewportAxisConstraintsReturn"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Calculate viewport constraints when defined as another viewport-relative box"]]],"Kind":"Regular","IsStatic":false,"Name":"calcViewportConstraints","TypeParameters":[],"Params":[{"Name":"layoutBox","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"constraintsBox","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"CalcViewportConstraintsReturn","FullName":"CalcViewportConstraintsReturn"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Calculate the relative progress of one constraints box relative to another.","Imagine a page scroll bar. At the top, this would return 0, at the bottom, 1.","Anywhere in-between, a value between 0 and 1.","","This also handles flipped constraints, for instance a draggable container within","a smaller viewport like a scrollable view."]]],"Kind":"Regular","IsStatic":false,"Name":"calcProgressWithinConstraints","TypeParameters":[],"Params":[{"Name":"layoutBox","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"constraintsBox","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"Point2D","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Calculate the an axis position based on two axes and a progress value."]]],"Kind":"Regular","IsStatic":false,"Name":"calcPositionFromProgress","TypeParameters":[],"Params":[{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"constraints","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"progress","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"Axis","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Rebase the calculated viewport constraints relative to the layout.min point."]]],"Kind":"Regular","IsStatic":false,"Name":"rebaseAxisConstraints","TypeParameters":[],"Params":[{"Name":"layout","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"constraints","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"defaultElastic","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Accepts a dragElastic prop and returns resolved elastic values for each axis."]]],"Kind":"Regular","IsStatic":false,"Name":"resolveDragElastic","TypeParameters":[],"Params":[{"Name":"dragElastic","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DragElastic","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resolveAxisElastic","TypeParameters":[],"Params":[{"Name":"dragElastic","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DragElastic","FullName":""}]},{"Name":"minLabel","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"maxLabel","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"Axis","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"resolvePointElastic","TypeParameters":[],"Params":[{"Name":"dragElastic","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DragElastic","FullName":""}]},{"Name":"label","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CalcViewportAxisConstraintsReturn","FullName":"CalcViewportAxisConstraintsReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"min","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"max","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CalcViewportConstraintsReturn","FullName":"CalcViewportConstraintsReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"CalcViewportConstraintsReturnX","FullName":"CalcViewportConstraintsReturnX"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"CalcViewportConstraintsReturnX","FullName":"CalcViewportConstraintsReturnX"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Axis"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BoundingBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Point2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"DragElastic"},"SpecifiedModule":"__gestures_drag_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedConstraints"},"SpecifiedModule":"__gestures_drag_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CalcViewportConstraintsReturnX","FullName":"CalcViewportConstraintsReturnX","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"min","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"max","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","gestures\\drag\\utils\\lock"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/gestures/drag/utils/lock.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__gestures_drag_utils_lock","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createLock","TypeParameters":[],"Params":[{"Name":"name","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"Lock","FullName":""}],"Accessibility":null}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getGlobalLock","TypeParameters":[],"Params":[{"Name":"drag","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}],["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"x","Type":"String","Value":"x"},{"Attributes":[],"Comments":[],"Name":"y","Type":"String","Value":"y"},{"Attributes":[],"Comments":[],"Name":"lockDirection","Type":"String","Value":"lockDirection"}]}]]}]}],"ReturnType":["Mapped",{"Name":"Lock","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isDragActive","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Attributes":[],"Comments":[],"Name":"Lock","Type":["Union",{"Option":false,"Types":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"TypeParameters":[]}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\layout\\Animate"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/layout/Animate.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_layout_Animate","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"AnimateLayoutContextProvider","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureProps"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\layout\\index"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/layout/index.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_layout_index","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"layoutAnimations","Type":["Mapped",{"Name":"FeatureComponents","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureComponents"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\layout\\Measure"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/layout/Measure.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_layout_Measure","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"MeasureContextProvider","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureProps"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\layout\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/layout/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_layout_types","Types":[["Interface",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"public","Content":[]}]],"IsStatic":false,"IsClass":false,"Name":"LayoutProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[["Summary",["If `true`, this component will automatically animate to its new position when","its layout changes.","","<code language=\"jsx\">","&lt;motion.div layout /&gt;","</code>","","This will perform a layout animation using performant transforms. Part of this technique","involved animating an element's scale. This can introduce visual distortions on children,","`boxShadow` and `borderRadius`.","","To correct distortion on immediate children, add `layout` to those too.","","`boxShadow` and `borderRadius` will automatically be corrected if they are already being","animated on this component. Otherwise, set them directly via the `initial` prop.","","If `layout` is set to `\"position\"`, the size of the component will change instantly and","only its position will animate."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"layout","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}],["Enum",{"Attributes":[],"Comments":[],"Name":"StringEnum","Cases":[{"Attributes":[],"Comments":[],"Name":"position","Type":"String","Value":"position"}]}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[["Summary",["Enable shared layout transitions between components for children of `AnimateSharedLayout`.","","When a component with a layoutId is removed from the React tree, and then","added elsewhere, it will visually animate from the previous component's bounding box","and its latest animated values.","","<code language=\"jsx\">","&lt;AnimateSharedLayout&gt;","   {items.map(item =&gt; (","      &lt;motion.li layout&gt;","         {item.name}","         {item.isSelected &amp;&amp; &lt;motion.div layoutId=\"underline\" /&gt;}","      &lt;/motion.li&gt;","   ))}","&lt;/AnimateSharedLayout&gt;","</code>","","If the previous component remains in the tree it will either get hidden immediately or,","if `type=\"crossfade\"` is set on `AnimateSharedLayout`, it will crossfade to the new component."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","Index":null,"Name":"layoutId","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["A callback that will fire when a layout animation on this component completes."]],["UnknownTag",{"Name":"public","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"onLayoutAnimationComplete","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","motion\\features\\layout\\utils"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/motion/features/layout/utils.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__motion_features_layout_utils","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"tweenAxis","TypeParameters":[],"Params":[{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"prev","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"next","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"p","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"calcRelativeOffsetAxis","TypeParameters":[],"Params":[{"Name":"parent","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]},{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]}],"ReturnType":["Mapped",{"Name":"CalcRelativeOffsetAxisReturn","FullName":"CalcRelativeOffsetAxisReturn"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"calcRelativeOffset","TypeParameters":[],"Params":[{"Name":"parent","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]},{"Name":"child","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AxisBox2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"checkIfParentHasChanged","TypeParameters":[],"Params":[{"Name":"prev","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"WithLayoutId","FullName":""}]},{"Name":"next","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"WithLayoutId","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CalcRelativeOffsetAxisReturn","FullName":"CalcRelativeOffsetAxisReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"min","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"max","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Axis"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WithLayoutId","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"getLayoutId","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\projection\\convert-to-relative"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/projection/convert-to-relative.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_projection_convert_to_relative","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Returns a boolean stating whether or not we converted the projection","to relative projection."]]],"Kind":"Regular","IsStatic":false,"Name":"convertToRelativeProjection","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"isLayoutDrag","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\projection\\default-scale-correctors"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/projection/default-scale-correctors.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_projection_default_scale_correctors","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"pixelsToPercent","TypeParameters":[],"Params":[{"Name":"pixels","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"axis","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Axis","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["We always correct borderRadius as a percentage rather than pixels to reduce paints.","For example, if you are projecting a box that is 100px wide with a 10px borderRadius","into a box that is 200px wide with a 20px borderRadius, that is actually a 10%","borderRadius in both states. If we animate between the two in pixels that will trigger","a paint each time. If we animate between the two in percentage we'll avoid a paint."]]],"Kind":"Regular","IsStatic":false,"Name":"correctBorderRadius","TypeParameters":[],"Params":[{"Name":"latest","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Name":"_layoutState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutState","FullName":""}]},{"Name":"p2","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetProjection","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"correctBoxShadow","TypeParameters":[],"Params":[{"Name":"latest","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"defaultScaleCorrectors","Type":["Mapped",{"Name":"IExportsDefaultScaleCorrectors","FullName":"IExportsDefaultScaleCorrectors"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Axis"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"LayoutState"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetProjection"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsDefaultScaleCorrectorsBorderRadius","FullName":"IExportsDefaultScaleCorrectorsBorderRadius","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"applyTo","Option":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"``process``","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius","FullName":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"``process``","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsDefaultScaleCorrectors","FullName":"IExportsDefaultScaleCorrectors","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"borderRadius","Option":false,"Type":["Mapped",{"Name":"IExportsDefaultScaleCorrectorsBorderRadius","FullName":"IExportsDefaultScaleCorrectorsBorderRadius"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopLeftRadius","Option":false,"Type":["Mapped",{"Name":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius","FullName":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopRightRadius","Option":false,"Type":["Mapped",{"Name":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius","FullName":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomLeftRadius","Option":false,"Type":["Mapped",{"Name":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius","FullName":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomRightRadius","Option":false,"Type":["Mapped",{"Name":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius","FullName":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"boxShadow","Option":false,"Type":["Mapped",{"Name":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius","FullName":"IExportsDefaultScaleCorrectorsBorderTopLeftRadius"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\projection\\measure"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/projection/measure.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_projection_measure","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Measure and return the element bounding box.","","We convert the box into an AxisBox2D to make it easier to work with each axis","individually and programmatically.","","This function optionally accepts a transformPagePoint function which allows us to compensate","for, for instance, measuring the element within a scaled plane like a Framer devivce preview component."]]],"Kind":"Regular","IsStatic":false,"Name":"getBoundingBox","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Element","FullName":""}]},{"Name":"transformPagePoint","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"TransformPoint2D","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AxisBox2D","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"TransformPoint2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"AxisBox2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\projection\\relative-set"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/projection/relative-set.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_projection_relative_set","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setCurrentViewportBox","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\projection\\scale-correction"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/projection/scale-correction.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_projection_scale_correction","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"valueScaleCorrection","Type":["Mapped",{"Name":"ScaleCorrectionDefinitionMap","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"addScaleCorrection","TypeParameters":[],"Params":[{"Name":"correctors","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScaleCorrectionDefinitionMap","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ScaleCorrectionDefinitionMap"},"SpecifiedModule":"__render_dom_projection_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\projection\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/projection/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_projection_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"LayoutState"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetProjection"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScaleCorrection","FullName":"ScaleCorrection","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"latest","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Name":"layoutState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutState","FullName":""}]},{"Name":"projection","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetProjection","FullName":""}]}],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScaleCorrectionDefinition","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"``process``","Option":false,"Type":["Mapped",{"Name":"ScaleCorrection","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"applyTo","Option":true,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScaleCorrectionDefinitionMap","FullName":"ScaleCorrectionDefinitionMap","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"ScaleCorrectionDefinition","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\projection\\utils"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/projection/utils.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_projection_utils","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"updateTreeLayoutMeasurements","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"isRelativeDrag","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"collectProjectingChildren","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Array",["Mapped",{"Name":"VisualElement","FullName":""}]],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Perform the callback after temporarily unapplying the transform","upwards through the tree."]]],"Kind":"Regular","IsStatic":false,"Name":"withoutTreeTransform","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Update the layoutState by measuring the DOM layout. This","should be called after resetting any layout-affecting transforms."]]],"Kind":"Regular","IsStatic":false,"Name":"updateLayoutMeasurement","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Record the viewport box as it was before an expected mutation/re-render"]]],"Kind":"Regular","IsStatic":false,"Name":"snapshotViewportBox","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"batchResetAndMeasure","TypeParameters":[],"Params":[{"Name":"order","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"VisualElement","FullName":""}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\utils\\camel-to-dash"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/utils/camel-to-dash.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_utils_camel_to_dash","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Convert camelCase to dash-case properties."]]],"Export":null,"HasDeclare":true,"Name":"camelToDash","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"str","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\utils\\create-config"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/utils/create-config.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_utils_create_config","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createDomMotionConfig","TypeParameters":[["GenericTypeParameter",{"Name":"'Props"}]],"Params":[{"Name":"Component","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Generic",{"Type":["Mapped",{"Name":"React.ComponentType","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'Props","FullName":""}]]}]]}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"CustomMotionComponentConfig","FullName":""}]},{"Name":"preloadedFeatures","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"FeatureComponents","FullName":""}]},{"Name":"createVisualElement","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"CreateVisualElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]}],"ReturnType":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"MotionComponentConfig","FullName":""}],"TypeParameters":[["Mapped",{"Name":"SVGElement","FullName":""}],["Mapped",{"Name":"SVGRenderState","FullName":""}]]}],["Generic",{"Type":["Mapped",{"Name":"MotionComponentConfig","FullName":""}],"TypeParameters":[["Mapped",{"Name":"HTMLElement","FullName":""}],["Mapped",{"Name":"HTMLRenderState","FullName":""}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"FeatureComponents"},"SpecifiedModule":"__motion_features_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionComponentConfig"},"SpecifiedModule":"Motion","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLRenderState"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SVGRenderState"},"SpecifiedModule":"__render_svg_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"CreateVisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"CustomMotionComponentConfig"},"SpecifiedModule":"__render_dom_motion_proxy","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\utils\\css-variables-conversion"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/utils/css-variables-conversion.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_utils_css_variables_conversion","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Parse Framer's special CSS variable format into a CSS token and a fallback.","","<code>","`var(--foo, #fff)` =&gt; [`--foo`, '#fff']","</code>"]],["Param",{"Name":"current","Content":[]}]],"Export":null,"HasDeclare":true,"Name":"cssVariableRegex","Type":["Mapped",{"Name":"RegExp","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"parseCSSVariable","TypeParameters":[],"Params":[{"Name":"current","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":false,"Types":[["Array",["Mapped",{"Name":"string","FullName":"string"}]],["Array",["Mapped",{"Name":"obj","FullName":"obj"}]]]}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Resolve CSS variables from"]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"resolveCSSVariables","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetWithKeyframes","FullName":""}]},{"Name":"transitionEnd","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"Target","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"ResolveCSSVariablesReturn","FullName":"ResolveCSSVariablesReturn"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ResolveCSSVariablesReturn","FullName":"ResolveCSSVariablesReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"TargetWithKeyframes","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transitionEnd","Option":true,"Type":["Mapped",{"Name":"Target","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Target"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetWithKeyframes"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\utils\\filter-props"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/utils/filter-props.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_utils_filter_props","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"filterProps","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"isDom","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]},{"Name":"forwardMotionProps","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"FilterPropsReturn","FullName":"FilterPropsReturn"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FilterPropsReturn","FullName":"FilterPropsReturn","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\utils\\is-css-variable"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/utils/is-css-variable.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_utils_is_css_variable","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Returns true if the provided key is a CSS variable"]]],"Kind":"Regular","IsStatic":false,"Name":"isCSSVariable","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\utils\\is-svg-component"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/utils/is-svg-component.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_utils_is_svg_component","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isSVGComponent","TypeParameters":[],"Params":[{"Name":"Component","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"ComponentType","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ComponentType"},"SpecifiedModule":"React","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\utils\\parse-dom-variant"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/utils/parse-dom-variant.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_utils_parse_dom_variant","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Parse a DOM variant to make it animatable. This involves resolving CSS variables","and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels."]]],"Export":null,"HasDeclare":true,"Name":"parseDomVariant","Type":["Mapped",{"Name":"MakeTargetAnimatable","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MakeTargetAnimatable"},"SpecifiedModule":"__render_utils_animation","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\utils\\unit-conversion"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/utils/unit-conversion.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_utils_unit_conversion","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Convert value types for x/y/width/height/top/left/bottom/right","","Allows animation between `'auto'` -&gt; `'100%'` or `0` -&gt; `'calc(50% - 10vw)'`"]],["UnknownTag",{"Name":"internal","Content":[]}]],"Kind":"Regular","IsStatic":false,"Name":"unitConversion","TypeParameters":[],"Params":[{"Name":"visualElement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"VisualElement","FullName":""}]},{"Name":"target","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TargetWithKeyframes","FullName":""}]},{"Name":"origin","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Target","FullName":""}]},{"Name":"transitionEnd","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Target","FullName":""}]}],"ReturnType":["Mapped",{"Name":"UnitConversionReturn","FullName":"UnitConversionReturn"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UnitConversionReturn","FullName":"UnitConversionReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"TargetWithKeyframes","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transitionEnd","Option":true,"Type":["Mapped",{"Name":"Target","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"Target"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetWithKeyframes"},"SpecifiedModule":"Types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"VisualElement"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Enum",{"Attributes":[],"Comments":[],"Name":"BoundingBoxDimension","Cases":[{"Attributes":[],"Comments":[],"Name":"width","Type":"String","Value":"width"},{"Attributes":[],"Comments":[],"Name":"height","Type":"String","Value":"height"},{"Attributes":[],"Comments":[],"Name":"left","Type":"String","Value":"left"},{"Attributes":[],"Comments":[],"Name":"right","Type":"String","Value":"right"},{"Attributes":[],"Comments":[],"Name":"top","Type":"String","Value":"top"},{"Attributes":[],"Comments":[],"Name":"bottom","Type":"String","Value":"bottom"}]}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\animatable-none"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/animatable-none.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_animatable_none","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getAnimatableNone","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\defaults"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/defaults.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_defaults","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["A map of default value types for common values"]]],"Export":null,"HasDeclare":true,"Name":"defaultValueTypes","Type":["Mapped",{"Name":"ValueTypeMap","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[["Summary",["Gets the default ValueType for the provided value key"]]],"Export":null,"HasDeclare":true,"Name":"getDefaultValueType","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":"TODO","Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ValueTypeMap"},"SpecifiedModule":"__render_dom_value_types_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\dimensions"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/dimensions.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_dimensions","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["A list of value types commonly used for dimensions"]]],"Export":null,"HasDeclare":true,"Name":"dimensionValueTypes","Type":["Array","TODO"],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[["Summary",["Tests a dimensional value against the list of dimension ValueTypes"]]],"Export":null,"HasDeclare":true,"Name":"findDimensionValueType","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Union",{"Option":true,"Types":["TODO"]}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\find"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/find.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_find","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Tests a value against the list of ValueTypes"]]],"Export":null,"HasDeclare":true,"Name":"findValueType","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Union",{"Option":true,"Types":["TODO",["Mapped",{"Name":"IExportsFindValueType","FullName":"IExportsFindValueType"}]]}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsFindValueType","FullName":"IExportsFindValueType","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"test","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"parse","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Array",["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],"TODO"]}]],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"createTransformer","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Array",["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}],"TODO"]}]]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"getAnimatableNone","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\get-as-type"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/get-as-type.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_get_as_type","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Provided a value and a ValueType, returns the value as that value type."]]],"Export":null,"HasDeclare":true,"Name":"getValueAsType","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Name":"``type``","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ValueType","FullName":""}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ValueType"},"SpecifiedModule":"Style_value_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\number"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/number.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_number","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"numberValueTypes","Type":["Mapped",{"Name":"ValueTypeMap","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ValueTypeMap"},"SpecifiedModule":"__render_dom_value_types_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\test"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/test.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_test","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["Tests a provided value against a ValueType"]]],"Export":null,"HasDeclare":true,"Name":"testValueType","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueType","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ValueType"},"SpecifiedModule":"Style_value_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\type-auto"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/type-auto.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_type_auto","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["ValueType for \"auto\""]]],"Export":null,"HasDeclare":true,"Name":"auto","Type":["Mapped",{"Name":"ValueType","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ValueType"},"SpecifiedModule":"Style_value_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\type-int"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/type-int.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_type_int","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"int","Type":["Mapped",{"Name":"IExportsInt","FullName":"IExportsInt"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsInt","FullName":"IExportsInt","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transform","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"x","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"test","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"parse","Option":false,"Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"createTransformer","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"template","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":"TODO","Accessibility":null}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"``default``","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"getAnimatableNone","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Name":"v","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]]}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\dom\\value-types\\types"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/dom/value-types/types.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_dom_value_types_types","Types":[["Import",["Type",{"ImportSpecifier":{"Name":"ValueType"},"SpecifiedModule":"Style_value_types","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueTypeMap","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Index","Index":{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"ValueType","FullName":""}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\utils\\build-projection-transform"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/utils/build-projection-transform.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_utils_build_projection_transform","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Build a transform style that takes a calculated delta between the element's current","space on screen and projects it into the desired space."]]],"Kind":"Regular","IsStatic":false,"Name":"buildLayoutProjectionTransform","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BoxDelta","FullName":""}]},{"Name":"treeScale","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}]},{"Name":"latestTransform","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Take the calculated delta origin and apply it as a transform string."]]],"Kind":"Regular","IsStatic":false,"Name":"buildLayoutProjectionTransformOrigin","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"identityProjection","Type":["Mapped",{"Name":"string","FullName":"string"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"BoxDelta"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"Point2D"},"SpecifiedModule":"__types_geometry","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"LayoutState"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"BuildProjectionTransform","FullName":"BuildProjectionTransform","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"box","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BoxDelta","FullName":""}]},{"Name":"treeScale","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Point2D","FullName":""}]},{"Name":"transform","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"BuildProjectionTransformOrigin","FullName":"BuildProjectionTransformOrigin","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Name":"layout","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\utils\\build-styles"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/utils/build-styles.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_utils_build_styles","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"buildHTMLStyles","TypeParameters":[],"Params":[{"Name":"state","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"HTMLRenderState","FullName":""}]},{"Name":"latestValues","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"projection","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"TargetProjection","FullName":""}]]}]},{"Name":"layoutState","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"LayoutState","FullName":""}]]}]},{"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DOMVisualElementOptions","FullName":""}]},{"Name":"transformTemplate","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"buildProjectionTransform","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"BuildProjectionTransform","FullName":""}]},{"Name":"buildProjectionTransformOrigin","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"BuildProjectionTransformOrigin","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLRenderState"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"LayoutState"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetProjection"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"DOMVisualElementOptions"},"SpecifiedModule":"__render_dom_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BuildProjectionTransform"},"SpecifiedModule":"__render_html_utils_build_projection_transform","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BuildProjectionTransformOrigin"},"SpecifiedModule":"__render_html_utils_build_projection_transform","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\utils\\build-transform"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/utils/build-transform.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_utils_build_transform","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Build a CSS transform style from individual x/y/scale etc properties.","","This outputs with a default order of transforms/scales/rotations, this can be customised by","providing a transformTemplate function."]]],"Kind":"Regular","IsStatic":false,"Name":"buildTransform","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"HTMLRenderState","FullName":""}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DOMVisualElementOptions","FullName":""}]},{"Name":"transformIsDefault","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]},{"Name":"transformTemplate","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["Build a transformOrigin style. Uses the same defaults as the browser for","undefined origins."]]],"Kind":"Regular","IsStatic":false,"Name":"buildTransformOrigin","TypeParameters":[],"Params":[{"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TransformOrigin","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"DOMVisualElementOptions"},"SpecifiedModule":"__render_dom_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLRenderState"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TransformOrigin"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\utils\\create-render-state"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/utils/create-render-state.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_utils_create_render_state","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"createHtmlRenderState","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"IExportsCreateHtmlRenderState","FullName":"IExportsCreateHtmlRenderState"}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsCreateHtmlRenderStateStyle","FullName":"IExportsCreateHtmlRenderStateStyle","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExportsCreateHtmlRenderState","FullName":"IExportsCreateHtmlRenderState","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":false,"Type":["Mapped",{"Name":"IExportsCreateHtmlRenderStateStyle","FullName":"IExportsCreateHtmlRenderStateStyle"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transform","Option":false,"Type":["Mapped",{"Name":"IExportsCreateHtmlRenderStateStyle","FullName":"IExportsCreateHtmlRenderStateStyle"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transformKeys","Option":false,"Type":["Array","TODO"],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"transformOrigin","Option":false,"Type":["Mapped",{"Name":"IExportsCreateHtmlRenderStateStyle","FullName":"IExportsCreateHtmlRenderStateStyle"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}],["Property",{"Attributes":[],"Comments":[],"Kind":"Regular","Index":null,"Name":"vars","Option":false,"Type":["Mapped",{"Name":"IExportsCreateHtmlRenderStateStyle","FullName":"IExportsCreateHtmlRenderStateStyle"}],"Accessor":"ReadWrite","IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\utils\\render"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/utils/render.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_utils_render","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"renderHTML","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"HTMLElement","FullName":""}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"HTMLRenderState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"HTMLRenderState"},"SpecifiedModule":"__render_html_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\utils\\scrape-motion-values"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/utils/scrape-motion-values.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_utils_scrape_motion_values","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scrapeMotionValuesFromProps","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"ScrapeMotionValuesFromPropsReturn","FullName":"ScrapeMotionValuesFromPropsReturn"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrapeMotionValuesFromPropsReturn","FullName":"ScrapeMotionValuesFromPropsReturn","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\html\\utils\\transform"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/html/utils/transform.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_html_utils_transform","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["A list of all transformable axes. We'll use this list to generated a version","of each axes for each transform."]]],"Export":null,"HasDeclare":true,"Name":"transformAxes","Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Attributes":[],"Comments":[["Summary",["Generate a list of every possible transform key."]]],"Export":null,"HasDeclare":true,"Name":"transformProps","Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Attributes":[],"Comments":[["Summary",["A function to use with Array.sort to sort transform keys by their default order."]]],"Kind":"Regular","IsStatic":false,"Name":"sortTransformProps","TypeParameters":[],"Params":[{"Name":"a","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Name":"b","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isTransformProp","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isTransformOriginProp","TypeParameters":[],"Params":[{"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\utils\\build-attrs"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/utils/build-attrs.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_utils_build_attrs","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Build SVG visual attrbutes, like cx and style.transform"]]],"Kind":"Regular","IsStatic":false,"Name":"buildSVGAttrs","TypeParameters":[],"Params":[{"Name":"state","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SVGRenderState","FullName":""}]},{"Name":"p1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"projection","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"TargetProjection","FullName":""}]]}]},{"Name":"layoutState","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"LayoutState","FullName":""}]]}]},{"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DOMVisualElementOptions","FullName":""}]},{"Name":"transformTemplate","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]},{"Name":"buildProjectionTransform","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"BuildProjectionTransform","FullName":""}]},{"Name":"buildProjectionTransformOrigin","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"BuildProjectionTransformOrigin","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"DOMVisualElementOptions"},"SpecifiedModule":"__render_dom_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"LayoutState"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"TargetProjection"},"SpecifiedModule":"__render_utils_state","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"SVGRenderState"},"SpecifiedModule":"__render_svg_types","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BuildProjectionTransform"},"SpecifiedModule":"__render_html_utils_build_projection_transform","ResolvedModule":null}]],["Import",["Type",{"ImportSpecifier":{"Name":"BuildProjectionTransformOrigin"},"SpecifiedModule":"__render_html_utils_build_projection_transform","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\utils\\camel-case-attrs"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/utils/camel-case-attrs.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_utils_camel_case_attrs","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[["Summary",["A set of attribute names that are always read/written as camel case."]]],"Export":null,"HasDeclare":true,"Name":"camelCaseAttributes","Type":["Generic",{"Type":["Mapped",{"Name":"Set","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\utils\\create-render-state"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/utils/create-render-state.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_utils_create_render_state","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Attributes":[],"Comments":[],"Export":null,"HasDeclare":true,"Name":"createSvgRenderState","Type":["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"SVGRenderState","FullName":""}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"SVGRenderState"},"SpecifiedModule":"__render_svg_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\utils\\path"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/utils/path.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_utils_path","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["Build SVG path properties. Uses the path's measured length to convert","our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset","and stroke-dasharray attributes.","","This function is mutative to reduce per-frame GC."]]],"Kind":"Regular","IsStatic":false,"Name":"buildSVGPath","TypeParameters":[],"Params":[{"Name":"attrs","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ResolvedValues","FullName":""}]},{"Name":"totalLength","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"length","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"spacing","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"offset","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Name":"useDashCase","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"ResolvedValues"},"SpecifiedModule":"__render_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\utils\\render"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/utils/render.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_utils_render","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"renderSVG","TypeParameters":[],"Params":[{"Name":"element","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SVGElement","FullName":""}]},{"Name":"renderState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SVGRenderState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"SVGRenderState"},"SpecifiedModule":"__render_svg_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\utils\\scrape-motion-values"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/utils/scrape-motion-values.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_utils_scrape_motion_values","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scrapeMotionValuesFromProps","TypeParameters":[],"Params":[{"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MotionProps","FullName":""}]}],"ReturnType":["Mapped",{"Name":"ScrapeMotionValuesFromPropsReturn","FullName":"ScrapeMotionValuesFromPropsReturn"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrapeMotionValuesFromPropsReturn","FullName":"ScrapeMotionValuesFromPropsReturn","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"MotionProps"},"SpecifiedModule":"__motion_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]},{"Kind":["Extra","render\\svg\\utils\\transform-origin"],"FileName":"C:/Users/dominik/Projects/Fable.TypescriptProvider/tests/TestGallery/node_modules/framer-motion/types/render/svg/utils/transform-origin.d.ts","ModuleName":"framer-motion","Modules":[{"Comments":[],"HasDeclare":true,"IsNamespace":false,"Name":"__render_svg_utils_transform_origin","Types":[["Interface",{"Attributes":[],"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Attributes":[],"Comments":[["Summary",["The SVG transform origin defaults are different to CSS and is less intuitive,","so we use the measured dimensions of the SVG to reconcile these."]]],"Kind":"Regular","IsStatic":false,"Name":"calcSVGTransformOrigin","TypeParameters":[],"Params":[{"Name":"dimensions","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SVGDimensions","FullName":""}]},{"Name":"originX","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}]},{"Name":"originY","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}]],"Accessibility":null}],["Import",["Type",{"ImportSpecifier":{"Name":"SVGDimensions"},"SpecifiedModule":"__render_svg_types","ResolvedModule":null}]]],"HelperLines":[],"Attributes":[]}]}],"AbbrevTypes":["[<Erase>] type KeyOf<'T> = Key of string","type Function = System.Action","type RegExp = System.Text.RegularExpressions.Regex","type TemplateStringsArray = System.Collections.Generic.IReadOnlyList<string>"]}"""
[<EntryPoint>]
let main argv =
    let fsFile = Thoth.Json.Net.Decode.Auto.fromString<ts2fable.Syntax.FsFileOut> framerMotion
    let t = 
       match fsFile with 
        | Ok fsFile -> 
            let (allTypes, typeMap) = createSimplifiedTypeMap [fsFile]
            let api = buildApi typeMap |> Seq.toList
            let res = api |> List.map(fun a -> 
                               match a.Type' with 
                               | ErasedType.Custom c when c.Name.Contains("IExport") -> (c.Properties)
                               | c -> [a.Name, c]
            
            )
            res
        | Error err -> failwith err
    //let test = Transform.toProvidedTypes (ProviderDsl.makeType("root", false)) t
    Microsoft.FSharpLu.Json.Compact.serializeToFile "./test.json" t

    0 // return an integer exit code