{"Namespace":"ReactNative","Opens":["System","Fable.Core","Fable.Core.JS"],"Files":[{"Kind":"Index","FileName":"node_modules/@types/react-native/index.d.ts","ModuleName":"react-native","Modules":[{"HasDeclare":false,"IsNamespace":false,"Name":"","Types":[["Variable",{"Export":{"IsGlobal":false,"Selector":"AppRegistry","Path":"react-native"},"HasDeclare":true,"Name":"appRegistry","Type":["Mapped",{"Name":"AppRegistry.IExports","FullName":"AppRegistry.IExports"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"StyleSheet","Path":"react-native"},"HasDeclare":true,"Name":"styleSheet","Type":["Mapped",{"Name":"StyleSheet.IExports","FullName":"StyleSheet.IExports"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Animated","Path":"react-native"},"HasDeclare":true,"Name":"animated","Type":["Mapped",{"Name":"Animated.IExports","FullName":"Animated.IExports"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"addons","Path":"react-native"},"HasDeclare":true,"Name":"addons","Type":["Mapped",{"Name":"Addons.IExports","FullName":"Addons.IExports"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"TextBase","Path":"react-native"},"HasDeclare":true,"Name":"TextBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"TextInputBase","Path":"react-native"},"HasDeclare":true,"Name":"TextInputBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ToolbarAndroidBase","Path":"react-native"},"HasDeclare":true,"Name":"ToolbarAndroidBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ViewBase","Path":"react-native"},"HasDeclare":true,"Name":"ViewBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ViewPagerAndroidBase","Path":"react-native"},"HasDeclare":true,"Name":"ViewPagerAndroidBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"KeyboardAvoidingViewBase","Path":"react-native"},"HasDeclare":true,"Name":"KeyboardAvoidingViewBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"SafeAreaViewBase","Path":"react-native"},"HasDeclare":true,"Name":"SafeAreaViewBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"SegmentedControlIOSBase","Path":"react-native"},"HasDeclare":true,"Name":"SegmentedControlIOSBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ActivityIndicatorBase","Path":"react-native"},"HasDeclare":true,"Name":"ActivityIndicatorBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"DatePickerIOSBase","Path":"react-native"},"HasDeclare":true,"Name":"DatePickerIOSBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"DrawerLayoutAndroidBase","Path":"react-native"},"HasDeclare":true,"Name":"DrawerLayoutAndroidBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"PickerIOSBase","Path":"react-native"},"HasDeclare":true,"Name":"PickerIOSBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ProgressBarAndroidBase","Path":"react-native"},"HasDeclare":true,"Name":"ProgressBarAndroidBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ProgressViewIOSBase","Path":"react-native"},"HasDeclare":true,"Name":"ProgressViewIOSBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"RefreshControlBase","Path":"react-native"},"HasDeclare":true,"Name":"RefreshControlBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"RecyclerViewBackedScrollViewBase","Path":"react-native"},"HasDeclare":true,"Name":"RecyclerViewBackedScrollViewBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"SliderBase","Path":"react-native"},"HasDeclare":true,"Name":"SliderBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ImageBase","Path":"react-native"},"HasDeclare":true,"Name":"ImageBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ImageBackgroundBase","Path":"react-native"},"HasDeclare":true,"Name":"ImageBackgroundBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ListViewBase","Path":"react-native"},"HasDeclare":true,"Name":"ListViewBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"MapViewBase","Path":"react-native"},"HasDeclare":true,"Name":"MapViewBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"MaskedViewBase","Path":"react-native"},"HasDeclare":true,"Name":"MaskedViewBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"TouchableWithoutFeedbackBase","Path":"react-native"},"HasDeclare":true,"Name":"TouchableWithoutFeedbackBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"TouchableHighlightBase","Path":"react-native"},"HasDeclare":true,"Name":"TouchableHighlightBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"TouchableOpacityBase","Path":"react-native"},"HasDeclare":true,"Name":"TouchableOpacityBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"TouchableNativeFeedbackBase","Path":"react-native"},"HasDeclare":true,"Name":"TouchableNativeFeedbackBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ScrollViewBase","Path":"react-native"},"HasDeclare":true,"Name":"ScrollViewBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"SnapshotViewIOSBase","Path":"react-native"},"HasDeclare":true,"Name":"SnapshotViewIOSBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"SwitchBase","Path":"react-native"},"HasDeclare":true,"Name":"SwitchBase","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ART","Path":"react-native"},"HasDeclare":true,"Name":"ART","Type":["Mapped",{"Name":"ARTStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ImagePickerIOS","Path":"react-native"},"HasDeclare":true,"Name":"ImagePickerIOS","Type":["Mapped",{"Name":"ImagePickerIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"LayoutAnimation","Path":"react-native"},"HasDeclare":true,"Name":"LayoutAnimation","Type":["Mapped",{"Name":"LayoutAnimationStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"SectionList","Path":"react-native"},"HasDeclare":true,"Name":"SectionList","Type":["Generic",{"Type":["Mapped",{"Name":"SectionListStatic","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Systrace","Path":"react-native"},"HasDeclare":true,"Name":"Systrace","Type":["Mapped",{"Name":"SystraceStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ActionSheetIOS","Path":"react-native"},"HasDeclare":true,"Name":"ActionSheetIOS","Type":["Mapped",{"Name":"ActionSheetIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Share","Path":"react-native"},"HasDeclare":true,"Name":"Share","Type":["Mapped",{"Name":"ShareStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"AdSupportIOS","Path":"react-native"},"HasDeclare":true,"Name":"AdSupportIOS","Type":["Mapped",{"Name":"AdSupportIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"AccessibilityInfo","Path":"react-native"},"HasDeclare":true,"Name":"AccessibilityInfo","Type":["Mapped",{"Name":"AccessibilityInfoStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Alert","Path":"react-native"},"HasDeclare":true,"Name":"Alert","Type":["Mapped",{"Name":"AlertStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"AlertAndroid","Path":"react-native"},"HasDeclare":true,"Name":"AlertAndroid","Type":["Mapped",{"Name":"AlertAndroidStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"AlertIOS","Path":"react-native"},"HasDeclare":true,"Name":"AlertIOS","Type":["Mapped",{"Name":"AlertIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"AppState","Path":"react-native"},"HasDeclare":true,"Name":"AppState","Type":["Mapped",{"Name":"AppStateStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"AppStateIOS","Path":"react-native"},"HasDeclare":true,"Name":"AppStateIOS","Type":["Mapped",{"Name":"AppStateStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"AsyncStorage","Path":"react-native"},"HasDeclare":true,"Name":"AsyncStorage","Type":["Mapped",{"Name":"AsyncStorageStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"BackAndroid","Path":"react-native"},"HasDeclare":true,"Name":"BackAndroid","Type":["Mapped",{"Name":"BackAndroidStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"BackHandler","Path":"react-native"},"HasDeclare":true,"Name":"BackHandler","Type":["Mapped",{"Name":"BackHandlerStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"CameraRoll","Path":"react-native"},"HasDeclare":true,"Name":"CameraRoll","Type":["Mapped",{"Name":"CameraRollStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Clipboard","Path":"react-native"},"HasDeclare":true,"Name":"Clipboard","Type":["Mapped",{"Name":"ClipboardStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"DatePickerAndroid","Path":"react-native"},"HasDeclare":true,"Name":"DatePickerAndroid","Type":["Mapped",{"Name":"DatePickerAndroidStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Geolocation","Path":"react-native"},"HasDeclare":true,"Name":"Geolocation","Type":["Mapped",{"Name":"GeolocationStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"I18nManager","Path":"react-native"},"HasDeclare":true,"Name":"I18nManager","Type":["Mapped",{"Name":"I18nManagerStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ImageEditor","Path":"react-native"},"HasDeclare":true,"Name":"ImageEditor","Type":["Mapped",{"Name":"ImageEditorStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ImageStore","Path":"react-native"},"HasDeclare":true,"Name":"ImageStore","Type":["Mapped",{"Name":"ImageStoreStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"InteractionManager","Path":"react-native"},"HasDeclare":true,"Name":"InteractionManager","Type":["Mapped",{"Name":"InteractionManagerStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"IntentAndroid","Path":"react-native"},"HasDeclare":true,"Name":"IntentAndroid","Type":["Mapped",{"Name":"IntentAndroidStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Keyboard","Path":"react-native"},"HasDeclare":true,"Name":"Keyboard","Type":["Mapped",{"Name":"KeyboardStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Linking","Path":"react-native"},"HasDeclare":true,"Name":"Linking","Type":["Mapped",{"Name":"LinkingStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"LinkingIOS","Path":"react-native"},"HasDeclare":true,"Name":"LinkingIOS","Type":["Mapped",{"Name":"LinkingIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"NativeMethodsMixin","Path":"react-native"},"HasDeclare":true,"Name":"NativeMethodsMixin","Type":["Mapped",{"Name":"NativeMethodsMixinStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"NativeComponent","Path":"react-native"},"HasDeclare":true,"Name":"NativeComponent","Type":["Mapped",{"Name":"NativeMethodsMixinStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"NetInfo","Path":"react-native"},"HasDeclare":true,"Name":"NetInfo","Type":["Mapped",{"Name":"NetInfoStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"PanResponder","Path":"react-native"},"HasDeclare":true,"Name":"PanResponder","Type":["Mapped",{"Name":"PanResponderStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"PermissionsAndroid","Path":"react-native"},"HasDeclare":true,"Name":"PermissionsAndroid","Type":["Mapped",{"Name":"PermissionsAndroidStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"PushNotificationIOS","Path":"react-native"},"HasDeclare":true,"Name":"PushNotificationIOS","Type":["Mapped",{"Name":"PushNotificationIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Settings","Path":"react-native"},"HasDeclare":true,"Name":"Settings","Type":["Mapped",{"Name":"SettingsStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"StatusBarIOS","Path":"react-native"},"HasDeclare":true,"Name":"StatusBarIOS","Type":["Mapped",{"Name":"StatusBarIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"TimePickerAndroid","Path":"react-native"},"HasDeclare":true,"Name":"TimePickerAndroid","Type":["Mapped",{"Name":"TimePickerAndroidStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ToastAndroid","Path":"react-native"},"HasDeclare":true,"Name":"ToastAndroid","Type":["Mapped",{"Name":"ToastAndroidStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"UIManager","Path":"react-native"},"HasDeclare":true,"Name":"UIManager","Type":["Mapped",{"Name":"UIManagerStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"VibrationIOS","Path":"react-native"},"HasDeclare":true,"Name":"VibrationIOS","Type":["Mapped",{"Name":"VibrationIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Vibration","Path":"react-native"},"HasDeclare":true,"Name":"Vibration","Type":["Mapped",{"Name":"VibrationStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Dimensions","Path":"react-native"},"HasDeclare":true,"Name":"Dimensions","Type":["Mapped",{"Name":"Dimensions","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ShadowPropTypesIOS","Path":"react-native"},"HasDeclare":true,"Name":"ShadowPropTypesIOS","Type":["Mapped",{"Name":"ShadowPropTypesIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Easing","Path":"react-native"},"HasDeclare":true,"Name":"Easing","Type":["Mapped",{"Name":"EasingStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"DeviceEventEmitter","Path":"react-native"},"HasDeclare":true,"Name":"DeviceEventEmitter","Type":["Mapped",{"Name":"DeviceEventEmitterStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"NativeEventEmitter","Path":"react-native"},"HasDeclare":true,"Name":"NativeEventEmitter","Type":["Mapped",{"Name":"NativeEventEmitter","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"NativeAppEventEmitter","Path":"react-native"},"HasDeclare":true,"Name":"NativeAppEventEmitter","Type":["Mapped",{"Name":"RCTNativeAppEventEmitter","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"NativeModules","Path":"react-native"},"HasDeclare":true,"Name":"NativeModules","Type":["Mapped",{"Name":"NativeModulesStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"Platform","Path":"react-native"},"HasDeclare":true,"Name":"Platform","Type":["Mapped",{"Name":"PlatformStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"PlatformIOS","Path":"react-native"},"HasDeclare":true,"Name":"PlatformIOS","Type":["Mapped",{"Name":"PlatformIOSStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"PixelRatio","Path":"react-native"},"HasDeclare":true,"Name":"PixelRatio","Type":["Mapped",{"Name":"PixelRatioStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"YellowBox","Path":"react-native"},"HasDeclare":true,"Name":"YellowBox","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ColorPropType","Path":"react-native"},"HasDeclare":true,"Name":"ColorPropType","Type":["Generic",{"Type":["Mapped",{"Name":"React.Validator","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"EdgeInsetsPropType","Path":"react-native"},"HasDeclare":true,"Name":"EdgeInsetsPropType","Type":["Generic",{"Type":["Mapped",{"Name":"React.Validator","FullName":""}],"TypeParameters":[["Mapped",{"Name":"Insets","FullName":""}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"PointPropType","Path":"react-native"},"HasDeclare":true,"Name":"PointPropType","Type":["Generic",{"Type":["Mapped",{"Name":"React.Validator","FullName":""}],"TypeParameters":[["Mapped",{"Name":"PointPropType","FullName":""}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":{"IsGlobal":false,"Selector":"ViewPropTypes","Path":"react-native"},"HasDeclare":true,"Name":"ViewPropTypes","Type":["Generic",{"Type":["Mapped",{"Name":"React.ValidationMap","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewProps","FullName":""}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"EventSubscription","Option":false,"Type":["Mapped",{"Name":"EventSubscriptionStatic","FullName":"EventSubscriptionStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"EmitterSubscription","Option":false,"Type":["Mapped",{"Name":"EmitterSubscriptionStatic","FullName":"EmitterSubscriptionStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"EventEmitter","Option":false,"Type":["Mapped",{"Name":"EventEmitterStatic","FullName":"EventEmitterStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createElement","TypeParameters":[["GenericTypeParameter",{"Name":"'P"}]],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"React.ReactType","FullName":""}]},{"Comment":null,"Name":"props","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"'P","FullName":""}]},{"Comment":null,"Name":"children","Optional":false,"ParamArray":true,"Type":["Array",["Mapped",{"Name":"React.ReactNode","FullName":""}]]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'P","FullName":""}]]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TextComponent","Option":false,"Type":["Mapped",{"Name":"TextComponentStatic","FullName":"TextComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Text","Option":false,"Type":["Mapped",{"Name":"TextStatic","FullName":"TextStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"DocumentSelectionState","Option":false,"Type":["Mapped",{"Name":"DocumentSelectionStateStatic","FullName":"DocumentSelectionStateStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TextInputComponent","Option":false,"Type":["Mapped",{"Name":"TextInputComponentStatic","FullName":"TextInputComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TextInput","Option":false,"Type":["Mapped",{"Name":"TextInputStatic","FullName":"TextInputStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ToolbarAndroidComponent","Option":false,"Type":["Mapped",{"Name":"ToolbarAndroidComponentStatic","FullName":"ToolbarAndroidComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ToolbarAndroid","Option":false,"Type":["Mapped",{"Name":"ToolbarAndroidStatic","FullName":"ToolbarAndroidStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ViewComponent","Option":false,"Type":["Mapped",{"Name":"ViewComponentStatic","FullName":"ViewComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"View","Option":false,"Type":["Mapped",{"Name":"ViewStatic","FullName":"ViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ViewPagerAndroidComponent","Option":false,"Type":["Mapped",{"Name":"ViewPagerAndroidComponentStatic","FullName":"ViewPagerAndroidComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ViewPagerAndroid","Option":false,"Type":["Mapped",{"Name":"ViewPagerAndroidStatic","FullName":"ViewPagerAndroidStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"KeyboardAvoidingViewComponent","Option":false,"Type":["Mapped",{"Name":"KeyboardAvoidingViewComponentStatic","FullName":"KeyboardAvoidingViewComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"KeyboardAvoidingView","Option":false,"Type":["Mapped",{"Name":"KeyboardAvoidingViewStatic","FullName":"KeyboardAvoidingViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"WebView","Option":false,"Type":["Mapped",{"Name":"WebViewStatic","FullName":"WebViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SafeAreaViewComponent","Option":false,"Type":["Mapped",{"Name":"SafeAreaViewComponentStatic","FullName":"SafeAreaViewComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SafeAreaView","Option":false,"Type":["Mapped",{"Name":"SafeAreaViewStatic","FullName":"SafeAreaViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"InputAccessoryView","Option":false,"Type":["Mapped",{"Name":"InputAccessoryViewStatic","FullName":"InputAccessoryViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SegmentedControlIOSComponent","Option":false,"Type":["Mapped",{"Name":"SegmentedControlIOSComponentStatic","FullName":"SegmentedControlIOSComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SegmentedControlIOS","Option":false,"Type":["Mapped",{"Name":"SegmentedControlIOSStatic","FullName":"SegmentedControlIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"NavigatorIOS","Option":false,"Type":["Mapped",{"Name":"NavigatorIOSStatic","FullName":"NavigatorIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ActivityIndicatorComponent","Option":false,"Type":["Mapped",{"Name":"ActivityIndicatorComponentStatic","FullName":"ActivityIndicatorComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ActivityIndicator","Option":false,"Type":["Mapped",{"Name":"ActivityIndicatorStatic","FullName":"ActivityIndicatorStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ActivityIndicatorIOS","Option":false,"Type":["Mapped",{"Name":"ActivityIndicatorIOSStatic","FullName":"ActivityIndicatorIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"DatePickerIOSComponent","Option":false,"Type":["Mapped",{"Name":"DatePickerIOSComponentStatic","FullName":"DatePickerIOSComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"DatePickerIOS","Option":false,"Type":["Mapped",{"Name":"DatePickerIOSStatic","FullName":"DatePickerIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"DrawerLayoutAndroidComponent","Option":false,"Type":["Mapped",{"Name":"DrawerLayoutAndroidComponentStatic","FullName":"DrawerLayoutAndroidComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"DrawerLayoutAndroid","Option":false,"Type":["Mapped",{"Name":"DrawerLayoutAndroidStatic","FullName":"DrawerLayoutAndroidStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"PickerIOSItem","Option":false,"Type":["Mapped",{"Name":"PickerIOSItemStatic","FullName":"PickerIOSItemStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"PickerItem","Option":false,"Type":["Mapped",{"Name":"PickerItemStatic","FullName":"PickerItemStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Picker","Option":false,"Type":["Mapped",{"Name":"PickerStatic","FullName":"PickerStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"PickerIOSComponent","Option":false,"Type":["Mapped",{"Name":"PickerIOSComponentStatic","FullName":"PickerIOSComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"PickerIOS","Option":false,"Type":["Mapped",{"Name":"PickerIOSStatic","FullName":"PickerIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ProgressBarAndroidComponent","Option":false,"Type":["Mapped",{"Name":"ProgressBarAndroidComponentStatic","FullName":"ProgressBarAndroidComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ProgressBarAndroid","Option":false,"Type":["Mapped",{"Name":"ProgressBarAndroidStatic","FullName":"ProgressBarAndroidStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ProgressViewIOSComponent","Option":false,"Type":["Mapped",{"Name":"ProgressViewIOSComponentStatic","FullName":"ProgressViewIOSComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ProgressViewIOS","Option":false,"Type":["Mapped",{"Name":"ProgressViewIOSStatic","FullName":"ProgressViewIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"RefreshControlComponent","Option":false,"Type":["Mapped",{"Name":"RefreshControlComponentStatic","FullName":"RefreshControlComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"RefreshControl","Option":false,"Type":["Mapped",{"Name":"RefreshControlStatic","FullName":"RefreshControlStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"RecyclerViewBackedScrollViewComponent","Option":false,"Type":["Mapped",{"Name":"RecyclerViewBackedScrollViewComponentStatic","FullName":"RecyclerViewBackedScrollViewComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"RecyclerViewBackedScrollView","Option":false,"Type":["Mapped",{"Name":"RecyclerViewBackedScrollViewStatic","FullName":"RecyclerViewBackedScrollViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SliderComponent","Option":false,"Type":["Mapped",{"Name":"SliderComponentStatic","FullName":"SliderComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Slider","Option":false,"Type":["Mapped",{"Name":"SliderStatic","FullName":"SliderStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SwitchIOS","Option":false,"Type":["Mapped",{"Name":"SwitchIOSStatic","FullName":"SwitchIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ImageComponent","Option":false,"Type":["Mapped",{"Name":"ImageComponentStatic","FullName":"ImageComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Image","Option":false,"Type":["Mapped",{"Name":"ImageStatic","FullName":"ImageStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ImageBackgroundComponent","Option":false,"Type":["Mapped",{"Name":"ImageBackgroundComponentStatic","FullName":"ImageBackgroundComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ImageBackground","Option":false,"Type":["Mapped",{"Name":"ImageBackgroundStatic","FullName":"ImageBackgroundStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"FlatList","Option":false,"Type":["Mapped",{"Name":"FlatListStatic","FullName":"FlatListStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ListViewComponent","Option":false,"Type":["Mapped",{"Name":"ListViewComponentStatic","FullName":"ListViewComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ListView","Option":false,"Type":["Mapped",{"Name":"ListViewStatic","FullName":"ListViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"MapViewComponent","Option":false,"Type":["Mapped",{"Name":"MapViewComponentStatic","FullName":"MapViewComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"MapView","Option":false,"Type":["Mapped",{"Name":"MapViewStatic","FullName":"MapViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"MaskedViewComponent","Option":false,"Type":["Mapped",{"Name":"MaskedViewComponentStatic","FullName":"MaskedViewComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"MaskedViewIOS","Option":false,"Type":["Mapped",{"Name":"MaskedViewIOSStatic","FullName":"MaskedViewIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Modal","Option":false,"Type":["Mapped",{"Name":"ModalStatic","FullName":"ModalStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TouchableWithoutFeedbackComponent","Option":false,"Type":["Mapped",{"Name":"TouchableWithoutFeedbackComponentStatic","FullName":"TouchableWithoutFeedbackComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TouchableWithoutFeedback","Option":false,"Type":["Mapped",{"Name":"TouchableWithoutFeedbackStatic","FullName":"TouchableWithoutFeedbackStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TouchableHighlightComponent","Option":false,"Type":["Mapped",{"Name":"TouchableHighlightComponentStatic","FullName":"TouchableHighlightComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TouchableHighlight","Option":false,"Type":["Mapped",{"Name":"TouchableHighlightStatic","FullName":"TouchableHighlightStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TouchableOpacityComponent","Option":false,"Type":["Mapped",{"Name":"TouchableOpacityComponentStatic","FullName":"TouchableOpacityComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TouchableOpacity","Option":false,"Type":["Mapped",{"Name":"TouchableOpacityStatic","FullName":"TouchableOpacityStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TouchableNativeFeedbackComponent","Option":false,"Type":["Mapped",{"Name":"TouchableNativeFeedbackComponentStatic","FullName":"TouchableNativeFeedbackComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TouchableNativeFeedback","Option":false,"Type":["Mapped",{"Name":"TouchableNativeFeedbackStatic","FullName":"TouchableNativeFeedbackStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ListViewDataSource","Option":false,"Type":["Mapped",{"Name":"ListViewDataSourceStatic","FullName":"ListViewDataSourceStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TabBarIOSItem","Option":false,"Type":["Mapped",{"Name":"TabBarIOSItemStatic","FullName":"TabBarIOSItemStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TabBarIOS","Option":false,"Type":["Mapped",{"Name":"TabBarIOSStatic","FullName":"TabBarIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"DeviceEventEmitter","Option":false,"Type":["Mapped",{"Name":"DeviceEventEmitterStaticStatic","FullName":"DeviceEventEmitterStaticStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ScrollViewComponent","Option":false,"Type":["Mapped",{"Name":"ScrollViewComponentStatic","FullName":"ScrollViewComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ScrollView","Option":false,"Type":["Mapped",{"Name":"ScrollViewStatic","FullName":"ScrollViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SnapshotViewIOSComponent","Option":false,"Type":["Mapped",{"Name":"SnapshotViewIOSComponentStatic","FullName":"SnapshotViewIOSComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SnapshotViewIOS","Option":false,"Type":["Mapped",{"Name":"SnapshotViewIOSStatic","FullName":"SnapshotViewIOSStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SwipeableListView","Option":false,"Type":["Mapped",{"Name":"SwipeableListViewStatic","FullName":"SwipeableListViewStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Button","Option":false,"Type":["Mapped",{"Name":"ButtonStatic","FullName":"ButtonStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"PermissionsAndroid","Option":false,"Type":["Mapped",{"Name":"PermissionsAndroidStaticStatic","FullName":"PermissionsAndroidStaticStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"StatusBar","Option":false,"Type":["Mapped",{"Name":"StatusBarStatic","FullName":"StatusBarStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SwitchComponent","Option":false,"Type":["Mapped",{"Name":"SwitchComponentStatic","FullName":"SwitchComponentStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Switch","Option":false,"Type":["Mapped",{"Name":"SwitchStatic","FullName":"SwitchStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ClippingRectangle","Option":false,"Type":["Mapped",{"Name":"ClippingRectangleStatic","FullName":"ClippingRectangleStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Group","Option":false,"Type":["Mapped",{"Name":"GroupStatic","FullName":"GroupStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Shape","Option":false,"Type":["Mapped",{"Name":"ShapeStatic","FullName":"ShapeStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Surface","Option":false,"Type":["Mapped",{"Name":"SurfaceStatic","FullName":"SurfaceStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ARTText","Option":false,"Type":["Mapped",{"Name":"ARTTextStatic","FullName":"ARTTextStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Used to create React components that directly wrap native component"],["SummaryLine","implementations.  Config information is extracted from data exported from the"],["SummaryLine","UIManager module.  You should also wrap the native component in a"],["SummaryLine","hand-written component with full propTypes definitions and other"],["SummaryLine","documentation - pass the hand-written component in as `componentInterface` to"],["SummaryLine","verify all the native props are documented via `propTypes`."],["SummaryLine",""],["SummaryLine","If some native props shouldn't be exposed in the wrapper interface, you can"],["SummaryLine","pass null for `componentInterface` and call `verifyPropTypes` directly"],["SummaryLine","with `nativePropsToIgnore`;"],["SummaryLine",""],["SummaryLine","Common types are lined up with the appropriate prop differs with"],["SummaryLine","`TypeToDifferMap`.  Non-scalar types not in the map default to `deepDiffer`."]],"Kind":"Regular","IsStatic":false,"Name":"requireNativeComponent","TypeParameters":[["GenericTypeParameter",{"Name":"'P"}],["GenericTypeParameter",{"Name":"'NP","Default":null}]],"Params":[{"Comment":null,"Name":"viewName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"componentInterface","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"ComponentInterface","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'P","FullName":""}]]}]},{"Comment":null,"Name":"extraConfig","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"RequireNativeComponentExtraConfig","FullName":"RequireNativeComponentExtraConfig"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"findNodeHandle","TypeParameters":[],"Params":[{"Comment":null,"Name":"componentOrHandle","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"processColor","TypeParameters":[],"Params":[{"Comment":null,"Name":"color","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"__spread","TypeParameters":[],"Params":[{"Comment":null,"Name":"target","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"sources","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"require","TypeParameters":[],"Params":[{"Comment":null,"Name":"name","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":false,"Name":"console","Type":["Mapped",{"Name":"Console","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":false,"Name":"navigator","Type":["Mapped",{"Name":"Navigator","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":false,"Name":"originalXMLHttpRequest","Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":false,"Name":"__BUNDLE_START_TIME__","Type":["Mapped",{"Name":"float","FullName":"float"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":false,"Name":"ErrorUtils","Type":["Mapped",{"Name":"ErrorUtils","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":false,"Name":"__DEV__","Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RequireNativeComponentExtraConfig","FullName":"RequireNativeComponentExtraConfig","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"nativeOnly","Option":true,"Type":["Mapped",{"Name":"'NP","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Import",["Module",{"Module":"PropTypes","SpecifiedModule":"Prop_types","ResolvedModule":null}]],["Import",["Module",{"Module":"React","SpecifiedModule":"React","ResolvedModule":null}]],["Alias",{"Name":"Constructor","Type":"TODO","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MeasureOnSuccessCallback","FullName":"MeasureOnSuccessCallback","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"x","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"y","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"width","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"height","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"pageX","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"pageY","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MeasureInWindowOnSuccessCallback","FullName":"MeasureInWindowOnSuccessCallback","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"x","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"y","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"width","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"height","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MeasureLayoutOnSuccessCallback","FullName":"MeasureLayoutOnSuccessCallback","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"left","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"top","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"width","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"height","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","EventSubscription represents a subscription to a particular event. It can"],["SummaryLine","remove its own subscription."]],"IsStatic":false,"IsClass":false,"Name":"EventSubscription","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"eventType","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"key","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"subscriber","Option":false,"Type":["Mapped",{"Name":"EventSubscriptionVendor","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Removes this subscription from the subscriber that controls it."]],"Kind":"Regular","IsStatic":false,"Name":"remove","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","EventSubscription represents a subscription to a particular event. It can"],["SummaryLine","remove its own subscription."]],"IsStatic":true,"IsClass":false,"Name":"EventSubscriptionStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"subscriber","Description":["the subscriber that controls","this subscription."]}],"Name":"subscriber","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventSubscriptionVendor","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"EventSubscription","FullName":"EventSubscription"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","EventSubscriptionVendor stores a set of EventSubscriptions that are"],["SummaryLine","subscribed to a particular event type."]],"IsStatic":false,"IsClass":false,"Name":"EventSubscriptionVendor","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"``constructor``","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"EventSubscriptionVendor","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Adds a subscription keyed by an event type."]],"Kind":"Regular","IsStatic":false,"Name":"addSubscription","TypeParameters":[],"Params":[{"Comment":null,"Name":"eventType","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"subscription","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventSubscription","FullName":""}]}],"ReturnType":["Mapped",{"Name":"EventSubscription","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Removes a bulk set of the subscriptions."]],"Kind":"Regular","IsStatic":false,"Name":"removeAllSubscriptions","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"eventType","Description":["- Optional name of the event type whose","registered supscriptions to remove, if null remove all subscriptions."]}],"Name":"eventType","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Removes a specific subscription. Instead of calling this function, call"],["SummaryLine","`subscription.remove()` directly."]],"Kind":"Regular","IsStatic":false,"Name":"removeSubscription","TypeParameters":[],"Params":[{"Comment":null,"Name":"subscription","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns the array of subscriptions that are currently registered for the"],["SummaryLine","given event type."],["SummaryLine",""],["SummaryLine","Note: This array can be potentially sparse as subscriptions are deleted"],["SummaryLine","from it when they are removed."]],"Kind":"Regular","IsStatic":false,"Name":"getSubscriptionsForType","TypeParameters":[],"Params":[{"Comment":null,"Name":"eventType","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Array",["Mapped",{"Name":"EventSubscription","FullName":""}]],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","EmitterSubscription represents a subscription with listener and context data."]],"IsStatic":false,"IsClass":false,"Name":"EmitterSubscription","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"EventSubscription","FullName":"\"node_modules/@types/react-native/index\".EventSubscription"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"emitter","Option":false,"Type":["Mapped",{"Name":"EventEmitter","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"listener","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"context","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Removes this subscription from the emitter that registered it."],["SummaryLine","Note: we're overriding the `remove()` method of EventSubscription here"],["SummaryLine","but deliberately not calling `super.remove()` as the responsibility"],["SummaryLine","for removing the subscription lies with the EventEmitter."]],"Kind":"Regular","IsStatic":false,"Name":"remove","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","EmitterSubscription represents a subscription with listener and context data."]],"IsStatic":true,"IsClass":false,"Name":"EmitterSubscriptionStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"emitter","Description":["- The event emitter that registered this","subscription"]}],"Name":"emitter","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventEmitter","FullName":""}]},{"Comment":["Param",{"Name":"subscriber","Description":["- The subscriber that controls","this subscription"]}],"Name":"subscriber","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EventSubscriptionVendor","FullName":""}]},{"Comment":["Param",{"Name":"listener","Description":["- Function to invoke when the specified event is","emitted"]}],"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]},{"Comment":["Param",{"Name":"context","Description":["- Optional context object to use when invoking the","listener"]}],"Name":"context","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"EmitterSubscription","FullName":"EmitterSubscription"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EventEmitterListener","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Adds a listener to be invoked when events of the specified type are"],["SummaryLine","emitted. An optional calling context may be provided. The data arguments"],["SummaryLine","emitted will be passed to the listener function."]],"Kind":"Regular","IsStatic":false,"Name":"addListener","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"eventType","Description":["- Name of the event to listen to"]}],"Name":"eventType","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":["Param",{"Name":"listener","Description":["- Function to invoke when the specified event is","emitted"]}],"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"args","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]},{"Comment":["Param",{"Name":"context","Description":["- Optional context object to use when invoking the","listener"]}],"Name":"context","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Mapped",{"Name":"EmitterSubscription","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EventEmitter","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"EventEmitterListener","FullName":"\"node_modules/@types/react-native/index\".EventEmitterListener"}]],"Members":[["Function",{"Comments":[["SummaryLine","Similar to addListener, except that the listener is removed after it is"],["SummaryLine","invoked once."]],"Kind":"Regular","IsStatic":false,"Name":"once","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"eventType","Description":["- Name of the event to listen to"]}],"Name":"eventType","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":["Param",{"Name":"listener","Description":["- Function to invoke only once when the","specified event is emitted"]}],"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"args","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]},{"Comment":["Param",{"Name":"context","Description":["- Optional context object to use when invoking the","listener"]}],"Name":"context","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"EmitterSubscription","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Removes all of the registered listeners, including those registered as"],["SummaryLine","listener maps."]],"Kind":"Regular","IsStatic":false,"Name":"removeAllListeners","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"eventType","Description":["- Optional name of the event whose registered","listeners to remove"]}],"Name":"eventType","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Provides an API that can be called during an eventing cycle to remove the"],["SummaryLine","last listener that was invoked. This allows a developer to provide an event"],["SummaryLine","object that can remove the listener (or listener map) during the"],["SummaryLine","invocation."],["SummaryLine",""],["SummaryLine","If it is called when not inside of an emitting cycle it will throw."]],"Kind":"Regular","IsStatic":false,"Name":"removeCurrentListener","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Removes a specific subscription. Called by the `remove()` method of the"],["SummaryLine","subscription itself to ensure any necessary cleanup is performed."]],"Kind":"Regular","IsStatic":false,"Name":"removeSubscription","TypeParameters":[],"Params":[{"Comment":null,"Name":"subscription","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EmitterSubscription","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns an array of listeners that are currently registered for the given"],["SummaryLine","event."]],"Kind":"Regular","IsStatic":false,"Name":"listeners","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"eventType","Description":["- Name of the event to query"]}],"Name":"eventType","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Array",["Mapped",{"Name":"EmitterSubscription","FullName":""}]],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Emits an event of the given type with the given data. All handlers of that"],["SummaryLine","particular type will be notified."]],"Kind":"Regular","IsStatic":false,"Name":"emit","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"eventType","Description":["- Name of the event to emit"]}],"Name":"eventType","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"``params``","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Removes the given listener for event of specific type."]],"Kind":"Regular","IsStatic":false,"Name":"removeListener","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"eventType","Description":["- Name of the event to emit"]}],"Name":"eventType","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":["Param",{"Name":"listener","Description":["- Function to invoke when the specified event is","emitted"]}],"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"args","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":false,"Name":"EventEmitterStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"subscriber","Description":["- Optional subscriber instance","to use. If omitted, a new subscriber will be created for the emitter."]}],"Name":"subscriber","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"EventSubscriptionVendor","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"EventEmitter","FullName":"EventEmitter"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","NativeMethodsMixin provides methods to access the underlying native component directly."],["SummaryLine","This can be useful in cases when you want to focus a view or measure its on-screen dimensions,"],["SummaryLine","for example."],["SummaryLine","The methods described here are available on most of the default components provided by React Native."],["SummaryLine","Note, however, that they are not available on composite components that aren't directly backed by a"],["SummaryLine","native view. This will generally include most components that you define in your own app."],["SummaryLine","For more information, see [Direct Manipulation](http://facebook.github.io/react-native/docs/direct-manipulation.html)."]],"IsStatic":false,"IsClass":false,"Name":"NativeMethodsMixinStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Determines the location on screen, width, and height of the given view and"],["SummaryLine","returns the values via an async callback. If successful, the callback will"],["SummaryLine","be called with the following arguments:"],["SummaryLine",""],["SummaryLine","  - x"],["SummaryLine","  - y"],["SummaryLine","  - width"],["SummaryLine","  - height"],["SummaryLine","  - pageX"],["SummaryLine","  - pageY"],["SummaryLine",""],["SummaryLine","Note that these measurements are not available until after the rendering"],["SummaryLine","has been completed in native. If you need the measurements as soon as"],["SummaryLine","possible, consider using the [`onLayout`"],["SummaryLine","prop](docs/view.html#onlayout) instead."]],"Kind":"Regular","IsStatic":false,"Name":"``measure``","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MeasureOnSuccessCallback","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Determines the location of the given view in the window and returns the"],["SummaryLine","values via an async callback. If the React root view is embedded in"],["SummaryLine","another native view, this will give you the absolute coordinates. If"],["SummaryLine","successful, the callback will be called with the following"],["SummaryLine","arguments:"],["SummaryLine",""],["SummaryLine","  - x"],["SummaryLine","  - y"],["SummaryLine","  - width"],["SummaryLine","  - height"],["SummaryLine",""],["SummaryLine","Note that these measurements are not available until after the rendering"],["SummaryLine","has been completed in native."]],"Kind":"Regular","IsStatic":false,"Name":"measureInWindow","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MeasureInWindowOnSuccessCallback","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Like [`measure()`](#measure), but measures the view relative an ancestor,"],["SummaryLine","specified as `relativeToNativeNode`. This means that the returned x, y"],["SummaryLine","are relative to the origin x, y of the ancestor view."],["SummaryLine",""],["SummaryLine","As always, to obtain a native node handle for a component, you can use"],["SummaryLine","`React.findNodeHandle(component)`."]],"Kind":"Regular","IsStatic":false,"Name":"measureLayout","TypeParameters":[],"Params":[{"Comment":null,"Name":"relativeToNativeNode","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"onSuccess","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MeasureLayoutOnSuccessCallback","FullName":""}]},{"Comment":null,"Name":"onFail","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","This function sends props straight to native. They will not participate in"],["SummaryLine","future diff process - this means that if you do not include them in the"],["SummaryLine","next render, they will remain active (see [Direct"],["SummaryLine","Manipulation](docs/direct-manipulation.html))."]],"Kind":"Regular","IsStatic":false,"Name":"setNativeProps","TypeParameters":[],"Params":[{"Comment":null,"Name":"nativeProps","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Object","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Requests focus for the given input or view. The exact behavior triggered"],["SummaryLine","will depend on the platform and type of view."]],"Kind":"Regular","IsStatic":false,"Name":"focus","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Removes focus from an input or view. This is the opposite of `focus()`."]],"Kind":"Regular","IsStatic":false,"Name":"blur","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"refs","Option":false,"Type":["Mapped",{"Name":"NativeMethodsMixinStaticRefs","FullName":"NativeMethodsMixinStaticRefs"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Runnable","FullName":"Runnable","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"appParameters","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Task","FullName":"Task","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"taskData","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TaskProvider","FullName":"TaskProvider","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"Task","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"NodeHandle","Type":["Mapped",{"Name":"float","FullName":"float"}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeSyntheticEvent","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"bubbles","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"cancelable","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"currentTarget","Option":false,"Type":["Mapped",{"Name":"NodeHandle","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"defaultPrevented","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"eventPhase","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"isTrusted","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"nativeEvent","Option":false,"Type":["Mapped",{"Name":"'T","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isPropagationStopped","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isDefaultPrevented","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"persist","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"preventDefault","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"stopPropagation","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"NodeHandle","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"timeStamp","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeTouchEvent","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Array of all touch events that have changed since the last event"]],"Kind":"Regular","Index":null,"Name":"changedTouches","Option":false,"Type":["Array",["Mapped",{"Name":"NativeTouchEvent","FullName":""}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The ID of the touch"]],"Kind":"Regular","Index":null,"Name":"identifier","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The X position of the touch, relative to the element"]],"Kind":"Regular","Index":null,"Name":"locationX","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The Y position of the touch, relative to the element"]],"Kind":"Regular","Index":null,"Name":"locationY","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The X position of the touch, relative to the screen"]],"Kind":"Regular","Index":null,"Name":"pageX","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The Y position of the touch, relative to the screen"]],"Kind":"Regular","Index":null,"Name":"pageY","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The node id of the element receiving the touch event"]],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A time identifier for the touch, useful for velocity calculation"]],"Kind":"Regular","Index":null,"Name":"timestamp","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Array of all current touches on the screen"]],"Kind":"Regular","Index":null,"Name":"touches","Option":false,"Type":["Array",["Mapped",{"Name":"NativeTouchEvent","FullName":""}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GestureResponderEvent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":"\"node_modules/@types/react-native/index\".NativeSyntheticEvent"}],"TypeParameters":[["Mapped",{"Name":"NativeTouchEvent","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PointPropType","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Insets","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"top","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"left","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"bottom","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"right","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","//FIXME: need to find documentation on which component is a TTouchable and can implement that interface"]],"IsStatic":false,"IsClass":false,"Name":"Touchable","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onTouchStart","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onTouchMove","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onTouchEnd","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onTouchCancel","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onTouchEndCapture","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ComponentProvider","FullName":"ComponentProvider","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ComponentType","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AppConfig","FullName":"AppConfig","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"appKey","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``component``","Option":true,"Type":["Mapped",{"Name":"ComponentProvider","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"run","Option":true,"Type":["Mapped",{"Name":"Runnable","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Module",{"HasDeclare":false,"IsNamespace":true,"Name":"AppRegistry","Types":[["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"registerConfig","TypeParameters":[],"Params":[{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"AppConfig","FullName":""}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"registerComponent","TypeParameters":[],"Params":[{"Comment":null,"Name":"appKey","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"getComponentFunc","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ComponentProvider","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"registerRunnable","TypeParameters":[],"Params":[{"Comment":null,"Name":"appKey","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"func","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Runnable","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getAppKeys","TypeParameters":[],"Params":[],"ReturnType":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"unmountApplicationComponentAtRootTag","TypeParameters":[],"Params":[{"Comment":null,"Name":"rootTag","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"runApplication","TypeParameters":[],"Params":[{"Comment":null,"Name":"appKey","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"appParameters","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"registerHeadlessTask","TypeParameters":[],"Params":[{"Comment":null,"Name":"appKey","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"task","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TaskProvider","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getRunnable","TypeParameters":[],"Params":[{"Comment":null,"Name":"appKey","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"Runnable","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutAnimationTypes","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"spring","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"linear","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"easeInEaseOut","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"easeIn","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"easeOut","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutAnimationProperties","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"opacity","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleXY","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutAnimationAnim","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"duration","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"springDamping","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"initialVelocity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"property","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutAnimationConfig","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"duration","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"create","Option":true,"Type":["Mapped",{"Name":"LayoutAnimationAnim","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"update","Option":true,"Type":["Mapped",{"Name":"LayoutAnimationAnim","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"delete","Option":true,"Type":["Mapped",{"Name":"LayoutAnimationAnim","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Automatically animates views to their new positions when the next layout happens."],["SummaryLine","A common way to use this API is to call LayoutAnimation.configureNext before"],["SummaryLine","calling setState."]],"IsStatic":false,"IsClass":false,"Name":"LayoutAnimationStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Schedules an animation to happen on the next layout."]],"Kind":"Regular","Index":null,"Name":"configureNext","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutAnimationConfig","FullName":""}]},{"Comment":null,"Name":"onAnimationDidEnd","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Helper for creating a config for configureNext."]],"Kind":"Regular","Index":null,"Name":"create","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"duration","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"``type``","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"creationProp","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"LayoutAnimationConfig","FullName":""}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Types","Option":false,"Type":["Mapped",{"Name":"LayoutAnimationTypes","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Properties","Option":false,"Type":["Mapped",{"Name":"LayoutAnimationProperties","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"configChecker","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"shapeTypes","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutAnimationStaticConfigChecker","FullName":"LayoutAnimationStaticConfigChecker"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Presets","Option":false,"Type":["Mapped",{"Name":"LayoutAnimationStaticPresets","FullName":"LayoutAnimationStaticPresets"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"easeInEaseOut","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"onAnimationDidEnd","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"linear","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"onAnimationDidEnd","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"spring","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"onAnimationDidEnd","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlexAlignType","FullName":"FlexAlignType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"flex-start","Type":"String","Value":"flex-start"},{"Name":"flex-end","Type":"String","Value":"flex-end"},{"Name":"center","Type":"String","Value":"center"},{"Name":"stretch","Type":"String","Value":"stretch"},{"Name":"baseline","Type":"String","Value":"baseline"}]}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Flex Prop Types"]],"IsStatic":false,"IsClass":false,"Name":"FlexStyle","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alignContent","Option":true,"Type":["Mapped",{"Name":"FlexStyleAlignContent","FullName":"FlexStyleAlignContent"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alignItems","Option":true,"Type":["Mapped",{"Name":"FlexAlignType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alignSelf","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"FlexAlignType","FullName":""}],["Enum",{"Name":"StringEnum","Cases":[{"Name":"auto","Type":"String","Value":"auto"}]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"aspectRatio","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderEndWidth","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderLeftWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderRightWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderStartWidth","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"bottom","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"display","Option":true,"Type":["Mapped",{"Name":"FlexStyleDisplay","FullName":"FlexStyleDisplay"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``end``","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"flex","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"flexBasis","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"flexDirection","Option":true,"Type":["Mapped",{"Name":"FlexStyleFlexDirection","FullName":"FlexStyleFlexDirection"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"flexGrow","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"flexShrink","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"flexWrap","Option":true,"Type":["Mapped",{"Name":"FlexStyleFlexWrap","FullName":"FlexStyleFlexWrap"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"justifyContent","Option":true,"Type":["Mapped",{"Name":"FlexStyleJustifyContent","FullName":"FlexStyleJustifyContent"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"left","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"margin","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"marginBottom","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"marginEnd","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"marginHorizontal","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"marginLeft","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"marginRight","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"marginStart","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"marginTop","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"marginVertical","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"maxHeight","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"maxWidth","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"minHeight","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"minWidth","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"overflow","Option":true,"Type":["Mapped",{"Name":"FlexStyleOverflow","FullName":"FlexStyleOverflow"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"padding","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"paddingBottom","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"paddingEnd","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"paddingHorizontal","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"paddingLeft","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"paddingRight","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"paddingStart","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"paddingTop","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"paddingVertical","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"position","Option":true,"Type":["Mapped",{"Name":"FlexStylePosition","FullName":"FlexStylePosition"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"right","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"start","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"top","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"zIndex","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"direction","Option":true,"Type":["Mapped",{"Name":"FlexStyleDirection","FullName":"FlexStyleDirection"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ShadowPropTypesIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Sets the drop shadow color"]],"Kind":"Regular","Index":null,"Name":"shadowColor","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the drop shadow offset"]],"Kind":"Regular","Index":null,"Name":"shadowOffset","Option":false,"Type":["Mapped",{"Name":"ShadowPropTypesIOSStaticShadowOffset","FullName":"ShadowPropTypesIOSStaticShadowOffset"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the drop shadow opacity (multiplied by the color's alpha component)"]],"Kind":"Regular","Index":null,"Name":"shadowOpacity","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the drop shadow blur radius"]],"Kind":"Regular","Index":null,"Name":"shadowRadius","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GeoConfiguration","FullName":"GeoConfiguration","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"skipPermissionRequests","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GeoOptions","FullName":"GeoOptions","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"timeout","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"maximumAge","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"enableHighAccuracy","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"distanceFilter","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"useSignificantChanges","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GeolocationReturnType","FullName":"GeolocationReturnType","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"coords","Option":false,"Type":["Mapped",{"Name":"GeolocationReturnTypeCoords","FullName":"GeolocationReturnTypeCoords"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"timestamp","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GeolocationError","FullName":"GeolocationError","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"code","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"message","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"PERMISSION_DENIED","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"POSITION_UNAVAILABLE","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TIMEOUT","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PerpectiveTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"perspective","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RotateTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rotate","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RotateXTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rotateX","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RotateYTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rotateY","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RotateZTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rotateZ","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScaleTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scale","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScaleXTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleX","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScaleYTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleY","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TranslateXTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"translateX","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TranslateYTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"translateY","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SkewXTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"skewX","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SkewYTransform","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"skewY","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TransformsStyle","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"transform","Option":true,"Type":["Array",["Mapped",{"Name":"obj","FullName":"obj"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"transformMatrix","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rotation","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleX","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleY","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"translateX","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"translateY","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"StyleSheetProperties","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"hairlineWidth","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"flatten","TypeParameters":[["GenericTypeParameter",{"Name":"'T","Constraint":null}]],"Params":[{"Comment":null,"Name":"style","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutRectangle","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutChangeEvent","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"nativeEvent","Option":false,"Type":["Mapped",{"Name":"LayoutChangeEventNativeEvent","FullName":"LayoutChangeEventNativeEvent"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewStyle","FullName":"\"node_modules/@types/react-native/index\".ViewStyle"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"letterSpacing","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textDecorationColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textDecorationStyle","Option":true,"Type":["Mapped",{"Name":"TextStyleIOSTextDecorationStyle","FullName":"TextStyleIOSTextDecorationStyle"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textTransform","Option":true,"Type":["Mapped",{"Name":"TextStyleIOSTextTransform","FullName":"TextStyleIOSTextTransform"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"writingDirection","Option":true,"Type":["Mapped",{"Name":"TextStyleIOSWritingDirection","FullName":"TextStyleIOSWritingDirection"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleAndroid","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewStyle","FullName":"\"node_modules/@types/react-native/index\".ViewStyle"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textAlignVertical","Option":true,"Type":["Mapped",{"Name":"TextStyleAndroidTextAlignVertical","FullName":"TextStyleAndroidTextAlignVertical"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"includeFontPadding","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyle","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TextStyleIOS","FullName":"\"node_modules/@types/react-native/index\".TextStyleIOS"}],["Mapped",{"Name":"TextStyleAndroid","FullName":"\"node_modules/@types/react-native/index\".TextStyleAndroid"}],["Mapped",{"Name":"ViewStyle","FullName":"\"node_modules/@types/react-native/index\".ViewStyle"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"color","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"fontFamily","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"fontSize","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"fontStyle","Option":true,"Type":["Mapped",{"Name":"TextStyleFontStyle","FullName":"TextStyleFontStyle"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Specifies font weight. The values 'normal' and 'bold' are supported"],["SummaryLine","for most fonts. Not all fonts have a variant for each of the numeric"],["SummaryLine","values, in that case the closest one is chosen."]],"Kind":"Regular","Index":null,"Name":"fontWeight","Option":true,"Type":["Mapped",{"Name":"TextStyleFontWeight","FullName":"TextStyleFontWeight"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"letterSpacing","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"lineHeight","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textAlign","Option":true,"Type":["Mapped",{"Name":"TextStyleTextAlign","FullName":"TextStyleTextAlign"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textDecorationLine","Option":true,"Type":["Mapped",{"Name":"TextStyleTextDecorationLine","FullName":"TextStyleTextDecorationLine"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textDecorationStyle","Option":true,"Type":["Mapped",{"Name":"TextStyleIOSTextDecorationStyle","FullName":"TextStyleIOSTextDecorationStyle"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textDecorationColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textShadowColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textShadowOffset","Option":true,"Type":["Mapped",{"Name":"ShadowPropTypesIOSStaticShadowOffset","FullName":"ShadowPropTypesIOSStaticShadowOffset"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"textShadowRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextPropsIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Specifies whether font should be scaled down automatically to fit given style constraints."]],"Kind":"Regular","Index":null,"Name":"adjustsFontSizeToFit","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0)."]],"Kind":"Regular","Index":null,"Name":"minimumFontScale","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When `true`, no visual change is made when text is pressed down. By"],["SummaryLine","default, a gray oval highlights the text on press down."]],"Kind":"Regular","Index":null,"Name":"suppressHighlighting","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Lets the user select text, to use the native copy and paste functionality."]],"Kind":"Regular","Index":null,"Name":"selectable","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The highlight color of the text."]],"Kind":"Regular","Index":null,"Name":"selectionColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set text break strategy on Android API Level 23+"],["SummaryLine","default is `highQuality`."]],"Kind":"Regular","Index":null,"Name":"textBreakStrategy","Option":true,"Type":["Mapped",{"Name":"TextPropsAndroidTextBreakStrategy","FullName":"TextPropsAndroidTextBreakStrategy"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TextPropsIOS","FullName":"\"node_modules/@types/react-native/index\".TextPropsIOS"}],["Mapped",{"Name":"TextPropsAndroid","FullName":"\"node_modules/@types/react-native/index\".TextPropsAndroid"}],["Mapped",{"Name":"AccessibilityProps","FullName":"\"node_modules/@types/react-native/index\".AccessibilityProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Specifies whether fonts should scale to respect Text Size accessibility settings."],["SummaryLine","The default is `true`."]],"Kind":"Regular","Index":null,"Name":"allowFontScaling","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","This can be one of the following values:"],["SummaryLine",""],["SummaryLine","- `head` - The line is displayed so that the end fits in the container and the missing text"],["SummaryLine","at the beginning of the line is indicated by an ellipsis glyph. e.g., \"...wxyz\""],["SummaryLine","- `middle` - The line is displayed so that the beginning and end fit in the container and the"],["SummaryLine","missing text in the middle is indicated by an ellipsis glyph. \"ab...yz\""],["SummaryLine","- `tail` - The line is displayed so that the beginning fits in the container and the"],["SummaryLine","missing text at the end of the line is indicated by an ellipsis glyph. e.g., \"abcd...\""],["SummaryLine","- `clip` - Lines are not drawn past the edge of the text container."],["SummaryLine",""],["SummaryLine","The default is `tail`."],["SummaryLine",""],["SummaryLine","`numberOfLines` must be set in conjunction with this prop."],["SummaryLine",""],["SummaryLine","> `clip` is working only for iOS"]],"Kind":"Regular","Index":null,"Name":"ellipsizeMode","Option":true,"Type":["Mapped",{"Name":"TextPropsEllipsizeMode","FullName":"TextPropsEllipsizeMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Line Break mode. Works only with numberOfLines."],["SummaryLine","clip is working only for iOS"]],"Kind":"Regular","Index":null,"Name":"lineBreakMode","Option":true,"Type":["Mapped",{"Name":"TextPropsEllipsizeMode","FullName":"TextPropsEllipsizeMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to truncate the text with an ellipsis after computing the text"],["SummaryLine","layout, including line wrapping, such that the total number of lines"],["SummaryLine","does not exceed this number."],["SummaryLine",""],["SummaryLine","This prop is commonly used with `ellipsizeMode`."]],"Kind":"Regular","Index":null,"Name":"numberOfLines","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on mount and layout changes with"],["SummaryLine",""],["SummaryLine","{nativeEvent: { layout: {x, y, width, height}}}."]],"Kind":"Regular","Index":null,"Name":"onLayout","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutChangeEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","This function is called on press."],["SummaryLine","Text intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting)."]],"Kind":"Regular","Index":null,"Name":"onPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","This function is called on long press."],["SummaryLine","e.g., `onLongPress={this.increaseSize}>``"]],"Kind":"Regular","Index":null,"Name":"onLongPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this view in end-to-end tests."]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A React component for displaying text which supports nesting, styling, and touch handling."]],"IsStatic":false,"IsClass":true,"Name":"TextComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"TextProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A React component for displaying text which supports nesting, styling, and touch handling."]],"IsStatic":true,"IsClass":true,"Name":"TextComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TextComponent","FullName":"TextComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Text","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TextBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"TextStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Text","FullName":"Text"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DataDetectorTypes","FullName":"DataDetectorTypes","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"phoneNumber","Type":"String","Value":"phoneNumber"},{"Name":"link","Type":"String","Value":"link"},{"Name":"address","Type":"String","Value":"address"},{"Name":"calendarEvent","Type":"String","Value":"calendarEvent"},{"Name":"none","Type":"String","Value":"none"},{"Name":"all","Type":"String","Value":"all"}]}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","DocumentSelectionState is responsible for maintaining selection information"],["SummaryLine","for a document."],["SummaryLine",""],["SummaryLine","It is intended for use by AbstractTextEditor-based components for"],["SummaryLine","identifying the appropriate start/end positions to modify the"],["SummaryLine","DocumentContent, and for programatically setting browser selection when"],["SummaryLine","components re-render."]],"IsStatic":false,"IsClass":false,"Name":"DocumentSelectionState","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"EventEmitter","FullName":"\"node_modules/@types/react-native/index\".EventEmitter"}]],"Members":[["Function",{"Comments":[["SummaryLine","Apply an update to the state. If either offset value has changed,"],["SummaryLine","set the values and emit the `change` event. Otherwise no-op."]],"Kind":"Regular","IsStatic":false,"Name":"update","TypeParameters":[],"Params":[{"Comment":null,"Name":"anchor","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"focus","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Given a max text length, constrain our selection offsets to ensure"],["SummaryLine","that the selection remains strictly within the text range."]],"Kind":"Regular","IsStatic":false,"Name":"constrainLength","TypeParameters":[],"Params":[{"Comment":null,"Name":"maxLength","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"focus","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"blur","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"hasFocus","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isCollapsed","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"isBackward","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getAnchorOffset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getFocusOffset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getStartOffset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getEndOffset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"overlaps","TypeParameters":[],"Params":[{"Comment":null,"Name":"start","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"``end``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","DocumentSelectionState is responsible for maintaining selection information"],["SummaryLine","for a document."],["SummaryLine",""],["SummaryLine","It is intended for use by AbstractTextEditor-based components for"],["SummaryLine","identifying the appropriate start/end positions to modify the"],["SummaryLine","DocumentContent, and for programatically setting browser selection when"],["SummaryLine","components re-render."]],"IsStatic":true,"IsClass":false,"Name":"DocumentSelectionStateStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Comment":null,"Name":"anchor","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"focus","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"DocumentSelectionState","FullName":"DocumentSelectionState"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","IOS Specific properties for TextInput"]],"IsStatic":false,"IsClass":false,"Name":"TextInputIOSProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","enum('never', 'while-editing', 'unless-editing', 'always')"],["SummaryLine","When the clear button should appear on the right side of the text view"]],"Kind":"Regular","Index":null,"Name":"clearButtonMode","Option":true,"Type":["Mapped",{"Name":"TextInputIOSPropsClearButtonMode","FullName":"TextInputIOSPropsClearButtonMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, clears the text field automatically when editing begins"]],"Kind":"Regular","Index":null,"Name":"clearTextOnFocus","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines the types of data converted to clickable URLs in the text input."],["SummaryLine","Only valid if `multiline={true}` and `editable={false}`."],["SummaryLine","By default no data types are detected."],["SummaryLine",""],["SummaryLine","You can provide one type or an array of many types."],["SummaryLine",""],["SummaryLine","Possible values for `dataDetectorTypes` are:"],["SummaryLine",""],["SummaryLine","- `'phoneNumber'`"],["SummaryLine","- `'link'`"],["SummaryLine","- `'address'`"],["SummaryLine","- `'calendarEvent'`"],["SummaryLine","- `'none'`"],["SummaryLine","- `'all'`"]],"Kind":"Regular","Index":null,"Name":"dataDetectorTypes","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"DataDetectorTypes","FullName":""}],["Array",["Mapped",{"Name":"DataDetectorTypes","FullName":""}]]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, the keyboard disables the return key when there is no text and automatically enables it when there is text."],["SummaryLine","The default value is false."]],"Kind":"Regular","Index":null,"Name":"enablesReturnKeyAutomatically","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines the color of the keyboard."]],"Kind":"Regular","Index":null,"Name":"keyboardAppearance","Option":true,"Type":["Mapped",{"Name":"TextInputIOSPropsKeyboardAppearance","FullName":"TextInputIOSPropsKeyboardAppearance"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","See DocumentSelectionState.js, some state that is responsible for maintaining selection information for a document"]],"Kind":"Regular","Index":null,"Name":"selectionState","Option":true,"Type":["Mapped",{"Name":"DocumentSelectionState","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If false, disables spell-check style (i.e. red underlines). The default value is inherited from autoCorrect"]],"Kind":"Regular","Index":null,"Name":"spellCheck","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Give the keyboard and the system information about the expected"],["SummaryLine","semantic meaning for the content that users enter."],["SummaryLine",""],["SummaryLine","For iOS 11+ you can set `textContentType` to `username` or `password` to"],["SummaryLine","enable autofill of login details from the device keychain."],["SummaryLine",""],["SummaryLine","To disable autofill, set textContentType to `none`."],["SummaryLine",""],["SummaryLine","Possible values for `textContentType` are:"],["SummaryLine",""],["SummaryLine","  - `'none'`"],["SummaryLine","  - `'URL'`"],["SummaryLine","  - `'addressCity'`"],["SummaryLine","  - `'addressCityAndState'`"],["SummaryLine","  - `'addressState'`"],["SummaryLine","  - `'countryName'`"],["SummaryLine","  - `'creditCardNumber'`"],["SummaryLine","  - `'emailAddress'`"],["SummaryLine","  - `'familyName'`"],["SummaryLine","  - `'fullStreetAddress'`"],["SummaryLine","  - `'givenName'`"],["SummaryLine","  - `'jobTitle'`"],["SummaryLine","  - `'location'`"],["SummaryLine","  - `'middleName'`"],["SummaryLine","  - `'name'`"],["SummaryLine","  - `'namePrefix'`"],["SummaryLine","  - `'nameSuffix'`"],["SummaryLine","  - `'nickname'`"],["SummaryLine","  - `'organizationName'`"],["SummaryLine","  - `'postalCode'`"],["SummaryLine","  - `'streetAddressLine1'`"],["SummaryLine","  - `'streetAddressLine2'`"],["SummaryLine","  - `'sublocality'`"],["SummaryLine","  - `'telephoneNumber'`"],["SummaryLine","  - `'username'`"],["SummaryLine","  - `'password'`"]],"Kind":"Regular","Index":null,"Name":"textContentType","Option":true,"Type":["Mapped",{"Name":"TextInputIOSPropsTextContentType","FullName":"TextInputIOSPropsTextContentType"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Android Specific properties for TextInput"]],"IsStatic":false,"IsClass":false,"Name":"TextInputAndroidProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","When false, if there is a small amount of space available around a text input (e.g. landscape orientation on a phone),"],["SummaryLine","   the OS may choose to have the user edit the text inside of a full screen text input mode."],["SummaryLine","When true, this feature is disabled and users will always edit the text directly inside of the text input."],["SummaryLine","Defaults to false."]],"Kind":"Regular","Index":null,"Name":"disableFullscreenUI","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If defined, the provided image resource will be rendered on the left."]],"Kind":"Regular","Index":null,"Name":"inlineImageLeft","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Padding between the inline image, if any, and the text input itself."]],"Kind":"Regular","Index":null,"Name":"inlineImagePadding","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the number of lines for a TextInput."],["SummaryLine","Use it with multiline set to true to be able to fill the lines."]],"Kind":"Regular","Index":null,"Name":"numberOfLines","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the return key to the label. Use it instead of `returnKeyType`."]],"Kind":"Regular","Index":null,"Name":"returnKeyLabel","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set text break strategy on Android API Level 23+, possible values are simple, highQuality, balanced"],["SummaryLine","The default value is simple."]],"Kind":"Regular","Index":null,"Name":"textBreakStrategy","Option":true,"Type":["Mapped",{"Name":"TextPropsAndroidTextBreakStrategy","FullName":"TextPropsAndroidTextBreakStrategy"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The color of the textInput underline."]],"Kind":"Regular","Index":null,"Name":"underlineColorAndroid","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"KeyboardType","FullName":"KeyboardType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"default","Type":"String","Value":"default"},{"Name":"email-address","Type":"String","Value":"email-address"},{"Name":"numeric","Type":"String","Value":"numeric"},{"Name":"phone-pad","Type":"String","Value":"phone-pad"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"KeyboardTypeIOS","FullName":"KeyboardTypeIOS","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"ascii-capable","Type":"String","Value":"ascii-capable"},{"Name":"numbers-and-punctuation","Type":"String","Value":"numbers-and-punctuation"},{"Name":"url","Type":"String","Value":"url"},{"Name":"number-pad","Type":"String","Value":"number-pad"},{"Name":"name-phone-pad","Type":"String","Value":"name-phone-pad"},{"Name":"decimal-pad","Type":"String","Value":"decimal-pad"},{"Name":"twitter","Type":"String","Value":"twitter"},{"Name":"web-search","Type":"String","Value":"web-search"}]}]],"Accessibility":null}],["Alias",{"Name":"KeyboardTypeAndroid","Type":["StringLiteral","visible-password"],"TypeParameters":[]}],["Alias",{"Name":"KeyboardTypeOptions","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"KeyboardType","FullName":""}],["Mapped",{"Name":"KeyboardTypeAndroid","FullName":""}],["Mapped",{"Name":"KeyboardTypeIOS","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ReturnKeyType","FullName":"ReturnKeyType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"done","Type":"String","Value":"done"},{"Name":"go","Type":"String","Value":"go"},{"Name":"next","Type":"String","Value":"next"},{"Name":"search","Type":"String","Value":"search"},{"Name":"send","Type":"String","Value":"send"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ReturnKeyTypeAndroid","FullName":"ReturnKeyTypeAndroid","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"previous","Type":"String","Value":"previous"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ReturnKeyTypeIOS","FullName":"ReturnKeyTypeIOS","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"default","Type":"String","Value":"default"},{"Name":"google","Type":"String","Value":"google"},{"Name":"join","Type":"String","Value":"join"},{"Name":"route","Type":"String","Value":"route"},{"Name":"yahoo","Type":"String","Value":"yahoo"},{"Name":"emergency-call","Type":"String","Value":"emergency-call"}]}]],"Accessibility":null}],["Alias",{"Name":"ReturnKeyTypeOptions","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ReturnKeyType","FullName":""}],["Mapped",{"Name":"ReturnKeyTypeAndroid","FullName":""}],["Mapped",{"Name":"ReturnKeyTypeIOS","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputFocusEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"text","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"eventCount","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputScrollEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"contentOffset","Option":false,"Type":["Mapped",{"Name":"TextInputScrollEventDataContentOffset","FullName":"TextInputScrollEventDataContentOffset"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputSelectionChangeEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"selection","Option":false,"Type":["Mapped",{"Name":"TextInputSelectionChangeEventDataSelection","FullName":"TextInputSelectionChangeEventDataSelection"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputKeyPressEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"key","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputChangeEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"eventCount","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"text","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputContentSizeChangeEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"contentSize","Option":false,"Type":["Mapped",{"Name":"ShadowPropTypesIOSStaticShadowOffset","FullName":"ShadowPropTypesIOSStaticShadowOffset"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputEndEditingEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"text","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputSubmitEditingEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"text","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}],["Mapped",{"Name":"TextInputIOSProps","FullName":"\"node_modules/@types/react-native/index\".TextInputIOSProps"}],["Mapped",{"Name":"TextInputAndroidProps","FullName":"\"node_modules/@types/react-native/index\".TextInputAndroidProps"}],["Mapped",{"Name":"AccessibilityProps","FullName":"\"node_modules/@types/react-native/index\".AccessibilityProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Specifies whether fonts should scale to respect Text Size accessibility settings."],["SummaryLine","The default is `true`."]],"Kind":"Regular","Index":null,"Name":"allowFontScaling","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Can tell TextInput to automatically capitalize certain characters."],["SummaryLine","      characters: all characters,"],["SummaryLine","      words: first letter of each word"],["SummaryLine","      sentences: first letter of each sentence (default)"],["SummaryLine","      none: don't auto capitalize anything"],["SummaryLine",""],["SummaryLine","https://facebook.github.io/react-native/docs/textinput.html#autocapitalize"]],"Kind":"Regular","Index":null,"Name":"autoCapitalize","Option":true,"Type":["Mapped",{"Name":"TextInputPropsAutoCapitalize","FullName":"TextInputPropsAutoCapitalize"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If false, disables auto-correct."],["SummaryLine","The default value is true."]],"Kind":"Regular","Index":null,"Name":"autoCorrect","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, focuses the input on componentDidMount."],["SummaryLine","The default value is false."]],"Kind":"Regular","Index":null,"Name":"autoFocus","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, the text field will blur when submitted."],["SummaryLine","The default value is true."]],"Kind":"Regular","Index":null,"Name":"blurOnSubmit","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, caret is hidden. The default value is false."]],"Kind":"Regular","Index":null,"Name":"caretHidden","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, context menu is hidden. The default value is false."]],"Kind":"Regular","Index":null,"Name":"contextMenuHidden","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Provides an initial value that will change when the user starts typing."],["SummaryLine","Useful for simple use-cases where you don't want to deal with listening to events"],["SummaryLine","and updating the value prop to keep the controlled state in sync."]],"Kind":"Regular","Index":null,"Name":"defaultValue","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If false, text is not editable. The default value is true."]],"Kind":"Regular","Index":null,"Name":"editable","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","enum(\"default\", 'numeric', 'email-address', \"ascii-capable\", 'numbers-and-punctuation', 'url', 'number-pad', 'phone-pad', 'name-phone-pad',"],["SummaryLine","'decimal-pad', 'twitter', 'web-search', 'visible-password')"],["SummaryLine","Determines which keyboard to open, e.g.numeric."],["SummaryLine","The following values work across platforms: - default - numeric - email-address - phone-pad"],["SummaryLine","The following values work on iOS: - ascii-capable - numbers-and-punctuation - url - number-pad - name-phone-pad - decimal-pad - twitter - web-search"],["SummaryLine","The following values work on Android: - visible-password"]],"Kind":"Regular","Index":null,"Name":"keyboardType","Option":true,"Type":["Mapped",{"Name":"KeyboardTypeOptions","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Limits the maximum number of characters that can be entered."],["SummaryLine","Use this instead of implementing the logic in JS to avoid flicker."]],"Kind":"Regular","Index":null,"Name":"maxLength","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, the text input can be multiple lines. The default value is false."]],"Kind":"Regular","Index":null,"Name":"multiline","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the text input is blurred"]],"Kind":"Regular","Index":null,"Name":"onBlur","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextInputFocusEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the text input's text changes."]],"Kind":"Regular","Index":null,"Name":"onChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextInputChangeEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the text input's text changes."],["SummaryLine","Changed text is passed as an argument to the callback handler."]],"Kind":"Regular","Index":null,"Name":"onChangeText","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"text","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the text input's content size changes."],["SummaryLine","This will be called with"],["SummaryLine","`{ nativeEvent: { contentSize: { width, height } } }`."],["SummaryLine",""],["SummaryLine","Only called for multiline text inputs."]],"Kind":"Regular","Index":null,"Name":"onContentSizeChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextInputContentSizeChangeEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when text input ends."]],"Kind":"Regular","Index":null,"Name":"onEndEditing","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextInputEndEditingEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the text input is focused"]],"Kind":"Regular","Index":null,"Name":"onFocus","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextInputFocusEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the text input selection is changed."]],"Kind":"Regular","Index":null,"Name":"onSelectionChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextInputSelectionChangeEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the text input's submit button is pressed."]],"Kind":"Regular","Index":null,"Name":"onSubmitEditing","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextInputSubmitEditingEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on content scroll with"],["SummaryLine","  `{ nativeEvent: { contentOffset: { x, y } } }`."],["SummaryLine",""],["SummaryLine","May also contain other properties from ScrollEvent but on Android contentSize is not provided for performance reasons."]],"Kind":"Regular","Index":null,"Name":"onScroll","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextInputScrollEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when a key is pressed."],["SummaryLine","This will be called with"],["SummaryLine","  `{ nativeEvent: { key: keyValue } }`"],["SummaryLine","where keyValue is 'Enter' or 'Backspace' for respective keys and the typed-in character otherwise including ' ' for space."],["SummaryLine",""],["SummaryLine","Fires before onChange callbacks."],["SummaryLine","Note: on Android only the inputs from soft keyboard are handled, not the hardware keyboard inputs."]],"Kind":"Regular","Index":null,"Name":"onKeyPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextInputKeyPressEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The string that will be rendered before text input has been entered"]],"Kind":"Regular","Index":null,"Name":"placeholder","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The text color of the placeholder string"]],"Kind":"Regular","Index":null,"Name":"placeholderTextColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","enum('default', 'go', 'google', 'join', 'next', 'route', 'search', 'send', 'yahoo', 'done', 'emergency-call')"],["SummaryLine","Determines how the return key should look."]],"Kind":"Regular","Index":null,"Name":"returnKeyType","Option":true,"Type":["Mapped",{"Name":"ReturnKeyTypeOptions","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, the text input obscures the text entered so that sensitive text like passwords stay secure."],["SummaryLine","The default value is false."]],"Kind":"Regular","Index":null,"Name":"secureTextEntry","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, all text will automatically be selected on focus"]],"Kind":"Regular","Index":null,"Name":"selectTextOnFocus","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The start and end of the text input's selection. Set start and end to"],["SummaryLine","the same value to position the cursor."]],"Kind":"Regular","Index":null,"Name":"selection","Option":true,"Type":["Mapped",{"Name":"TextInputPropsSelection","FullName":"TextInputPropsSelection"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The highlight (and cursor on ios) color of the text input"]],"Kind":"Regular","Index":null,"Name":"selectionColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Styles"]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this view in end-to-end tests"]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to connect to an InputAccessoryView. Not part of react-natives documentation, but present in examples and"],["SummaryLine","code."],["SummaryLine","See https://facebook.github.io/react-native/docs/inputaccessoryview.html for more information."]],"Kind":"Regular","Index":null,"Name":"inputAccessoryViewID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The value to show for the text input. TextInput is a controlled component,"],["SummaryLine","which means the native value will be forced to match this value prop if provided."],["SummaryLine","For most uses this works great, but in some cases this may cause flickering - one common cause is preventing edits by keeping value the same."],["SummaryLine","In addition to simply setting the same value, either set editable={false},"],["SummaryLine","or set/update maxLength to prevent unwanted edits without flicker."]],"Kind":"Regular","Index":null,"Name":"value","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","This class is responsible for coordinating the \"focused\""],["SummaryLine","state for TextInputs. All calls relating to the keyboard"],["SummaryLine","should be funneled through here"]],"IsStatic":false,"IsClass":false,"Name":"TextInputState","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Returns the ID of the currently focused text field, if one exists"],["SummaryLine","If no text field is focused it returns null"]],"Kind":"Regular","IsStatic":false,"Name":"currentlyFocusedField","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"focusTextInput","TypeParameters":[],"Params":[{"Comment":null,"Name":"textFieldID","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"blurTextInput","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"textFieldID","Description":["id of the text field to focus","Unfocuses the specified text field","noop if it wasn't focused"]}],"Name":"textFieldID","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"TextInputComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"TextInputProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"TextInputComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TextInputComponent","FullName":"TextInputComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"TextInput","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TextInputBase","FullName":"error"}]],"Members":[["Property",{"Comments":[["SummaryLine","Returns if the input is currently focused."]],"Kind":"Regular","Index":null,"Name":"isFocused","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Removes all text from the input."]],"Kind":"Regular","Index":null,"Name":"clear","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"TextInputStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TextInput","FullName":"TextInput"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Access the current focus state."]],"Kind":"Regular","Index":null,"Name":"State","Option":false,"Type":["Mapped",{"Name":"TextInputState","FullName":""}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ToolbarAndroidAction","FullName":"ToolbarAndroidAction","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","title: required, the title of this action"]],"Kind":"Regular","Index":null,"Name":"title","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","icon: the icon for this action, e.g. require('./some_icon.png')"]],"Kind":"Regular","Index":null,"Name":"icon","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","show: when to show this action as an icon or hide it in the overflow menu: always, ifRoom or never"]],"Kind":"Regular","Index":null,"Name":"show","Option":true,"Type":["Mapped",{"Name":"ToolbarAndroidActionShow","FullName":"ToolbarAndroidActionShow"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","showWithText: boolean, whether to show text alongside the icon or not"]],"Kind":"Regular","Index":null,"Name":"showWithText","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ToolbarAndroidProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Sets possible actions on the toolbar as part of the action menu. These are displayed as icons"],["SummaryLine","or text on the right side of the widget. If they don't fit they are placed in an 'overflow'"],["SummaryLine","menu."],["SummaryLine",""],["SummaryLine","This property takes an array of objects, where each object has the following keys:"],["SummaryLine",""],["SummaryLine","* `title`: **required**, the title of this action"],["SummaryLine","* `icon`: the icon for this action, e.g. `require('./some_icon.png')`"],["SummaryLine","* `show`: when to show this action as an icon or hide it in the overflow menu: `always`,"],["SummaryLine","`ifRoom` or `never`"],["SummaryLine","* `showWithText`: boolean, whether to show text alongside the icon or not"]],"Kind":"Regular","Index":null,"Name":"actions","Option":true,"Type":["Array",["Mapped",{"Name":"ToolbarAndroidAction","FullName":""}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the content inset for the toolbar ending edge."],["SummaryLine","The content inset affects the valid area for Toolbar content other"],["SummaryLine","than the navigation button and menu. Insets define the minimum"],["SummaryLine","margin for these components and can be used to effectively align"],["SummaryLine","Toolbar content along well-known gridlines."]],"Kind":"Regular","Index":null,"Name":"contentInsetEnd","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the content inset for the toolbar starting edge."],["SummaryLine","The content inset affects the valid area for Toolbar content"],["SummaryLine","other than the navigation button and menu. Insets define the"],["SummaryLine","minimum margin for these components and can be used to effectively"],["SummaryLine","align Toolbar content along well-known gridlines."]],"Kind":"Regular","Index":null,"Name":"contentInsetStart","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the toolbar logo."]],"Kind":"Regular","Index":null,"Name":"logo","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the navigation icon."]],"Kind":"Regular","Index":null,"Name":"navIcon","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when an action is selected. The only"],["SummaryLine","argument that is passed to the callback is the position of the"],["SummaryLine","action in the actions array."]],"Kind":"Regular","Index":null,"Name":"onActionSelected","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"position","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback called when the icon is selected."]],"Kind":"Regular","Index":null,"Name":"onIconClicked","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the overflow icon."]],"Kind":"Regular","Index":null,"Name":"overflowIcon","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to set the toolbar direction to RTL."],["SummaryLine","In addition to this property you need to add"],["SummaryLine","android:supportsRtl=\"true\""],["SummaryLine","to your application AndroidManifest.xml and then call"],["SummaryLine","setLayoutDirection(LayoutDirection.RTL) in your MainActivity"],["SummaryLine","onCreate method."]],"Kind":"Regular","Index":null,"Name":"rtl","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the toolbar subtitle."]],"Kind":"Regular","Index":null,"Name":"subtitle","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the toolbar subtitle color."]],"Kind":"Regular","Index":null,"Name":"subtitleColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this view in end-to-end tests."]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the toolbar title."]],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the toolbar title color."]],"Kind":"Regular","Index":null,"Name":"titleColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","React component that wraps the Android-only [`Toolbar` widget][0]. A Toolbar can display a logo,"],["SummaryLine","navigation icon (e.g. hamburger menu), a title & subtitle and a list of actions. The title and"],["SummaryLine","subtitle are expanded so the logo and navigation icons are displayed on the left, title and"],["SummaryLine","subtitle in the middle and the actions on the right."],["SummaryLine",""],["SummaryLine","If the toolbar has an only child, it will be displayed between the title and actions."],["SummaryLine",""],["SummaryLine","Although the Toolbar supports remote images for the logo, navigation and action icons, this"],["SummaryLine","should only be used in DEV mode where `require('./some_icon.png')` translates into a packager"],["SummaryLine","URL. In release mode you should always use a drawable resource for these icons. Using"],["SummaryLine","`require('./some_icon.png')` will do this automatically for you, so as long as you don't"],["SummaryLine","explicitly use e.g. `{uri: 'http://...'}`, you will be good."],["SummaryLine",""],["SummaryLine","[0]: https://developer.android.com/reference/android/support/v7/widget/Toolbar.html"]],"IsStatic":false,"IsClass":true,"Name":"ToolbarAndroidComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ToolbarAndroidProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","React component that wraps the Android-only [`Toolbar` widget][0]. A Toolbar can display a logo,"],["SummaryLine","navigation icon (e.g. hamburger menu), a title & subtitle and a list of actions. The title and"],["SummaryLine","subtitle are expanded so the logo and navigation icons are displayed on the left, title and"],["SummaryLine","subtitle in the middle and the actions on the right."],["SummaryLine",""],["SummaryLine","If the toolbar has an only child, it will be displayed between the title and actions."],["SummaryLine",""],["SummaryLine","Although the Toolbar supports remote images for the logo, navigation and action icons, this"],["SummaryLine","should only be used in DEV mode where `require('./some_icon.png')` translates into a packager"],["SummaryLine","URL. In release mode you should always use a drawable resource for these icons. Using"],["SummaryLine","`require('./some_icon.png')` will do this automatically for you, so as long as you don't"],["SummaryLine","explicitly use e.g. `{uri: 'http://...'}`, you will be good."],["SummaryLine",""],["SummaryLine","[0]: https://developer.android.com/reference/android/support/v7/widget/Toolbar.html"]],"IsStatic":true,"IsClass":true,"Name":"ToolbarAndroidComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ToolbarAndroidComponent","FullName":"ToolbarAndroidComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ToolbarAndroid","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ToolbarAndroidBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ToolbarAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ToolbarAndroid","FullName":"ToolbarAndroid"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Gesture recognition on mobile devices is much more complicated than web."],["SummaryLine","A touch can go through several phases as the app determines what the user's intention is."],["SummaryLine","For example, the app needs to determine if the touch is scrolling, sliding on a widget, or tapping."],["SummaryLine","This can even change during the duration of a touch. There can also be multiple simultaneous touches."],["SummaryLine",""],["SummaryLine","The touch responder system is needed to allow components to negotiate these touch interactions"],["SummaryLine","without any additional knowledge about their parent or child components."],["SummaryLine","This system is implemented in ResponderEventPlugin.js, which contains further details and documentation."],["SummaryLine",""],["SummaryLine","Best Practices"],["SummaryLine","Users can feel huge differences in the usability of web apps vs. native, and this is one of the big causes."],["SummaryLine","Every action should have the following attributes:"],["SummaryLine","      Feedback/highlighting- show the user what is handling their touch, and what will happen when they release the gesture"],["SummaryLine","      Cancel-ability- when making an action, the user should be able to abort it mid-touch by dragging their finger away"],["SummaryLine",""],["SummaryLine","These features make users more comfortable while using an app,"],["SummaryLine","because it allows people to experiment and interact without fear of making mistakes."],["SummaryLine",""],["SummaryLine","TouchableHighlight and Touchable*"],["SummaryLine","The responder system can be complicated to use."],["SummaryLine","So we have provided an abstract Touchable implementation for things that should be \"tappable\"."],["SummaryLine","This uses the responder system and allows you to easily configure tap interactions declaratively."],["SummaryLine","Use TouchableHighlight anywhere where you would use a button or link on web."]],"IsStatic":false,"IsClass":false,"Name":"GestureResponderHandlers","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Does this view want to become responder on the start of a touch?"]],"Kind":"Regular","Index":null,"Name":"onStartShouldSetResponder","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called for every touch move on the View when it is not the responder: does this view want to \"claim\" touch responsiveness?"]],"Kind":"Regular","Index":null,"Name":"onMoveShouldSetResponder","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If the View returns true and attempts to become the responder, one of the following will happen:"]],"Kind":"Regular","Index":null,"Name":"onResponderEnd","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The View is now responding for touch events."],["SummaryLine","This is the time to highlight and show the user what is happening"]],"Kind":"Regular","Index":null,"Name":"onResponderGrant","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Something else is the responder right now and will not release it"]],"Kind":"Regular","Index":null,"Name":"onResponderReject","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The user is moving their finger"]],"Kind":"Regular","Index":null,"Name":"onResponderMove","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Fired at the end of the touch, ie \"touchUp\""]],"Kind":"Regular","Index":null,"Name":"onResponderRelease","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onResponderStart","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Something else wants to become responder."],["SummaryLine","Should this view release the responder? Returning true allows release"]],"Kind":"Regular","Index":null,"Name":"onResponderTerminationRequest","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The responder has been taken from the View."],["SummaryLine","Might be taken by other views after a call to onResponderTerminationRequest,"],["SummaryLine","or might be taken by the OS without asking (happens with control center/ notification center on iOS)"]],"Kind":"Regular","Index":null,"Name":"onResponderTerminate","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,"],["SummaryLine","where the deepest node is called first."],["SummaryLine","That means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers."],["SummaryLine","This is desirable in most cases, because it makes sure all controls and buttons are usable."],["SummaryLine",""],["SummaryLine","However, sometimes a parent will want to make sure that it becomes responder."],["SummaryLine","This can be handled by using the capture phase."],["SummaryLine","Before the responder system bubbles up from the deepest component,"],["SummaryLine","it will do a capture phase, firing on*ShouldSetResponderCapture."],["SummaryLine","So if a parent View wants to prevent the child from becoming responder on a touch start,"],["SummaryLine","it should have a onStartShouldSetResponderCapture handler which returns true."]],"Kind":"Regular","Index":null,"Name":"onStartShouldSetResponderCapture","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,"],["SummaryLine","where the deepest node is called first."],["SummaryLine","That means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers."],["SummaryLine","This is desirable in most cases, because it makes sure all controls and buttons are usable."],["SummaryLine",""],["SummaryLine","However, sometimes a parent will want to make sure that it becomes responder."],["SummaryLine","This can be handled by using the capture phase."],["SummaryLine","Before the responder system bubbles up from the deepest component,"],["SummaryLine","it will do a capture phase, firing on*ShouldSetResponderCapture."],["SummaryLine","So if a parent View wants to prevent the child from becoming responder on a touch start,"],["SummaryLine","it should have a onStartShouldSetResponderCapture handler which returns true."]],"Kind":"Regular","Index":null,"Name":"onMoveShouldSetResponderCapture","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewStyle","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"FlexStyle","FullName":"\"node_modules/@types/react-native/index\".FlexStyle"}],["Mapped",{"Name":"ShadowStyleIOS","FullName":"\"node_modules/@types/react-native/index\".ShadowStyleIOS"}],["Mapped",{"Name":"TransformsStyle","FullName":"\"node_modules/@types/react-native/index\".TransformsStyle"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"backfaceVisibility","Option":true,"Type":["Mapped",{"Name":"ViewStyleBackfaceVisibility","FullName":"ViewStyleBackfaceVisibility"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"backgroundColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomEndRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomLeftRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomRightRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomStartRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderEndColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderLeftColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderLeftWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderRightColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderRightWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderStartColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderStyle","Option":true,"Type":["Mapped",{"Name":"ViewStyleBorderStyle","FullName":"ViewStyleBorderStyle"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopEndRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopLeftRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopRightRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopStartRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"opacity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the elevation of a view, using Android's underlying"],["SummaryLine","[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation)."],["SummaryLine","This adds a drop shadow to the item and affects z-order for overlapping views."],["SummaryLine","Only supported on Android 5.0+, has no effect on earlier versions."]],"Kind":"Regular","Index":null,"Name":"elevation","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewPropsIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver."]],"Kind":"Regular","Index":null,"Name":"accessibilityViewIsModal","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Provides an array of custom actions available for accessibility."]],"Kind":"Regular","Index":null,"Name":"accessibilityActions","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When `accessible` is true, the system will try to invoke this function"],["SummaryLine","when the user performs an accessibility custom action."]],"Kind":"Regular","Index":null,"Name":"onAccessibilityAction","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Whether this view should be rendered as a bitmap before compositing."],["SummaryLine",""],["SummaryLine","On iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;"],["SummaryLine","for example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view"],["SummaryLine","and quickly composite it during each frame."],["SummaryLine",""],["SummaryLine","Rasterization incurs an off-screen drawing pass and the bitmap consumes memory."],["SummaryLine","Test and measure when using this property."]],"Kind":"Regular","Index":null,"Name":"shouldRasterizeIOS","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Views that are only used to layout their children or otherwise don't draw anything"],["SummaryLine","may be automatically removed from the native hierarchy as an optimization."],["SummaryLine","Set this property to false to disable this optimization and ensure that this View exists in the native view hierarchy."]],"Kind":"Regular","Index":null,"Name":"collapsable","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior."],["SummaryLine","The default (false) falls back to drawing the component and its children"],["SummaryLine","with an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value."],["SummaryLine","This default may be noticeable and undesired in the case where the View you are setting an opacity on"],["SummaryLine","has multiple overlapping elements (e.g. multiple overlapping Views, or text and a background)."],["SummaryLine",""],["SummaryLine","Rendering offscreen to preserve correct alpha behavior is extremely expensive"],["SummaryLine","and hard to debug for non-native developers, which is why it is not turned on by default."],["SummaryLine","If you do need to enable this property for an animation,"],["SummaryLine","consider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame)."],["SummaryLine","If that property is enabled, this View will be rendered off-screen once,"],["SummaryLine","saved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU."]],"Kind":"Regular","Index":null,"Name":"needsOffscreenAlphaCompositing","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Whether this view should render itself (and all of its children) into a single hardware texture on the GPU."],["SummaryLine",""],["SummaryLine","On Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:"],["SummaryLine","in those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be"],["SummaryLine","re-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation."]],"Kind":"Regular","Index":null,"Name":"renderToHardwareTextureAndroid","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"Falsy","Type":["Mapped",{"Name":"obj","FullName":"obj"}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RecursiveArray","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"Array","FullName":"error"}],"TypeParameters":[["Union",{"Option":false,"Types":[["Mapped",{"Name":"'T","FullName":""}],["Generic",{"Type":["Mapped",{"Name":"RecursiveArray","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]]}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RegisteredStyle","FullName":"RegisteredStyle","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[],"Accessibility":null}],["Alias",{"Name":"StyleProp","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"'T","FullName":""}],["Generic",{"Type":["Mapped",{"Name":"RegisteredStyle","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}],["Generic",{"Type":["Mapped",{"Name":"RecursiveArray","FullName":""}],"TypeParameters":[["Union",{"Option":false,"Types":[["Mapped",{"Name":"'T","FullName":""}],["Generic",{"Type":["Mapped",{"Name":"RegisteredStyle","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}],["Mapped",{"Name":"Falsy","FullName":""}]]}]]}],["Mapped",{"Name":"Falsy","FullName":""}]]}],"TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AccessibilityPropsAndroid","FullName":"\"node_modules/@types/react-native/index\".AccessibilityPropsAndroid"}],["Mapped",{"Name":"AccessibilityPropsIOS","FullName":"\"node_modules/@types/react-native/index\".AccessibilityPropsIOS"}]],"Members":[["Property",{"Comments":[["SummaryLine","When true, indicates that the view is an accessibility element."],["SummaryLine","By default, all the touchable elements are accessible."]],"Kind":"Regular","Index":null,"Name":"accessible","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Overrides the text that's read by the screen reader when the user interacts with the element. By default, the"],["SummaryLine","label is constructed by traversing all the children and accumulating all the Text nodes separated by space."]],"Kind":"Regular","Index":null,"Name":"accessibilityLabel","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a “button”)."],["SummaryLine","If we were using native buttons, this would work automatically. Since we are using javascript, we need to"],["SummaryLine","provide a bit more context for TalkBack. To do so, you must specify the ‘accessibilityComponentType’ property"],["SummaryLine","for any UI component. For instances, we support ‘button’, ‘radiobutton_checked’ and ‘radiobutton_unchecked’ and so on."]],"Kind":"Regular","Index":null,"Name":"accessibilityComponentType","Option":true,"Type":["Mapped",{"Name":"AccessibilityPropsAndroidAccessibilityComponentType","FullName":"AccessibilityPropsAndroidAccessibilityComponentType"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Indicates to accessibility services whether the user should be notified when this view changes."],["SummaryLine","Works for Android API >= 19 only."],["SummaryLine","See http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references."]],"Kind":"Regular","Index":null,"Name":"accessibilityLiveRegion","Option":true,"Type":["Mapped",{"Name":"AccessibilityPropsAndroidAccessibilityLiveRegion","FullName":"AccessibilityPropsAndroidAccessibilityLiveRegion"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Controls how view is important for accessibility which is if it fires accessibility events"],["SummaryLine","and if it is reported to accessibility services that query the screen."],["SummaryLine","Works for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references."],["SummaryLine",""],["SummaryLine","Possible values:"],["SummaryLine","      'auto' - The system determines whether the view is important for accessibility - default (recommended)."],["SummaryLine","      'yes' - The view is important for accessibility."],["SummaryLine","      'no' - The view is not important for accessibility."],["SummaryLine","      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views."]],"Kind":"Regular","Index":null,"Name":"importantForAccessibility","Option":true,"Type":["Mapped",{"Name":"AccessibilityPropsAndroidImportantForAccessibility","FullName":"AccessibilityPropsAndroidImportantForAccessibility"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityPropsIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","A Boolean value indicating whether the accessibility elements contained within this accessibility element"],["SummaryLine","are hidden to the screen reader."]],"Kind":"Regular","Index":null,"Name":"accessibilityElementsHidden","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Accessibility traits tell a person using VoiceOver what kind of element they have selected."],["SummaryLine","Is this element a label? A button? A header? These questions are answered by accessibilityTraits."]],"Kind":"Regular","Index":null,"Name":"accessibilityTraits","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"AccessibilityTrait","FullName":""}],["Array",["Mapped",{"Name":"AccessibilityTrait","FullName":""}]]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture."]],"Kind":"Regular","Index":null,"Name":"onAccessibilityTap","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When accessible is true, the system will invoke this function when the user performs the magic tap gesture."]],"Kind":"Regular","Index":null,"Name":"onMagicTap","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityTrait","FullName":"AccessibilityTrait","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"button","Type":"String","Value":"button"},{"Name":"link","Type":"String","Value":"link"},{"Name":"header","Type":"String","Value":"header"},{"Name":"search","Type":"String","Value":"search"},{"Name":"image","Type":"String","Value":"image"},{"Name":"selected","Type":"String","Value":"selected"},{"Name":"plays","Type":"String","Value":"plays"},{"Name":"key","Type":"String","Value":"key"},{"Name":"text","Type":"String","Value":"text"},{"Name":"summary","Type":"String","Value":"summary"},{"Name":"disabled","Type":"String","Value":"disabled"},{"Name":"frequentUpdates","Type":"String","Value":"frequentUpdates"},{"Name":"startsMedia","Type":"String","Value":"startsMedia"},{"Name":"adjustable","Type":"String","Value":"adjustable"},{"Name":"allowsDirectInteraction","Type":"String","Value":"allowsDirectInteraction"},{"Name":"pageTurn","Type":"String","Value":"pageTurn"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewPropsAndroid","FullName":"\"node_modules/@types/react-native/index\".ViewPropsAndroid"}],["Mapped",{"Name":"ViewPropsIOS","FullName":"\"node_modules/@types/react-native/index\".ViewPropsIOS"}],["Mapped",{"Name":"GestureResponderHandlers","FullName":"\"node_modules/@types/react-native/index\".GestureResponderHandlers"}],["Mapped",{"Name":"Touchable","FullName":"\"node_modules/@types/react-native/index\".Touchable"}],["Mapped",{"Name":"AccessibilityProps","FullName":"\"node_modules/@types/react-native/index\".AccessibilityProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","This defines how far a touch event can start away from the view."],["SummaryLine","Typical interface guidelines recommend touch targets that are at least"],["SummaryLine","30 - 40 points/density-independent pixels. If a Touchable view has"],["SummaryLine","a height of 20 the touchable height can be extended to 40 with"],["SummaryLine","hitSlop={{top: 10, bottom: 10, left: 0, right: 0}}"],["SummaryLine","NOTE The touch area never extends past the parent view bounds and"],["SummaryLine","the Z-index of sibling views always takes precedence if a touch"],["SummaryLine","hits two overlapping views."]],"Kind":"Regular","Index":null,"Name":"hitSlop","Option":true,"Type":["Mapped",{"Name":"Insets","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on mount and layout changes with"],["SummaryLine",""],["SummaryLine","{nativeEvent: { layout: {x, y, width, height}}}."]],"Kind":"Regular","Index":null,"Name":"onLayout","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutChangeEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:"],["SummaryLine",""],["SummaryLine",".box-none {"],["SummaryLine","   pointer-events: none;"],["SummaryLine","}"],["SummaryLine",".box-none * {"],["SummaryLine","   pointer-events: all;"],["SummaryLine","}"],["SummaryLine",""],["SummaryLine","box-only is the equivalent of"],["SummaryLine",""],["SummaryLine",".box-only {"],["SummaryLine","   pointer-events: all;"],["SummaryLine","}"],["SummaryLine",".box-only * {"],["SummaryLine","   pointer-events: none;"],["SummaryLine","}"],["SummaryLine",""],["SummaryLine","But since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,"],["SummaryLine","we opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform."]],"Kind":"Regular","Index":null,"Name":"pointerEvents","Option":true,"Type":["Mapped",{"Name":"ViewPropsPointerEvents","FullName":"ViewPropsPointerEvents"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,"],["SummaryLine","most of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound."],["SummaryLine","The subviews must also have overflow: hidden, as should the containing view (or one of its superviews)."]],"Kind":"Regular","Index":null,"Name":"removeClippedSubviews","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this view in end-to-end tests."]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","The most fundamental component for building UI, View is a container that supports layout with flexbox, style, some touch handling,"],["SummaryLine","and accessibility controls, and is designed to be nested inside other views and to have 0 to many children of any type."],["SummaryLine","View maps directly to the native view equivalent on whatever platform React is running on,"],["SummaryLine","whether that is a UIView, <div>, android.view, etc."]],"IsStatic":false,"IsClass":true,"Name":"ViewComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ViewProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","The most fundamental component for building UI, View is a container that supports layout with flexbox, style, some touch handling,"],["SummaryLine","and accessibility controls, and is designed to be nested inside other views and to have 0 to many children of any type."],["SummaryLine","View maps directly to the native view equivalent on whatever platform React is running on,"],["SummaryLine","whether that is a UIView, <div>, android.view, etc."]],"IsStatic":true,"IsClass":true,"Name":"ViewComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ViewComponent","FullName":"ViewComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"View","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"View","FullName":"View"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Is 3D Touch / Force Touch available (i.e. will touch events include `force`)"]],"Kind":"Regular","Index":null,"Name":"forceTouchAvailable","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewPagerAndroidOnPageScrollEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"position","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"offset","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewPagerAndroidOnPageSelectedEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"position","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewPagerAndroidProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Index of initial page that should be selected. Use `setPage` method to"],["SummaryLine","update the page, and `onPageSelected` to monitor page changes"]],"Kind":"Regular","Index":null,"Name":"initialPage","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When false, the content does not scroll."],["SummaryLine","The default value is true."]],"Kind":"Regular","Index":null,"Name":"scrollEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Executed when transitioning between pages (ether because of animation for"],["SummaryLine","the requested page change or when user is swiping/dragging between pages)"],["SummaryLine","The `event.nativeEvent` object for this callback will carry following data:"],["SummaryLine","  - position - index of first page from the left that is currently visible"],["SummaryLine","  - offset - value from range [0,1) describing stage between page transitions."],["SummaryLine","    Value x means that (1 - x) fraction of the page at \"position\" index is"],["SummaryLine","    visible, and x fraction of the next page is visible."]],"Kind":"Regular","Index":null,"Name":"onPageScroll","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewPagerAndroidOnPageScrollEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","This callback will be called once ViewPager finish navigating to selected page"],["SummaryLine","(when user swipes between pages). The `event.nativeEvent` object passed to this"],["SummaryLine","callback will have following fields:"],["SummaryLine","  - position - index of page that has been selected"]],"Kind":"Regular","Index":null,"Name":"onPageSelected","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewPagerAndroidOnPageSelectedEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Function called when the page scrolling state has changed."],["SummaryLine","The page scrolling state can be in 3 states:"],["SummaryLine","- idle, meaning there is no interaction with the page scroller happening at the time"],["SummaryLine","- dragging, meaning there is currently an interaction with the page scroller"],["SummaryLine","- settling, meaning that there was an interaction with the page scroller, and the"],["SummaryLine","   page scroller is now finishing it's closing or opening animation"]],"Kind":"Regular","Index":null,"Name":"onPageScrollStateChanged","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"state","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ViewPagerAndroidPropsOnPageScrollStateChanged","FullName":"ViewPagerAndroidPropsOnPageScrollStateChanged"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines whether the keyboard gets dismissed in response to a drag."],["SummaryLine","   - 'none' (the default), drags do not dismiss the keyboard."],["SummaryLine","   - 'on-drag', the keyboard is dismissed when a drag begins."]],"Kind":"Regular","Index":null,"Name":"keyboardDismissMode","Option":true,"Type":["Mapped",{"Name":"ViewPagerAndroidPropsKeyboardDismissMode","FullName":"ViewPagerAndroidPropsKeyboardDismissMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Blank space to show between pages. This is only visible while scrolling, pages are still"],["SummaryLine","edge-to-edge."]],"Kind":"Regular","Index":null,"Name":"pageMargin","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ViewPagerAndroidComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ViewPagerAndroidProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ViewPagerAndroidComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ViewPagerAndroidComponent","FullName":"ViewPagerAndroidComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ViewPagerAndroid","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewPagerAndroidBase","FullName":"error"}]],"Members":[["Function",{"Comments":[["SummaryLine","A helper function to scroll to a specific page in the ViewPager."],["SummaryLine","The transition between pages will be animated."]],"Kind":"Regular","IsStatic":false,"Name":"setPage","TypeParameters":[],"Params":[{"Comment":null,"Name":"selectedPage","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","A helper function to scroll to a specific page in the ViewPager."],["SummaryLine","The transition between pages will *not* be animated."]],"Kind":"Regular","IsStatic":false,"Name":"setPageWithoutAnimation","TypeParameters":[],"Params":[{"Comment":null,"Name":"selectedPage","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ViewPagerAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ViewPagerAndroid","FullName":"ViewPagerAndroid"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","It is a component to solve the common problem of views that need to move out of the way of the virtual keyboard."],["SummaryLine","It can automatically adjust either its position or bottom padding based on the position of the keyboard."]],"IsStatic":false,"IsClass":true,"Name":"KeyboardAvoidingViewComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"KeyboardAvoidingViewProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","It is a component to solve the common problem of views that need to move out of the way of the virtual keyboard."],["SummaryLine","It can automatically adjust either its position or bottom padding based on the position of the keyboard."]],"IsStatic":true,"IsClass":true,"Name":"KeyboardAvoidingViewComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"KeyboardAvoidingViewComponent","FullName":"KeyboardAvoidingViewComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"KeyboardAvoidingView","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"KeyboardAvoidingViewBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"KeyboardAvoidingViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"KeyboardAvoidingView","FullName":"KeyboardAvoidingView"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"KeyboardAvoidingViewProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"behavior","Option":true,"Type":["Mapped",{"Name":"KeyboardAvoidingViewPropsBehavior","FullName":"KeyboardAvoidingViewPropsBehavior"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The style of the content container(View) when behavior is 'position'."]],"Kind":"Regular","Index":null,"Name":"contentContainerStyle","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","This is the distance between the top of the user screen and the react native view,"],["SummaryLine","may be non-zero in some use cases."]],"Kind":"Regular","Index":null,"Name":"keyboardVerticalOffset","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Enables or disables the KeyboardAvoidingView."],["SummaryLine",""],["SummaryLine","Default is true"]],"Kind":"Regular","Index":null,"Name":"enabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","//FIXME: No documentation extracted from code comment on WebView.ios.js"]],"IsStatic":false,"IsClass":false,"Name":"NavState","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"url","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"loading","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"canGoBack","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"canGoForward","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Passed data from WebView via window.postMessage."]],"IsStatic":false,"IsClass":false,"Name":"WebViewMessageEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","The data sent from a WebView; can only be a string."]],"Kind":"Regular","Index":null,"Name":"data","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Used for android only, JS is enabled by default for WebView on iOS"]],"Kind":"Regular","Index":null,"Name":"javaScriptEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used on Android only, controls whether DOM Storage is enabled"],["SummaryLine","or not android"]],"Kind":"Regular","Index":null,"Name":"domStorageEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets the user-agent for the WebView."]],"Kind":"Regular","Index":null,"Name":"userAgent","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Specifies the mixed content mode. i.e WebView will allow a secure origin to load content from any other origin."],["SummaryLine","Possible values for mixedContentMode are:"],["SummaryLine","'never' (default) - WebView will not allow a secure origin to load content from an insecure origin."],["SummaryLine","'always' - WebView will allow a secure origin to load content from any other origin, even if that origin is insecure."],["SummaryLine","'compatibility' - WebView will attempt to be compatible with the approach of a modern web browser with regard to mixed content."]],"Kind":"Regular","Index":null,"Name":"mixedContentMode","Option":true,"Type":["Mapped",{"Name":"WebViewPropsAndroidMixedContentMode","FullName":"WebViewPropsAndroidMixedContentMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Controls whether form autocomplete data should be saved"]],"Kind":"Regular","Index":null,"Name":"saveFormDataDisabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewIOSLoadRequestEvent","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"canGoBack","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"lockIdentifier","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"loading","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"canGoForward","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"navigationType","Option":false,"Type":["Mapped",{"Name":"WebViewIOSLoadRequestEventNavigationType","FullName":"WebViewIOSLoadRequestEventNavigationType"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"url","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewPropsIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Determines whether HTML5 videos play inline or use the native"],["SummaryLine","full-screen controller. default value false"],["SummaryLine","NOTE : \"In order * for video to play inline, not only does"],["SummaryLine","this property need to be set to true, but the video element"],["SummaryLine","in the HTML document must also include the webkit-playsinline"],["SummaryLine","attribute.\""]],"Kind":"Regular","Index":null,"Name":"allowsInlineMediaPlayback","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Boolean value that determines whether the web view bounces"],["SummaryLine","when it reaches the edge of the content. The default value is `true`."]],"Kind":"Regular","Index":null,"Name":"bounces","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines the types of data converted to clickable URLs in"],["SummaryLine","the web view’s content. By default only phone numbers are detected."],["SummaryLine",""],["SummaryLine","You can provide one type or an array of many types."],["SummaryLine",""],["SummaryLine","Possible values for `dataDetectorTypes` are:"],["SummaryLine",""],["SummaryLine","- `'phoneNumber'`"],["SummaryLine","- `'link'`"],["SummaryLine","- `'address'`"],["SummaryLine","- `'calendarEvent'`"],["SummaryLine","- `'none'`"],["SummaryLine","- `'all'`"]],"Kind":"Regular","Index":null,"Name":"dataDetectorTypes","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"DataDetectorTypes","FullName":""}],["Array",["Mapped",{"Name":"DataDetectorTypes","FullName":""}]]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A floating-point number that determines how quickly the scroll"],["SummaryLine","view decelerates after the user lifts their finger. You may also"],["SummaryLine","use string shortcuts \"normal\" and \"fast\" which match the"],["SummaryLine","underlying iOS settings for UIScrollViewDecelerationRateNormal"],["SummaryLine","and UIScrollViewDecelerationRateFast respectively."],["SummaryLine","- normal: 0.998 - fast: 0.99 (the default for iOS WebView)"]],"Kind":"Regular","Index":null,"Name":"decelerationRate","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Enum",{"Name":"StringEnum","Cases":[{"Name":"normal","Type":"String","Value":"normal"},{"Name":"fast","Type":"String","Value":"fast"}]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Allows custom handling of any webview requests by a JS handler."],["SummaryLine","Return true or false from this method to continue loading the"],["SummaryLine","request."]],"Kind":"Regular","Index":null,"Name":"onShouldStartLoadWithRequest","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"WebViewIOSLoadRequestEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Boolean value that determines whether scrolling is enabled in the"],["SummaryLine","`WebView`. The default value is `true`."]],"Kind":"Regular","Index":null,"Name":"scrollEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewUriSource","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"uri","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``method``","Option":true,"Type":["Mapped",{"Name":"WebViewUriSourceMethod","FullName":"WebViewUriSourceMethod"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"headers","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"body","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewHtmlSource","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"html","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"baseUrl","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewNativeConfig","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``component``","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"props","Option":true,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewManager","Option":true,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}],["Mapped",{"Name":"WebViewPropsAndroid","FullName":"\"node_modules/@types/react-native/index\".WebViewPropsAndroid"}],["Mapped",{"Name":"WebViewPropsIOS","FullName":"\"node_modules/@types/react-native/index\".WebViewPropsIOS"}]],"Members":[["Property",{"Comments":[["SummaryLine","Controls whether to adjust the content inset for web views that are"],["SummaryLine","placed behind a navigation bar, tab bar, or toolbar. The default value"],["SummaryLine","is `true`."]],"Kind":"Regular","Index":null,"Name":"automaticallyAdjustContentInsets","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The amount by which the web view content is inset from the edges of"],["SummaryLine","the scroll view. Defaults to {top: 0, left: 0, bottom: 0, right: 0}."]],"Kind":"Regular","Index":null,"Name":"contentInset","Option":true,"Type":["Mapped",{"Name":"Insets","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"html","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set this to provide JavaScript that will be injected into the web page"],["SummaryLine","when the view loads."]],"Kind":"Regular","Index":null,"Name":"injectedJavaScript","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked when load fails"]],"Kind":"Regular","Index":null,"Name":"onError","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"NavState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked when load finish"]],"Kind":"Regular","Index":null,"Name":"onLoad","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"NavState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked when load either succeeds or fails"]],"Kind":"Regular","Index":null,"Name":"onLoadEnd","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"NavState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on load start"]],"Kind":"Regular","Index":null,"Name":"onLoadStart","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"NavState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked when window.postMessage is called from WebView."]],"Kind":"Regular","Index":null,"Name":"onMessage","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"WebViewMessageEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Function that is invoked when the `WebView` loading starts or ends."]],"Kind":"Regular","Index":null,"Name":"onNavigationStateChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"NavState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Function that returns a view to show if there's an error."]],"Kind":"Regular","Index":null,"Name":"renderError","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewProps","FullName":""}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Function that returns a loading indicator."]],"Kind":"Regular","Index":null,"Name":"renderLoading","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewProps","FullName":""}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Boolean value that forces the `WebView` to show the loading view"],["SummaryLine","on the first load."]],"Kind":"Regular","Index":null,"Name":"startInLoadingState","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"url","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"source","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"WebViewUriSource","FullName":""}],["Mapped",{"Name":"WebViewHtmlSource","FullName":""}],["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines whether HTML5 audio & videos require the user to tap"],["SummaryLine","before they can start playing. The default value is false."]],"Kind":"Regular","Index":null,"Name":"mediaPlaybackRequiresUserAction","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","sets whether the webpage scales to fit the view and the user can change the scale"]],"Kind":"Regular","Index":null,"Name":"scalesPageToFit","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","List of origin strings to allow being navigated to."],["SummaryLine","The strings allow wildcards and get matched against just the origin (not the full URL)."],["SummaryLine","If the user taps to navigate to a new page but the new page is not in this whitelist, the URL will be handled by the OS."],["SummaryLine","The default whitelisted origins are \"http://\" and \"https://\"."]],"Kind":"Regular","Index":null,"Name":"originWhitelist","Option":true,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Override the native component used to render the WebView. Enables a custom native"],["SummaryLine","WebView which uses the same JavaScript as the original WebView."]],"Kind":"Regular","Index":null,"Name":"nativeConfig","Option":true,"Type":["Mapped",{"Name":"WebViewNativeConfig","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"WebView","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"WebViewProps","FullName":""}]]}]],"Members":[["Property",{"Comments":[["SummaryLine","Go back one page in the webview's history."]],"Kind":"Regular","Index":null,"Name":"goBack","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Go forward one page in the webview's history."]],"Kind":"Regular","Index":null,"Name":"goForward","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Post a message to the WebView in the form of a string."]],"Kind":"Regular","Index":null,"Name":"postMessage","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Reloads the current page."]],"Kind":"Regular","Index":null,"Name":"reload","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Stop loading the current page."]],"Kind":"Regular","IsStatic":false,"Name":"stopLoading","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Returns the native webview node."]],"Kind":"Regular","Index":null,"Name":"getWebViewHandle","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Inject JavaScript to be executed immediately."]],"Kind":"Regular","Index":null,"Name":"injectJavaScript","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"script","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"WebViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"WebView","FullName":"WebView"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeSegmentedControlIOSChangeEvent","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"value","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"selectedSegmentIndex","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"target","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SegmentedControlIOSProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","If false the user won't be able to interact with the control. Default value is true."]],"Kind":"Regular","Index":null,"Name":"enabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, then selecting a segment won't persist visually."],["SummaryLine","The onValueChange callback will still work as expected."]],"Kind":"Regular","Index":null,"Name":"momentary","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the user taps a segment;"],["SummaryLine","passes the event as an argument"]],"Kind":"Regular","Index":null,"Name":"onChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"NativeSegmentedControlIOSChangeEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the user taps a segment; passes the segment's value as an argument"]],"Kind":"Regular","Index":null,"Name":"onValueChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The index in props.values of the segment to be (pre)selected."]],"Kind":"Regular","Index":null,"Name":"selectedIndex","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Accent color of the control."]],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The labels for the control's segment buttons, in order."]],"Kind":"Regular","Index":null,"Name":"values","Option":true,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Renders nested content and automatically applies paddings reflect the portion of the view"],["SummaryLine","that is not covered by navigation bars, tab bars, toolbars, and other ancestor views."],["SummaryLine","Moreover, and most importantly, Safe Area's paddings feflect physical limitation of the screen,"],["SummaryLine","such as rounded corners or camera notches (aka sensor housing area on iPhone X)."]],"IsStatic":false,"IsClass":true,"Name":"SafeAreaViewComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ViewProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Renders nested content and automatically applies paddings reflect the portion of the view"],["SummaryLine","that is not covered by navigation bars, tab bars, toolbars, and other ancestor views."],["SummaryLine","Moreover, and most importantly, Safe Area's paddings feflect physical limitation of the screen,"],["SummaryLine","such as rounded corners or camera notches (aka sensor housing area on iPhone X)."]],"IsStatic":true,"IsClass":true,"Name":"SafeAreaViewComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SafeAreaViewComponent","FullName":"SafeAreaViewComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"SafeAreaView","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"SafeAreaViewBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"SafeAreaViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SafeAreaView","FullName":"SafeAreaView"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A component which enables customization of the keyboard input accessory view on iOS. The input accessory view is"],["SummaryLine","displayed above the keyboard whenever a TextInput has focus. This component can be used to create custom toolbars."],["SummaryLine",""],["SummaryLine","To use this component wrap your custom toolbar with the InputAccessoryView component, and set a nativeID. Then, pass"],["SummaryLine","that nativeID as the inputAccessoryViewID of whatever TextInput you desire."]],"IsStatic":false,"IsClass":true,"Name":"InputAccessoryView","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"InputAccessoryViewProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A component which enables customization of the keyboard input accessory view on iOS. The input accessory view is"],["SummaryLine","displayed above the keyboard whenever a TextInput has focus. This component can be used to create custom toolbars."],["SummaryLine",""],["SummaryLine","To use this component wrap your custom toolbar with the InputAccessoryView component, and set a nativeID. Then, pass"],["SummaryLine","that nativeID as the inputAccessoryViewID of whatever TextInput you desire."]],"IsStatic":true,"IsClass":true,"Name":"InputAccessoryViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"InputAccessoryView","FullName":"InputAccessoryView"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"InputAccessoryViewProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"backgroundColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","An ID which is used to associate this InputAccessoryView to specified TextInput(s)."]],"Kind":"Regular","Index":null,"Name":"nativeID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Use `SegmentedControlIOS` to render a UISegmentedControl iOS."],["SummaryLine",""],["SummaryLine","#### Programmatically changing selected index"],["SummaryLine",""],["SummaryLine","The selected index can be changed on the fly by assigning the"],["SummaryLine","selectIndex prop to a state variable, then changing that variable."],["SummaryLine","Note that the state variable would need to be updated as the user"],["SummaryLine","selects a value and changes the index, as shown in the example below."],["SummaryLine",""],["SummaryLine","````"],["SummaryLine","<SegmentedControlIOS"],["SummaryLine","   values={['One', 'Two']}"],["SummaryLine","   selectedIndex={this.state.selectedIndex}"],["SummaryLine","   onChange={(event) => {"],["SummaryLine","     this.setState({selectedIndex: event.nativeEvent.selectedSegmentIndex});"],["SummaryLine","   }}"],["SummaryLine","/>"],["SummaryLine","````"]],"IsStatic":false,"IsClass":true,"Name":"SegmentedControlIOSComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"SegmentedControlIOSProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Use `SegmentedControlIOS` to render a UISegmentedControl iOS."],["SummaryLine",""],["SummaryLine","#### Programmatically changing selected index"],["SummaryLine",""],["SummaryLine","The selected index can be changed on the fly by assigning the"],["SummaryLine","selectIndex prop to a state variable, then changing that variable."],["SummaryLine","Note that the state variable would need to be updated as the user"],["SummaryLine","selects a value and changes the index, as shown in the example below."],["SummaryLine",""],["SummaryLine","````"],["SummaryLine","<SegmentedControlIOS"],["SummaryLine","   values={['One', 'Two']}"],["SummaryLine","   selectedIndex={this.state.selectedIndex}"],["SummaryLine","   onChange={(event) => {"],["SummaryLine","     this.setState({selectedIndex: event.nativeEvent.selectedSegmentIndex});"],["SummaryLine","   }}"],["SummaryLine","/>"],["SummaryLine","````"]],"IsStatic":true,"IsClass":true,"Name":"SegmentedControlIOSComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SegmentedControlIOSComponent","FullName":"SegmentedControlIOSComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"SegmentedControlIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"SegmentedControlIOSBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"SegmentedControlIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SegmentedControlIOS","FullName":"SegmentedControlIOS"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NavigatorIOSProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","The default background color of the navigation bar."]],"Kind":"Regular","Index":null,"Name":"barTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","NavigatorIOS uses \"route\" objects to identify child views, their props, and navigation bar configuration."],["SummaryLine","\"push\" and all the other navigation operations expect routes to be like this"]],"Kind":"Regular","Index":null,"Name":"initialRoute","Option":false,"Type":["Mapped",{"Name":"Route","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The default wrapper style for components in the navigator."],["SummaryLine","A common use case is to set the backgroundColor for every page"]],"Kind":"Regular","Index":null,"Name":"itemWrapperStyle","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Boolean value that indicates whether the interactive pop gesture is"],["SummaryLine","enabled. This is useful for enabling/disabling the back swipe navigation"],["SummaryLine","gesture."],["SummaryLine",""],["SummaryLine","If this prop is not provided, the default behavior is for the back swipe"],["SummaryLine","gesture to be enabled when the navigation bar is shown and disabled when"],["SummaryLine","the navigation bar is hidden. Once you've provided the"],["SummaryLine","`interactivePopGestureEnabled` prop, you can never restore the default"],["SummaryLine","behavior."]],"Kind":"Regular","Index":null,"Name":"interactivePopGestureEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A Boolean value that indicates whether the navigation bar is hidden"]],"Kind":"Regular","Index":null,"Name":"navigationBarHidden","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A Boolean value that indicates whether to hide the 1px hairline shadow"]],"Kind":"Regular","Index":null,"Name":"shadowHidden","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The color used for buttons in the navigation bar"]],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The text color of the navigation bar title"]],"Kind":"Regular","Index":null,"Name":"titleTextColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A Boolean value that indicates whether the navigation bar is translucent"]],"Kind":"Regular","Index":null,"Name":"translucent","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","NOT IN THE DOC BUT IN THE EXAMPLES"]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A navigator is an object of navigation functions that a view can call."],["SummaryLine","It is passed as a prop to any component rendered by NavigatorIOS."],["SummaryLine",""],["SummaryLine","Navigator functions are also available on the NavigatorIOS component:"]],"IsStatic":false,"IsClass":true,"Name":"NavigatorIOS","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"NavigatorIOSProps","FullName":""}]]}]],"Members":[["Property",{"Comments":[["SummaryLine","Navigate forward to a new route"]],"Kind":"Regular","Index":null,"Name":"push","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"route","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Route","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Go back one page"]],"Kind":"Regular","Index":null,"Name":"pop","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Go back N pages at once. When N=1, behavior matches pop()"]],"Kind":"Regular","Index":null,"Name":"popN","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"n","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Replace the route for the current page and immediately load the view for the new route"]],"Kind":"Regular","Index":null,"Name":"replace","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"route","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Route","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Replace the route/view for the previous page"]],"Kind":"Regular","Index":null,"Name":"replacePrevious","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"route","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Route","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Replaces the previous route/view and transitions back to it"]],"Kind":"Regular","Index":null,"Name":"replacePreviousAndPop","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"route","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Route","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Replaces the top item and popToTop"]],"Kind":"Regular","Index":null,"Name":"resetTo","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"route","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Route","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Go back to the item for a particular route object"]],"Kind":"Regular","IsStatic":false,"Name":"popToRoute","TypeParameters":[],"Params":[{"Comment":null,"Name":"route","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Route","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Go back to the top item"]],"Kind":"Regular","IsStatic":false,"Name":"popToTop","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A navigator is an object of navigation functions that a view can call."],["SummaryLine","It is passed as a prop to any component rendered by NavigatorIOS."],["SummaryLine",""],["SummaryLine","Navigator functions are also available on the NavigatorIOS component:"]],"IsStatic":true,"IsClass":true,"Name":"NavigatorIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"NavigatorIOS","FullName":"NavigatorIOS"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ActivityIndicatorProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Whether to show the indicator (true, the default) or hide it (false)."]],"Kind":"Regular","Index":null,"Name":"animating","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The foreground color of the spinner (default is gray)."]],"Kind":"Regular","Index":null,"Name":"color","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Whether the indicator should hide when not animating (true by default)."]],"Kind":"Regular","Index":null,"Name":"hidesWhenStopped","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Size of the indicator."],["SummaryLine","Small has a height of 20, large has a height of 36."],["SummaryLine",""],["SummaryLine","enum('small', 'large')"]],"Kind":"Regular","Index":null,"Name":"size","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Enum",{"Name":"StringEnum","Cases":[{"Name":"small","Type":"String","Value":"small"},{"Name":"large","Type":"String","Value":"large"}]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ActivityIndicatorComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ActivityIndicatorProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ActivityIndicatorComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ActivityIndicatorComponent","FullName":"ActivityIndicatorComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ActivityIndicator","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ActivityIndicatorBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ActivityIndicatorStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ActivityIndicator","FullName":"ActivityIndicator"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ActivityIndicatorIOSProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Whether to show the indicator (true, the default) or hide it (false)."]],"Kind":"Regular","Index":null,"Name":"animating","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The foreground color of the spinner (default is gray)."]],"Kind":"Regular","Index":null,"Name":"color","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Whether the indicator should hide when not animating (true by default)."]],"Kind":"Regular","Index":null,"Name":"hidesWhenStopped","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on mount and layout changes with"]],"Kind":"Regular","Index":null,"Name":"onLayout","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ActivityIndicatorIOSPropsOnLayout","FullName":"ActivityIndicatorIOSPropsOnLayout"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Size of the indicator."],["SummaryLine","Small has a height of 20, large has a height of 36."],["SummaryLine",""],["SummaryLine","enum('small', 'large')"]],"Kind":"Regular","Index":null,"Name":"size","Option":true,"Type":["Mapped",{"Name":"ActivityIndicatorIOSPropsSize","FullName":"ActivityIndicatorIOSPropsSize"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ActivityIndicatorIOS","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ActivityIndicatorIOSProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ActivityIndicatorIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ActivityIndicatorIOS","FullName":"ActivityIndicatorIOS"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DatePickerIOSProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","The currently selected date."]],"Kind":"Regular","Index":null,"Name":"date","Option":false,"Type":["Mapped",{"Name":"DateTime","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The date picker locale."]],"Kind":"Regular","Index":null,"Name":"locale","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Maximum date."],["SummaryLine","Restricts the range of possible date/time values."]],"Kind":"Regular","Index":null,"Name":"maximumDate","Option":true,"Type":["Mapped",{"Name":"DateTime","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Maximum date."],["SummaryLine","Restricts the range of possible date/time values."]],"Kind":"Regular","Index":null,"Name":"minimumDate","Option":true,"Type":["Mapped",{"Name":"DateTime","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","enum(1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30)"],["SummaryLine","The interval at which minutes can be selected."]],"Kind":"Regular","Index":null,"Name":"minuteInterval","Option":true,"Type":["Mapped",{"Name":"DatePickerIOSPropsMinuteInterval","FullName":"DatePickerIOSPropsMinuteInterval"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","enum('date', 'time', 'datetime')"],["SummaryLine","The date picker mode."]],"Kind":"Regular","Index":null,"Name":"mode","Option":true,"Type":["Mapped",{"Name":"DatePickerIOSPropsMode","FullName":"DatePickerIOSPropsMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Date change handler."],["SummaryLine","This is called when the user changes the date or time in the UI."],["SummaryLine","The first and only argument is a Date object representing the new date and time."]],"Kind":"Regular","Index":null,"Name":"onDateChange","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"newDate","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DateTime","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Timezone offset in minutes."],["SummaryLine","By default, the date picker will use the device's timezone. With this parameter, it is possible to force a certain timezone offset."],["SummaryLine","For instance, to show times in Pacific Standard Time, pass -7 * 60."]],"Kind":"Regular","Index":null,"Name":"timeZoneOffsetInMinutes","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"DatePickerIOSComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"DatePickerIOSProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"DatePickerIOSComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"DatePickerIOSComponent","FullName":"DatePickerIOSComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"DatePickerIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"DatePickerIOSBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"DatePickerIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"DatePickerIOS","FullName":"DatePickerIOS"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DrawerSlideEvent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":"\"node_modules/@types/react-native/index\".NativeSyntheticEvent"}],"TypeParameters":[["Mapped",{"Name":"NativeTouchEvent","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DrawerLayoutAndroidProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Specifies the background color of the drawer. The default value"],["SummaryLine","is white. If you want to set the opacity of the drawer, use rgba."],["SummaryLine","Example:"],["SummaryLine","return ("],["SummaryLine","   <DrawerLayoutAndroid drawerBackgroundColor=\"rgba(0,0,0,0.5)\">"],["SummaryLine","   </DrawerLayoutAndroid>"],["SummaryLine",");"]],"Kind":"Regular","Index":null,"Name":"drawerBackgroundColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Specifies the lock mode of the drawer. The drawer can be locked"],["SummaryLine","in 3 states:"],["SummaryLine",""],["SummaryLine","- unlocked (default), meaning that the drawer will respond"],["SummaryLine","   (open/close) to touch gestures."],["SummaryLine",""],["SummaryLine","- locked-closed, meaning that the drawer will stay closed and not"],["SummaryLine","   respond to gestures."],["SummaryLine",""],["SummaryLine","- locked-open, meaning that the drawer will stay opened and"],["SummaryLine","   not respond to gestures. The drawer may still be opened and"],["SummaryLine","   closed programmatically (openDrawer/closeDrawer)."]],"Kind":"Regular","Index":null,"Name":"drawerLockMode","Option":true,"Type":["Mapped",{"Name":"DrawerLayoutAndroidPropsDrawerLockMode","FullName":"DrawerLayoutAndroidPropsDrawerLockMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Specifies the side of the screen from which the drawer will slide in."],["SummaryLine","enum(DrawerLayoutAndroid.positions.Left, DrawerLayoutAndroid.positions.Right)"]],"Kind":"Regular","Index":null,"Name":"drawerPosition","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Specifies the width of the drawer, more precisely the width of the"],["SummaryLine","view that be pulled in from the edge of the window."]],"Kind":"Regular","Index":null,"Name":"drawerWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines whether the keyboard gets dismissed in response to a drag."],["SummaryLine","- 'none' (the default), drags do not dismiss the keyboard."],["SummaryLine","- 'on-drag', the keyboard is dismissed when a drag begins."]],"Kind":"Regular","Index":null,"Name":"keyboardDismissMode","Option":true,"Type":["Mapped",{"Name":"ViewPagerAndroidPropsKeyboardDismissMode","FullName":"ViewPagerAndroidPropsKeyboardDismissMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Function called whenever the navigation view has been closed."]],"Kind":"Regular","Index":null,"Name":"onDrawerClose","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Function called whenever the navigation view has been opened."]],"Kind":"Regular","Index":null,"Name":"onDrawerOpen","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Function called whenever there is an interaction with the navigation view."]],"Kind":"Regular","Index":null,"Name":"onDrawerSlide","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DrawerSlideEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Function called when the drawer state has changed."],["SummaryLine","The drawer can be in 3 states:"],["SummaryLine","- idle, meaning there is no interaction with the navigation"],["SummaryLine","   view happening at the time"],["SummaryLine","- dragging, meaning there is currently an interaction with the"],["SummaryLine","   navigation view"],["SummaryLine","- settling, meaning that there was an interaction with the"],["SummaryLine","   navigation view, and the navigation view is now finishing"],["SummaryLine","   it's closing or opening animation"]],"Kind":"Regular","Index":null,"Name":"onDrawerStateChanged","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ViewPagerAndroidPropsOnPageScrollStateChanged","FullName":"ViewPagerAndroidPropsOnPageScrollStateChanged"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The navigation view that will be rendered to the side of the"],["SummaryLine","screen and can be pulled in."]],"Kind":"Regular","Index":null,"Name":"renderNavigationView","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Make the drawer take the entire screen and draw the background of"],["SummaryLine","the status bar to allow it to open over the status bar. It will"],["SummaryLine","only have an effect on API 21+."]],"Kind":"Regular","Index":null,"Name":"statusBarBackgroundColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DrawerPosition","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Left","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Right","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"DrawerLayoutAndroidComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"DrawerLayoutAndroidProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"DrawerLayoutAndroidComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"DrawerLayoutAndroidComponent","FullName":"DrawerLayoutAndroidComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"DrawerLayoutAndroid","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"DrawerLayoutAndroidBase","FullName":"error"}]],"Members":[["Property",{"Comments":[["SummaryLine","drawer's positions."]],"Kind":"Regular","Index":null,"Name":"positions","Option":false,"Type":["Mapped",{"Name":"DrawerPosition","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Opens the drawer."]],"Kind":"Regular","IsStatic":false,"Name":"openDrawer","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Closes the drawer."]],"Kind":"Regular","IsStatic":false,"Name":"closeDrawer","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"DrawerLayoutAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"DrawerLayoutAndroid","FullName":"DrawerLayoutAndroid"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PickerIOSItemProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"value","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"label","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"PickerIOSItem","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"PickerIOSItemProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"PickerIOSItemStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"PickerIOSItem","FullName":"PickerIOSItem"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PickerItemProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"color","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"label","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"value","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"PickerItem","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"PickerItemProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"PickerItemStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"PickerItem","FullName":"PickerItem"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PickerPropsIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Style to apply to each of the item labels."]],"Kind":"Regular","Index":null,"Name":"itemStyle","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PickerPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","If set to false, the picker will be disabled, i.e. the user will not be able to make a"],["SummaryLine","selection."]],"Kind":"Regular","Index":null,"Name":"enabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","On Android, specifies how to display the selection items when the user taps on the picker:"],["SummaryLine",""],["SummaryLine","   - 'dialog': Show a modal dialog. This is the default."],["SummaryLine","   - 'dropdown': Shows a dropdown anchored to the picker view"]],"Kind":"Regular","Index":null,"Name":"mode","Option":true,"Type":["Mapped",{"Name":"PickerPropsAndroidMode","FullName":"PickerPropsAndroidMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Prompt string for this picker, used on Android in dialog mode as the title of the dialog."]],"Kind":"Regular","Index":null,"Name":"prompt","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PickerProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"PickerPropsIOS","FullName":"\"node_modules/@types/react-native/index\".PickerPropsIOS"}],["Mapped",{"Name":"PickerPropsAndroid","FullName":"\"node_modules/@types/react-native/index\".PickerPropsAndroid"}]],"Members":[["Property",{"Comments":[["SummaryLine","Callback for when an item is selected. This is called with the"],["SummaryLine","following parameters:"],["SummaryLine","- itemValue: the value prop of the item that was selected"],["SummaryLine","- itemPosition: the index of the selected item in this picker"]],"Kind":"Regular","Index":null,"Name":"onValueChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"itemValue","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"itemPosition","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Value matching value of one of the items."],["SummaryLine","Can be a string or an integer."]],"Kind":"Regular","Index":null,"Name":"selectedValue","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this view in end-to-end tests."]],"Kind":"Regular","Index":null,"Name":"testId","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Picker","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"PickerProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"PickerStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Picker","FullName":"Picker"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[["SummaryLine","On Android, display the options in a dialog."]],"Kind":"Regular","Index":null,"Name":"MODE_DIALOG","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","On Android, display the options in a dropdown (this is the default)."]],"Kind":"Regular","Index":null,"Name":"MODE_DROPDOWN","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Item","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PickerIOSProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"itemStyle","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onValueChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"selectedValue","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"PickerIOSComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"PickerIOSProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"PickerIOSComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"PickerIOSComponent","FullName":"PickerIOSComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"PickerIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"PickerIOSBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"PickerIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"PickerIOS","FullName":"PickerIOS"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Item","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ProgressBarAndroidProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Style of the ProgressBar. One of:"],["SummaryLine","   Horizontal"],["SummaryLine","   Normal (default)"],["SummaryLine","   Small"],["SummaryLine","   Large"],["SummaryLine","   Inverse"],["SummaryLine","   SmallInverse"],["SummaryLine","   LargeInverse"]],"Kind":"Regular","Index":null,"Name":"styleAttr","Option":true,"Type":["Mapped",{"Name":"ProgressBarAndroidPropsStyleAttr","FullName":"ProgressBarAndroidPropsStyleAttr"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If the progress bar will show indeterminate progress."],["SummaryLine","Note that this can only be false if styleAttr is Horizontal."]],"Kind":"Regular","Index":null,"Name":"indeterminate","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The progress value (between 0 and 1)."]],"Kind":"Regular","Index":null,"Name":"progress","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Color of the progress bar."]],"Kind":"Regular","Index":null,"Name":"color","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this view in end-to-end tests."]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","React component that wraps the Android-only `ProgressBar`. This component is used to indicate"],["SummaryLine","that the app is loading or there is some activity in the app."]],"IsStatic":false,"IsClass":true,"Name":"ProgressBarAndroidComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ProgressBarAndroidProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","React component that wraps the Android-only `ProgressBar`. This component is used to indicate"],["SummaryLine","that the app is loading or there is some activity in the app."]],"IsStatic":true,"IsClass":true,"Name":"ProgressBarAndroidComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ProgressBarAndroidComponent","FullName":"ProgressBarAndroidComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ProgressBarAndroid","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ProgressBarAndroidBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ProgressBarAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ProgressBarAndroid","FullName":"ProgressBarAndroid"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ProgressViewIOSProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","The progress bar style."]],"Kind":"Regular","Index":null,"Name":"progressViewStyle","Option":true,"Type":["Mapped",{"Name":"ProgressViewIOSPropsProgressViewStyle","FullName":"ProgressViewIOSPropsProgressViewStyle"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The progress value (between 0 and 1)."]],"Kind":"Regular","Index":null,"Name":"progress","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The tint color of the progress bar itself."]],"Kind":"Regular","Index":null,"Name":"progressTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The tint color of the progress bar track."]],"Kind":"Regular","Index":null,"Name":"trackTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A stretchable image to display as the progress bar."]],"Kind":"Regular","Index":null,"Name":"progressImage","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ImageURISource","FullName":""}],["Array",["Mapped",{"Name":"ImageURISource","FullName":""}]]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A stretchable image to display behind the progress bar."]],"Kind":"Regular","Index":null,"Name":"trackImage","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ImageURISource","FullName":""}],["Array",["Mapped",{"Name":"ImageURISource","FullName":""}]]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ProgressViewIOSComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ProgressViewIOSProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ProgressViewIOSComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ProgressViewIOSComponent","FullName":"ProgressViewIOSComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ProgressViewIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ProgressViewIOSBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ProgressViewIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ProgressViewIOS","FullName":"ProgressViewIOS"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RefreshControlPropsIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","The color of the refresh indicator."]],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The title displayed under the refresh indicator."]],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Title color."]],"Kind":"Regular","Index":null,"Name":"titleColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RefreshControlPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","The colors (at least one) that will be used to draw the refresh indicator."]],"Kind":"Regular","Index":null,"Name":"colors","Option":true,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Whether the pull to refresh functionality is enabled."]],"Kind":"Regular","Index":null,"Name":"enabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The background color of the refresh indicator."]],"Kind":"Regular","Index":null,"Name":"progressBackgroundColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Size of the refresh indicator, see RefreshControl.SIZE."]],"Kind":"Regular","Index":null,"Name":"size","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Progress view top offset"]],"Kind":"Regular","Index":null,"Name":"progressViewOffset","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RefreshControlProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"RefreshControlPropsIOS","FullName":"\"node_modules/@types/react-native/index\".RefreshControlPropsIOS"}],["Mapped",{"Name":"RefreshControlPropsAndroid","FullName":"\"node_modules/@types/react-native/index\".RefreshControlPropsAndroid"}]],"Members":[["Property",{"Comments":[["SummaryLine","Called when the view starts refreshing."]],"Kind":"Regular","Index":null,"Name":"onRefresh","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Whether the view should be indicating an active refresh."]],"Kind":"Regular","Index":null,"Name":"refreshing","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","This component is used inside a ScrollView or ListView to add pull to refresh"],["SummaryLine","functionality. When the ScrollView is at `scrollY: 0`, swiping down"],["SummaryLine","triggers an `onRefresh` event."],["SummaryLine",""],["SummaryLine","__Note:__ `refreshing` is a controlled prop, this is why it needs to be set to true"],["SummaryLine","in the `onRefresh` function otherwise the refresh indicator will stop immediately."]],"IsStatic":false,"IsClass":true,"Name":"RefreshControlComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"RefreshControlProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","This component is used inside a ScrollView or ListView to add pull to refresh"],["SummaryLine","functionality. When the ScrollView is at `scrollY: 0`, swiping down"],["SummaryLine","triggers an `onRefresh` event."],["SummaryLine",""],["SummaryLine","__Note:__ `refreshing` is a controlled prop, this is why it needs to be set to true"],["SummaryLine","in the `onRefresh` function otherwise the refresh indicator will stop immediately."]],"IsStatic":true,"IsClass":true,"Name":"RefreshControlComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"RefreshControlComponent","FullName":"RefreshControlComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"RefreshControl","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"RefreshControlBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"RefreshControlStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"RefreshControl","FullName":"RefreshControl"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SIZE","Option":false,"Type":["Mapped",{"Name":"Object","FullName":""}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RecyclerViewBackedScrollViewProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ScrollViewProps","FullName":"\"node_modules/@types/react-native/index\".ScrollViewProps"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Wrapper around android native recycler view."],["SummaryLine",""],["SummaryLine","It simply renders rows passed as children in a separate recycler view cells"],["SummaryLine","similarly to how `ScrollView` is doing it. Thanks to the fact that it uses"],["SummaryLine","native `RecyclerView` though, rows that are out of sight are going to be"],["SummaryLine","automatically detached (similarly on how this would work with"],["SummaryLine","`removeClippedSubviews = true` on a `ScrollView.js`)."],["SummaryLine",""],["SummaryLine","CAUTION: This is an experimental component and should only be used together"],["SummaryLine","with javascript implementation of list view (see ListView.js). In order to"],["SummaryLine","use it pass this component as `renderScrollComponent` to the list view. For"],["SummaryLine","now only horizontal scrolling is supported."]],"IsStatic":false,"IsClass":true,"Name":"RecyclerViewBackedScrollViewComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"RecyclerViewBackedScrollViewProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Wrapper around android native recycler view."],["SummaryLine",""],["SummaryLine","It simply renders rows passed as children in a separate recycler view cells"],["SummaryLine","similarly to how `ScrollView` is doing it. Thanks to the fact that it uses"],["SummaryLine","native `RecyclerView` though, rows that are out of sight are going to be"],["SummaryLine","automatically detached (similarly on how this would work with"],["SummaryLine","`removeClippedSubviews = true` on a `ScrollView.js`)."],["SummaryLine",""],["SummaryLine","CAUTION: This is an experimental component and should only be used together"],["SummaryLine","with javascript implementation of list view (see ListView.js). In order to"],["SummaryLine","use it pass this component as `renderScrollComponent` to the list view. For"],["SummaryLine","now only horizontal scrolling is supported."]],"IsStatic":true,"IsClass":true,"Name":"RecyclerViewBackedScrollViewComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"RecyclerViewBackedScrollViewComponent","FullName":"RecyclerViewBackedScrollViewComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"RecyclerViewBackedScrollView","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"RecyclerViewBackedScrollViewBase","FullName":"error"}]],"Members":[["Function",{"Comments":[["SummaryLine","A helper function to scroll to a specific point  in the scrollview."],["SummaryLine","This is currently used to help focus on child textviews, but can also"],["SummaryLine","be used to quickly scroll to any element we want to focus. Syntax:"],["SummaryLine",""],["SummaryLine","scrollResponderScrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})"],["SummaryLine",""],["SummaryLine","Note: The weird argument signature is due to the fact that, for historical reasons,"],["SummaryLine","the function also accepts separate arguments as as alternative to the options object."],["SummaryLine","This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED."]],"Kind":"Regular","IsStatic":false,"Name":"scrollTo","TypeParameters":[],"Params":[{"Comment":null,"Name":"y","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"RecyclerViewBackedScrollViewScrollTo","FullName":"RecyclerViewBackedScrollViewScrollTo"}]]}]},{"Comment":null,"Name":"x","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"animated","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns a reference to the underlying scroll responder, which supports"],["SummaryLine","operations like `scrollTo`. All ScrollView-like components should"],["SummaryLine","implement this method so that they can be composed while providing access"],["SummaryLine","to the underlying scroll responder's methods."]],"Kind":"Regular","IsStatic":false,"Name":"getScrollResponder","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"RecyclerViewBackedScrollViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"RecyclerViewBackedScrollView","FullName":"RecyclerViewBackedScrollView"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SliderPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Color of the foreground switch grip."]],"Kind":"Regular","Index":null,"Name":"thumbTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SliderPropsIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Assigns a maximum track image. Only static images are supported."],["SummaryLine","The leftmost pixel of the image will be stretched to fill the track."]],"Kind":"Regular","Index":null,"Name":"maximumTrackImage","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Assigns a minimum track image. Only static images are supported."],["SummaryLine","The rightmost pixel of the image will be stretched to fill the track."]],"Kind":"Regular","Index":null,"Name":"minimumTrackImage","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Sets an image for the thumb. Only static images are supported."]],"Kind":"Regular","Index":null,"Name":"thumbImage","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Assigns a single image for the track. Only static images"],["SummaryLine","are supported. The center pixel of the image will be stretched"],["SummaryLine","to fill the track."]],"Kind":"Regular","Index":null,"Name":"trackImage","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SliderProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"SliderPropsIOS","FullName":"\"node_modules/@types/react-native/index\".SliderPropsIOS"}],["Mapped",{"Name":"SliderPropsAndroid","FullName":"\"node_modules/@types/react-native/index\".SliderPropsAndroid"}]],"Members":[["Property",{"Comments":[["SummaryLine","If true the user won't be able to move the slider."],["SummaryLine","Default value is false."]],"Kind":"Regular","Index":null,"Name":"disabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The color used for the track to the right of the button."],["SummaryLine","Overrides the default blue gradient image."]],"Kind":"Regular","Index":null,"Name":"maximumTrackTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Initial maximum value of the slider. Default value is 1."]],"Kind":"Regular","Index":null,"Name":"maximumValue","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The color used for the track to the left of the button."],["SummaryLine","Overrides the default blue gradient image."]],"Kind":"Regular","Index":null,"Name":"minimumTrackTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Initial minimum value of the slider. Default value is 0."]],"Kind":"Regular","Index":null,"Name":"minimumValue","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback called when the user finishes changing the value (e.g. when the slider is released)."]],"Kind":"Regular","Index":null,"Name":"onSlidingComplete","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback continuously called while the user is dragging the slider."]],"Kind":"Regular","Index":null,"Name":"onValueChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Step value of the slider. The value should be between 0 and (maximumValue - minimumValue). Default value is 0."]],"Kind":"Regular","Index":null,"Name":"step","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to style and layout the Slider. See StyleSheet.js and ViewStylePropTypes.js for more info."]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this view in UI automation tests."]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Initial value of the slider. The value should be between minimumValue"],["SummaryLine","and maximumValue, which default to 0 and 1 respectively."],["SummaryLine","Default value is 0."],["SummaryLine","This is not a controlled component, you don't need to update"],["SummaryLine","the value during dragging."]],"Kind":"Regular","Index":null,"Name":"value","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A component used to select a single value from a range of values."]],"IsStatic":false,"IsClass":true,"Name":"SliderComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"SliderProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A component used to select a single value from a range of values."]],"IsStatic":true,"IsClass":true,"Name":"SliderComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SliderComponent","FullName":"SliderComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Slider","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"SliderBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"SliderStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Slider","FullName":"Slider"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"SliderIOS","Type":["Mapped",{"Name":"Slider","FullName":""}],"TypeParameters":[]}],["Interface",{"Comments":[["SummaryLine","https://facebook.github.io/react-native/docs/switchios.html#props"]],"IsStatic":false,"IsClass":false,"Name":"SwitchIOSProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","If true the user won't be able to toggle the switch. Default value is false."]],"Kind":"Regular","Index":null,"Name":"disabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Background color when the switch is turned on."]],"Kind":"Regular","Index":null,"Name":"onTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called when the user toggles the switch."]],"Kind":"Regular","Index":null,"Name":"onValueChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Background color for the switch round button."]],"Kind":"Regular","Index":null,"Name":"thumbTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Background color when the switch is turned off."]],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The value of the switch, if true the switch will be turned on. Default value is false."]],"Kind":"Regular","Index":null,"Name":"value","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Use SwitchIOS to render a boolean input on iOS."],["SummaryLine",""],["SummaryLine","This is a controlled component, so you must hook in to the onValueChange callback and update the value prop in order for the component to update,"],["SummaryLine","otherwise the user's change will be reverted immediately to reflect props.value as the source of truth."]],"IsStatic":false,"IsClass":true,"Name":"SwitchIOS","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"SwitchIOSProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Use SwitchIOS to render a boolean input on iOS."],["SummaryLine",""],["SummaryLine","This is a controlled component, so you must hook in to the onValueChange callback and update the value prop in order for the component to update,"],["SummaryLine","otherwise the user's change will be reverted immediately to reflect props.value as the source of truth."]],"IsStatic":true,"IsClass":true,"Name":"SwitchIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SwitchIOS","FullName":"SwitchIOS"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageResizeMode","FullName":"ImageResizeMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"cover","Type":"String","Value":"cover"},{"Name":"contain","Type":"String","Value":"contain"},{"Name":"stretch","Type":"String","Value":"stretch"},{"Name":"repeat","Type":"String","Value":"repeat"},{"Name":"center","Type":"String","Value":"center"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageResizeModeStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","contain - The image will be resized such that it will be completely"],["SummaryLine","visible, contained within the frame of the View."]],"Kind":"Regular","Index":null,"Name":"contain","Option":false,"Type":["Mapped",{"Name":"ImageResizeMode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","cover - The image will be resized such that the entire area of the view"],["SummaryLine","is covered by the image, potentially clipping parts of the image."]],"Kind":"Regular","Index":null,"Name":"cover","Option":false,"Type":["Mapped",{"Name":"ImageResizeMode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","stretch - The image will be stretched to fill the entire frame of the"],["SummaryLine","view without clipping.  This may change the aspect ratio of the image,"],["SummaryLine","distoring it.  Only supported on iOS."]],"Kind":"Regular","Index":null,"Name":"stretch","Option":false,"Type":["Mapped",{"Name":"ImageResizeMode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","center - The image will be scaled down such that it is completely visible,"],["SummaryLine","if bigger than the area of the view."],["SummaryLine","The image will not be scaled up."]],"Kind":"Regular","Index":null,"Name":"center","Option":false,"Type":["Mapped",{"Name":"ImageResizeMode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","repeat - The image will be repeated to cover the frame of the View. The"],["SummaryLine","image will keep it's size and aspect ratio."]],"Kind":"Regular","Index":null,"Name":"repeat","Option":false,"Type":["Mapped",{"Name":"ImageResizeMode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ShadowStyleIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"shadowColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"shadowOffset","Option":true,"Type":["Mapped",{"Name":"ShadowPropTypesIOSStaticShadowOffset","FullName":"ShadowPropTypesIOSStaticShadowOffset"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"shadowOpacity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"shadowRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Image style"]],"IsStatic":false,"IsClass":false,"Name":"ImageStyle","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"FlexStyle","FullName":"\"node_modules/@types/react-native/index\".FlexStyle"}],["Mapped",{"Name":"ShadowStyleIOS","FullName":"\"node_modules/@types/react-native/index\".ShadowStyleIOS"}],["Mapped",{"Name":"TransformsStyle","FullName":"\"node_modules/@types/react-native/index\".TransformsStyle"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"resizeMode","Option":true,"Type":["Mapped",{"Name":"ImageResizeMode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"backfaceVisibility","Option":true,"Type":["Mapped",{"Name":"ViewStyleBackfaceVisibility","FullName":"ViewStyleBackfaceVisibility"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomLeftRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomRightRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"backgroundColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopLeftRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopRightRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"overflow","Option":true,"Type":["Mapped",{"Name":"ViewStyleBackfaceVisibility","FullName":"ViewStyleBackfaceVisibility"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"overlayColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"opacity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageURISource","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","`uri` is a string representing the resource identifier for the image, which"],["SummaryLine","could be an http address, a local file path, or the name of a static image"],["SummaryLine","resource (which should be wrapped in the `require('./path/to/image.png')`"],["SummaryLine","function)."]],"Kind":"Regular","Index":null,"Name":"uri","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`bundle` is the iOS asset bundle which the image is included in. This"],["SummaryLine","will default to [NSBundle mainBundle] if not set."]],"Kind":"Regular","Index":null,"Name":"bundle","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`method` is the HTTP Method to use. Defaults to GET if not specified."]],"Kind":"Regular","Index":null,"Name":"``method``","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`headers` is an object representing the HTTP headers to send along with the"],["SummaryLine","request for a remote image."]],"Kind":"Regular","Index":null,"Name":"headers","Option":true,"Type":["Mapped",{"Name":"ImageURISourceHeaders","FullName":"ImageURISourceHeaders"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`cache` determines how the requests handles potentially cached"],["SummaryLine","responses."],["SummaryLine",""],["SummaryLine","- `default`: Use the native platforms default strategy. `useProtocolCachePolicy` on iOS."],["SummaryLine",""],["SummaryLine","- `reload`: The data for the URL will be loaded from the originating source."],["SummaryLine","No existing cache data should be used to satisfy a URL load request."],["SummaryLine",""],["SummaryLine","- `force-cache`: The existing cached data will be used to satisfy the request,"],["SummaryLine","regardless of its age or expiration date. If there is no existing data in the cache"],["SummaryLine","corresponding the request, the data is loaded from the originating source."],["SummaryLine",""],["SummaryLine","- `only-if-cached`: The existing cache data will be used to satisfy a request, regardless of"],["SummaryLine","its age or expiration date. If there is no existing data in the cache corresponding"],["SummaryLine","to a URL load request, no attempt is made to load the data from the originating source,"],["SummaryLine","and the load is considered to have failed."]],"Kind":"Regular","Index":null,"Name":"cache","Option":true,"Type":["Mapped",{"Name":"ImageURISourceCache","FullName":"ImageURISourceCache"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`body` is the HTTP body to send with the request. This must be a valid"],["SummaryLine","UTF-8 string, and will be sent exactly as specified, with no"],["SummaryLine","additional encoding (e.g. URL-escaping or base64) applied."]],"Kind":"Regular","Index":null,"Name":"body","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`width` and `height` can be specified if known at build time, in which case"],["SummaryLine","these will be used to set the default `<Image/>` component dimensions."]],"Kind":"Regular","Index":null,"Name":"width","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`scale` is used to indicate the scale factor of the image. Defaults to 1.0 if"],["SummaryLine","unspecified, meaning that one image pixel equates to one display point / DIP."]],"Kind":"Regular","Index":null,"Name":"scale","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"ImageRequireSource","Type":["Mapped",{"Name":"float","FullName":"float"}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageProgressEventDataIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"loaded","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"total","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImagePropsIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","blurRadius: the blur radius of the blur filter added to the image"]],"Kind":"Regular","Index":null,"Name":"blurRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When the image is resized, the corners of the size specified by capInsets will stay a fixed size,"],["SummaryLine","but the center content and borders of the image will be stretched."],["SummaryLine","This is useful for creating resizable rounded buttons, shadows, and other resizable assets."],["SummaryLine","More info on Apple documentation"]],"Kind":"Regular","Index":null,"Name":"capInsets","Option":true,"Type":["Mapped",{"Name":"Insets","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on download progress with {nativeEvent: {loaded, total}}"]],"Kind":"Regular","Index":null,"Name":"onProgress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ImageProgressEventDataIOS","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked when a partial load of the image is complete. The definition of"],["SummaryLine","what constitutes a \"partial load\" is loader specific though this is meant"],["SummaryLine","for progressive JPEG loads."]],"Kind":"Regular","Index":null,"Name":"onPartialLoad","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImagePropsAndroid","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","The mechanism that should be used to resize the image when the image's dimensions"],["SummaryLine","differ from the image view's dimensions. Defaults to auto."],["SummaryLine",""],["SummaryLine","'auto': Use heuristics to pick between resize and scale."],["SummaryLine",""],["SummaryLine","'resize': A software operation which changes the encoded image in memory before it gets decoded."],["SummaryLine","This should be used instead of scale when the image is much larger than the view."],["SummaryLine",""],["SummaryLine","'scale': The image gets drawn downscaled or upscaled. Compared to resize, scale is faster (usually hardware accelerated)"],["SummaryLine","and produces higher quality images. This should be used if the image is smaller than the view."],["SummaryLine","It should also be used if the image is slightly bigger than the view."]],"Kind":"Regular","Index":null,"Name":"resizeMethod","Option":true,"Type":["Mapped",{"Name":"ImagePropsAndroidResizeMethod","FullName":"ImagePropsAndroidResizeMethod"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Duration of fade in animation."]],"Kind":"Regular","Index":null,"Name":"fadeDuration","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"ImageSourcePropType","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ImageURISource","FullName":""}],["Array",["Mapped",{"Name":"ImageURISource","FullName":""}]],["Mapped",{"Name":"ImageRequireSource","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageLoadEventDataAndroid","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"uri","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageLoadEventData","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ImageLoadEventDataAndroid","FullName":"\"node_modules/@types/react-native/index\".ImageLoadEventDataAndroid"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"source","Option":false,"Type":["Mapped",{"Name":"ImageLoadEventDataSource","FullName":"ImageLoadEventDataSource"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageErrorEventData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"error","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageResolvedAssetSource","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scale","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"uri","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImagePropsBase","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ImagePropsIOS","FullName":"\"node_modules/@types/react-native/index\".ImagePropsIOS"}],["Mapped",{"Name":"ImagePropsAndroid","FullName":"\"node_modules/@types/react-native/index\".ImagePropsAndroid"}],["Mapped",{"Name":"AccessibilityProps","FullName":"\"node_modules/@types/react-native/index\".AccessibilityProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","onLayout function"],["SummaryLine",""],["SummaryLine","Invoked on mount and layout changes with"],["SummaryLine",""],["SummaryLine","{nativeEvent: { layout: {x, y, width, height} }}."]],"Kind":"Regular","Index":null,"Name":"onLayout","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutChangeEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on load error with {nativeEvent: {error}}"]],"Kind":"Regular","Index":null,"Name":"onError","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ImageErrorEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked when load completes successfully"],["SummaryLine","{ source: { url, height, width } }."]],"Kind":"Regular","Index":null,"Name":"onLoad","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ImageLoadEventData","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked when load either succeeds or fails"]],"Kind":"Regular","Index":null,"Name":"onLoadEnd","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on load start"]],"Kind":"Regular","Index":null,"Name":"onLoadStart","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"progressiveRenderingEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopLeftRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderTopRightRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomLeftRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderBottomRightRadius","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines how to resize the image when the frame doesn't match the raw"],["SummaryLine","image dimensions."],["SummaryLine",""],["SummaryLine","'cover': Scale the image uniformly (maintain the image's aspect ratio)"],["SummaryLine","so that both dimensions (width and height) of the image will be equal"],["SummaryLine","to or larger than the corresponding dimension of the view (minus padding)."],["SummaryLine",""],["SummaryLine","'contain': Scale the image uniformly (maintain the image's aspect ratio)"],["SummaryLine","so that both dimensions (width and height) of the image will be equal to"],["SummaryLine","or less than the corresponding dimension of the view (minus padding)."],["SummaryLine",""],["SummaryLine","'stretch': Scale width and height independently, This may change the"],["SummaryLine","aspect ratio of the src."],["SummaryLine",""],["SummaryLine","'repeat': Repeat the image to cover the frame of the view."],["SummaryLine","The image will keep it's size and aspect ratio. (iOS only)"],["SummaryLine",""],["SummaryLine","'center': Scale the image down so that it is completely visible,"],["SummaryLine","if bigger than the area of the view."],["SummaryLine","The image will not be scaled up."]],"Kind":"Regular","Index":null,"Name":"resizeMode","Option":true,"Type":["Mapped",{"Name":"ImageResizeMode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The mechanism that should be used to resize the image when the image's dimensions"],["SummaryLine","differ from the image view's dimensions. Defaults to `auto`."],["SummaryLine",""],["SummaryLine","- `auto`: Use heuristics to pick between `resize` and `scale`."],["SummaryLine",""],["SummaryLine","- `resize`: A software operation which changes the encoded image in memory before it"],["SummaryLine","gets decoded. This should be used instead of `scale` when the image is much larger"],["SummaryLine","than the view."],["SummaryLine",""],["SummaryLine","- `scale`: The image gets drawn downscaled or upscaled. Compared to `resize`, `scale` is"],["SummaryLine","faster (usually hardware accelerated) and produces higher quality images. This"],["SummaryLine","should be used if the image is smaller than the view. It should also be used if the"],["SummaryLine","image is slightly bigger than the view."],["SummaryLine",""],["SummaryLine","More details about `resize` and `scale` can be found at http://frescolib.org/docs/resizing-rotating.html."]],"Kind":"Regular","Index":null,"Name":"resizeMethod","Option":true,"Type":["Mapped",{"Name":"ImagePropsAndroidResizeMethod","FullName":"ImagePropsAndroidResizeMethod"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The image source (either a remote URL or a local file resource)."],["SummaryLine",""],["SummaryLine","This prop can also contain several remote URLs, specified together with their width and height and potentially with scale/other URI arguments."],["SummaryLine","The native side will then choose the best uri to display based on the measured size of the image container."],["SummaryLine","A cache property can be added to control how networked request interacts with the local cache."],["SummaryLine",""],["SummaryLine","The currently supported formats are png, jpg, jpeg, bmp, gif, webp (Android only), psd (iOS only)."]],"Kind":"Regular","Index":null,"Name":"source","Option":false,"Type":["Mapped",{"Name":"ImageSourcePropType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","similarly to `source`, this property represents the resource used to render"],["SummaryLine","the loading indicator for the image, displayed until image is ready to be"],["SummaryLine","displayed, typically after when it got downloaded from network."]],"Kind":"Regular","Index":null,"Name":"loadingIndicatorSource","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A unique identifier for this element to be used in UI Automation testing scripts."]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A static image to display while downloading the final image off the network."]],"Kind":"Regular","Index":null,"Name":"defaultSource","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ImageURISource","FullName":""}],["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ImagePropsBase","FullName":"\"node_modules/@types/react-native/index\".ImagePropsBase"}]],"Members":[["Property",{"Comments":[["SummaryLine","Style"]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ImageStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ImageComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ImageProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ImageComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ImageComponent","FullName":"ImageComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Image","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ImageBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ImageStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Image","FullName":"Image"}],"TypeParameters":[]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":true,"Name":"getSize","TypeParameters":[],"Params":[{"Comment":null,"Name":"uri","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"success","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"width","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"height","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"failure","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":true,"Name":"prefetch","TypeParameters":[],"Params":[{"Comment":null,"Name":"url","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":true,"Name":"abortPrefetch","TypeParameters":[],"Params":[{"Comment":null,"Name":"requestId","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":true,"Name":"queryCache","TypeParameters":[],"Params":[{"Comment":null,"Name":"urls","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"Map","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"ImageStaticQueryCachePromiseMap","FullName":"ImageStaticQueryCachePromiseMap"}]]}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":true,"Name":"resolveAssetSource","TypeParameters":[],"Params":[{"Comment":null,"Name":"source","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ImageSourcePropType","FullName":""}]}],"ReturnType":["Mapped",{"Name":"ImageResolvedAssetSource","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageBackgroundProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ImagePropsBase","FullName":"\"node_modules/@types/react-native/index\".ImagePropsBase"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"imageStyle","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ImageStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"imageRef","TypeParameters":[],"Params":[{"Comment":null,"Name":"image","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Image","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ImageBackgroundComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ImageBackgroundProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ImageBackgroundComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ImageBackgroundComponent","FullName":"ImageBackgroundComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ImageBackground","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ImageBackgroundBase","FullName":"error"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"resizeMode","Option":false,"Type":["Mapped",{"Name":"ImageResizeMode","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getSize","TypeParameters":[],"Params":[{"Comment":null,"Name":"uri","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"success","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"width","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"height","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"failure","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"prefetch","TypeParameters":[],"Params":[{"Comment":null,"Name":"url","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"abortPrefetch","TypeParameters":[],"Params":[{"Comment":null,"Name":"requestId","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"queryCache","TypeParameters":[],"Params":[{"Comment":null,"Name":"urls","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"Map","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"ImageStaticQueryCachePromiseMap","FullName":"ImageStaticQueryCachePromiseMap"}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ImageBackgroundStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ImageBackground","FullName":"ImageBackground"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewToken","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"key","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"index","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"isViewable","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"section","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewabilityConfig","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Minimum amount of time (in milliseconds) that an item must be physically viewable before the"],["SummaryLine","viewability callback will be fired. A high number means that scrolling through content without"],["SummaryLine","stopping will not mark the content as viewable."]],"Kind":"Regular","Index":null,"Name":"minimumViewTime","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Percent of viewport that must be covered for a partially occluded item to count as"],["SummaryLine","\"viewable\", 0-100. Fully visible items are always considered viewable. A value of 0 means"],["SummaryLine","that a single pixel in the viewport makes the item viewable, and a value of 100 means that"],["SummaryLine","an item must be either entirely visible or cover the entire viewport to count as viewable."]],"Kind":"Regular","Index":null,"Name":"viewAreaCoveragePercentThreshold","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Similar to `viewAreaPercentThreshold`, but considers the percent of the item that is visible,"],["SummaryLine","rather than the fraction of the viewable area it covers."]],"Kind":"Regular","Index":null,"Name":"itemVisiblePercentThreshold","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Nothing is considered viewable until the user scrolls or `recordInteraction` is called after"],["SummaryLine","render."]],"Kind":"Regular","Index":null,"Name":"waitForInteraction","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewabilityConfigCallbackPair","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewabilityConfig","Option":false,"Type":["Mapped",{"Name":"ViewabilityConfig","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onViewableItemsChanged","Option":false,"Type":["Union",{"Option":true,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ViewabilityConfigCallbackPairOnViewableItemsChanged","FullName":"ViewabilityConfigCallbackPairOnViewableItemsChanged"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"ViewabilityConfigCallbackPairs","Type":["Array",["Mapped",{"Name":"ViewabilityConfigCallbackPair","FullName":""}]],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ListRenderItemInfo","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"item","Option":false,"Type":["Mapped",{"Name":"'ItemT","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"index","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"separators","Option":false,"Type":["Mapped",{"Name":"ListRenderItemInfoSeparators","FullName":"ListRenderItemInfoSeparators"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ListRenderItem","FullName":"ListRenderItem","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"ListRenderItemInfo","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlatListProps","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"VirtualizedListProps","FullName":"\"node_modules/@types/react-native/index\".VirtualizedListProps"}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]],"Members":[["Property",{"Comments":[["SummaryLine","Rendered in between each item, but not at the top or bottom"]],"Kind":"Regular","Index":null,"Name":"ItemSeparatorComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentType","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered when the list is empty."]],"Kind":"Regular","Index":null,"Name":"ListEmptyComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered at the very end of the list."]],"Kind":"Regular","Index":null,"Name":"ListFooterComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered at the very beginning of the list."]],"Kind":"Regular","Index":null,"Name":"ListHeaderComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Optional custom style for multi-item rows generated when numColumns > 1"]],"Kind":"Regular","Index":null,"Name":"columnWrapperStyle","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When false tapping outside of the focused text input when the keyboard"],["SummaryLine","is up dismisses the keyboard. When true the scroll view will not catch"],["SummaryLine","taps and the keyboard will not dismiss automatically. The default value"],["SummaryLine","is false."]],"Kind":"Regular","Index":null,"Name":"keyboardShouldPersistTaps","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}],["Enum",{"Name":"StringEnum","Cases":[{"Name":"always","Type":"String","Value":"always"},{"Name":"never","Type":"String","Value":"never"},{"Name":"handled","Type":"String","Value":"handled"}]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","For simplicity, data is just a plain array. If you want to use something else,"],["SummaryLine","like an immutable list, use the underlying VirtualizedList directly."]],"Kind":"Regular","Index":null,"Name":"data","Option":false,"Type":["Union",{"Option":true,"Types":[["Generic",{"Type":["Mapped",{"Name":"ReadonlyArray","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A marker property for telling the list to re-render (since it implements PureComponent)."],["SummaryLine","If any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,"],["SummaryLine","stick it here and treat it immutably."]],"Kind":"Regular","Index":null,"Name":"extraData","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`getItemLayout` is an optional optimization that lets us skip measurement of dynamic"],["SummaryLine","content if you know the height of items a priori. getItemLayout is the most efficient,"],["SummaryLine","and is easy to use if you have fixed height items, for example:"],["SummaryLine","```"],["SummaryLine","getItemLayout={(data, index) => ("],["SummaryLine","   {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}"],["SummaryLine",")}"],["SummaryLine","```"],["SummaryLine","Remember to include separator length (height or width) in your offset calculation if you specify"],["SummaryLine","`ItemSeparatorComponent`."]],"Kind":"Regular","Index":null,"Name":"getItemLayout","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]]}]},{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"FlatListPropsGetItemLayout","FullName":"FlatListPropsGetItemLayout"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, renders items next to each other horizontally instead of stacked vertically."]],"Kind":"Regular","Index":null,"Name":"horizontal","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","How many items to render in the initial batch"]],"Kind":"Regular","Index":null,"Name":"initialNumToRender","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Instead of starting at the top with the first item, start at initialScrollIndex"]],"Kind":"Regular","Index":null,"Name":"initialScrollIndex","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to extract a unique key for a given item at the specified index. Key is used for caching"],["SummaryLine","and as the react key to track item re-ordering. The default extractor checks `item.key`, then"],["SummaryLine","falls back to using the index, like React does."]],"Kind":"Regular","Index":null,"Name":"keyExtractor","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"item","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'ItemT","FullName":""}]},{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"legacyImplementation","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a `flexWrap` layout."],["SummaryLine","Items should all be the same height - masonry layouts are not supported."]],"Kind":"Regular","Index":null,"Name":"numColumns","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called once when the scroll position gets within onEndReachedThreshold of the rendered content."]],"Kind":"Regular","Index":null,"Name":"onEndReached","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FlatListPropsOnEndReached","FullName":"FlatListPropsOnEndReached"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","How far from the end (in units of visible length of the list) the bottom edge of the"],["SummaryLine","list must be from the end of the content to trigger the `onEndReached` callback."],["SummaryLine","Thus a value of 0.5 will trigger `onEndReached` when the end of the content is"],["SummaryLine","within half the visible length of the list."]],"Kind":"Regular","Index":null,"Name":"onEndReachedThreshold","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality."],["SummaryLine","Make sure to also set the refreshing prop correctly."]],"Kind":"Regular","Index":null,"Name":"onRefresh","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called when the viewability of rows changes, as defined by the `viewablePercentThreshold` prop."]],"Kind":"Regular","Index":null,"Name":"onViewableItemsChanged","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ViewabilityConfigCallbackPairOnViewableItemsChanged","FullName":"ViewabilityConfigCallbackPairOnViewableItemsChanged"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set this true while waiting for new data from a refresh."]],"Kind":"Regular","Index":null,"Name":"refreshing","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Takes an item from data and renders it into the list. Typical usage:"],["SummaryLine","```"],["SummaryLine","_renderItem = ({item}) => ("],["SummaryLine","   <TouchableOpacity onPress={() => this._onPress(item)}>"],["SummaryLine","     <Text>{item.title}</Text>"],["SummaryLine","   <TouchableOpacity/>"],["SummaryLine",");"],["SummaryLine","..."],["SummaryLine","<FlatList data={[{title: 'Title Text', key: 'item1'}]} renderItem={this._renderItem} />"],["SummaryLine","```"],["SummaryLine","Provides additional metadata like `index` if you need it."]],"Kind":"Regular","Index":null,"Name":"renderItem","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"ListRenderItem","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","See `ViewabilityHelper` for flow type and further documentation."]],"Kind":"Regular","Index":null,"Name":"viewabilityConfig","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Note: may have bugs (missing content) in some circumstances - use at your own risk."],["SummaryLine",""],["SummaryLine","This may improve scroll performance for large lists."]],"Kind":"Regular","Index":null,"Name":"removeClippedSubviews","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"FlatList","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"FlatListProps","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]]}]],"Members":[["Property",{"Comments":[["SummaryLine","Exports some data, e.g. for perf investigations or analytics."]],"Kind":"Regular","Index":null,"Name":"getMetrics","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"FlatListGetMetrics","FullName":"FlatListGetMetrics"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Scrolls to the end of the content. May be janky without `getItemLayout` prop."]],"Kind":"Regular","Index":null,"Name":"scrollToEnd","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``params``","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"FlatListScrollToEnd","FullName":"FlatListScrollToEnd"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Scrolls to the item at the specified index such that it is positioned in the viewable area"],["SummaryLine","such that viewPosition 0 places it at the top, 1 at the bottom, and 0.5 centered in the middle."],["SummaryLine","Cannot scroll to locations outside the render window without specifying the getItemLayout prop."]],"Kind":"Regular","Index":null,"Name":"scrollToIndex","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``params``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FlatListScrollToIndex","FullName":"FlatListScrollToIndex"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Requires linear scan through data - use `scrollToIndex` instead if possible."],["SummaryLine","May be janky without `getItemLayout` prop."]],"Kind":"Regular","Index":null,"Name":"scrollToItem","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``params``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"FlatListScrollToItem","FullName":"FlatListScrollToItem"}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Scroll to a specific content pixel offset, like a normal `ScrollView`."]],"Kind":"Regular","Index":null,"Name":"scrollToOffset","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``params``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FlatListScrollToOffset","FullName":"FlatListScrollToOffset"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Tells the list an interaction has occured, which should trigger viewability calculations,"],["SummaryLine","e.g. if waitForInteractions is true and the user has not scrolled. This is typically called"],["SummaryLine","by taps on items or by navigation actions."]],"Kind":"Regular","Index":null,"Name":"recordInteraction","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"FlatListStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"FlatList","FullName":"FlatList"}],"TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SectionBase","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"data","Option":false,"Type":["Array",["Mapped",{"Name":"'ItemT","FullName":""}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"key","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"renderItem","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"SectionListRenderItem","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ItemSeparatorComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"keyExtractor","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"item","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'ItemT","FullName":""}]},{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SectionListData","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"SectionBase","FullName":"\"node_modules/@types/react-native/index\".SectionBase"}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SectionListRenderItemInfo","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"ListRenderItemInfo","FullName":"\"node_modules/@types/react-native/index\".ListRenderItemInfo"}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"section","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"SectionListData","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SectionListRenderItem","FullName":"SectionListRenderItem","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"SectionListRenderItemInfo","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SectionListProps","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"VirtualizedListWithoutRenderItemProps","FullName":"\"node_modules/@types/react-native/index\".VirtualizedListWithoutRenderItemProps"}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]],"Members":[["Property",{"Comments":[["SummaryLine","Rendered in between adjacent Items within each section."]],"Kind":"Regular","Index":null,"Name":"ItemSeparatorComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentType","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered when the list is empty."]],"Kind":"Regular","Index":null,"Name":"ListEmptyComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered at the very end of the list."]],"Kind":"Regular","Index":null,"Name":"ListFooterComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered at the very beginning of the list."]],"Kind":"Regular","Index":null,"Name":"ListHeaderComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered in between each section."]],"Kind":"Regular","Index":null,"Name":"SectionSeparatorComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A marker property for telling the list to re-render (since it implements PureComponent)."],["SummaryLine","If any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,"],["SummaryLine","stick it here and treat it immutably."]],"Kind":"Regular","Index":null,"Name":"extraData","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`getItemLayout` is an optional optimization that lets us skip measurement of dynamic"],["SummaryLine","content if you know the height of items a priori. getItemLayout is the most efficient,"],["SummaryLine","and is easy to use if you have fixed height items, for example:"],["SummaryLine","```"],["SummaryLine","getItemLayout={(data, index) => ("],["SummaryLine","   {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}"],["SummaryLine",")}"],["SummaryLine","```"]],"Kind":"Regular","Index":null,"Name":"getItemLayout","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Array",["Generic",{"Type":["Mapped",{"Name":"SectionListData","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]]]}]},{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"FlatListPropsGetItemLayout","FullName":"FlatListPropsGetItemLayout"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","How many items to render in the initial batch"]],"Kind":"Regular","Index":null,"Name":"initialNumToRender","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Reverses the direction of scroll. Uses scale transforms of -1."]],"Kind":"Regular","Index":null,"Name":"inverted","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to extract a unique key for a given item at the specified index. Key is used for caching"],["SummaryLine","and as the react key to track item re-ordering. The default extractor checks `item.key`, then"],["SummaryLine","falls back to using the index, like React does."]],"Kind":"Regular","Index":null,"Name":"keyExtractor","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"item","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'ItemT","FullName":""}]},{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called once when the scroll position gets within onEndReachedThreshold of the rendered content."]],"Kind":"Regular","Index":null,"Name":"onEndReached","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FlatListPropsOnEndReached","FullName":"FlatListPropsOnEndReached"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","How far from the end (in units of visible length of the list) the bottom edge of the"],["SummaryLine","list must be from the end of the content to trigger the `onEndReached` callback."],["SummaryLine","Thus a value of 0.5 will trigger `onEndReached` when the end of the content is"],["SummaryLine","within half the visible length of the list."]],"Kind":"Regular","Index":null,"Name":"onEndReachedThreshold","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality."],["SummaryLine","Make sure to also set the refreshing prop correctly."]],"Kind":"Regular","Index":null,"Name":"onRefresh","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to handle failures when scrolling to an index that has not been measured yet."],["SummaryLine","Recommended action is to either compute your own offset and `scrollTo` it, or scroll as far"],["SummaryLine","as possible and then try again after more items have been rendered."]],"Kind":"Regular","Index":null,"Name":"onScrollToIndexFailed","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SectionListPropsOnScrollToIndexFailed","FullName":"SectionListPropsOnScrollToIndexFailed"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set this true while waiting for new data from a refresh."]],"Kind":"Regular","Index":null,"Name":"refreshing","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Default renderer for every item in every section. Can be over-ridden on a per-section basis."]],"Kind":"Regular","Index":null,"Name":"renderItem","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"SectionListRenderItem","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered at the top of each section. Sticky headers are not yet supported."]],"Kind":"Regular","Index":null,"Name":"renderSectionHeader","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"SectionListPropsRenderSectionHeader","FullName":"SectionListPropsRenderSectionHeader"}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered at the bottom of each section."]],"Kind":"Regular","Index":null,"Name":"renderSectionFooter","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"SectionListPropsRenderSectionHeader","FullName":"SectionListPropsRenderSectionHeader"}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","An array of objects with data for each section."]],"Kind":"Regular","Index":null,"Name":"sections","Option":false,"Type":["Array",["Generic",{"Type":["Mapped",{"Name":"SectionListData","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Render a custom scroll component, e.g. with a differently styled `RefreshControl`."]],"Kind":"Regular","Index":null,"Name":"renderScrollComponent","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollViewProps","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ScrollViewProps","FullName":""}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Note: may have bugs (missing content) in some circumstances - use at your own risk."],["SummaryLine",""],["SummaryLine","This may improve scroll performance for large lists."]],"Kind":"Regular","Index":null,"Name":"removeClippedSubviews","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Makes section headers stick to the top of the screen until the next one pushes it off."],["SummaryLine","Only enabled by default on iOS because that is the platform standard there."]],"Kind":"Regular","Index":null,"Name":"stickySectionHeadersEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SectionListScrollParams","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"itemIndex","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"sectionIndex","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewOffset","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewPosition","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SectionListStatic","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'SectionT"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":"error"}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"SectionListProps","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'SectionT","FullName":""}]]}]]}]],"Members":[["Function",{"Comments":[["SummaryLine","Scrolls to the item at the specified sectionIndex and itemIndex (within the section)"],["SummaryLine","positioned in the viewable area such that viewPosition 0 places it at the top"],["SummaryLine","(and may be covered by a sticky header), 1 at the bottom, and 0.5 centered in the middle."]],"Kind":"Regular","IsStatic":false,"Name":"scrollToLocation","TypeParameters":[],"Params":[{"Comment":null,"Name":"``params``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SectionListScrollParams","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VirtualizedListProps","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"VirtualizedListWithoutRenderItemProps","FullName":"\"node_modules/@types/react-native/index\".VirtualizedListWithoutRenderItemProps"}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"renderItem","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"ListRenderItem","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"VirtualizedListWithoutRenderItemProps","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]],"Inherits":[["Mapped",{"Name":"ScrollViewProps","FullName":"\"node_modules/@types/react-native/index\".ScrollViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Rendered when the list is empty. Can be a React Component Class, a render function, or"],["SummaryLine","a rendered element."]],"Kind":"Regular","Index":null,"Name":"ListEmptyComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered at the bottom of all the items. Can be a React Component Class, a render function, or"],["SummaryLine","a rendered element."]],"Kind":"Regular","Index":null,"Name":"ListFooterComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Rendered at the top of all the items. Can be a React Component Class, a render function, or"],["SummaryLine","a rendered element."]],"Kind":"Regular","Index":null,"Name":"ListHeaderComponent","Option":true,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ComponentClass","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The default accessor functions assume this is an Array<{key: string}> but you can override"],["SummaryLine","getItem, getItemCount, and keyExtractor to handle any type of index-based data."]],"Kind":"Regular","Index":null,"Name":"data","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","`debug` will turn on extra logging and visual overlays to aid with debugging both usage and"],["SummaryLine","implementation, but with a significant perf hit."]],"Kind":"Regular","Index":null,"Name":"debug","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully"],["SummaryLine","unmounts react instances that are outside of the render window. You should only need to disable"],["SummaryLine","this for debugging purposes."]],"Kind":"Regular","Index":null,"Name":"disableVirtualization","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A marker property for telling the list to re-render (since it implements `PureComponent`). If"],["SummaryLine","any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the"],["SummaryLine","`data` prop, stick it here and treat it immutably."]],"Kind":"Regular","Index":null,"Name":"extraData","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A generic accessor for extracting an item from any sort of data blob."]],"Kind":"Regular","Index":null,"Name":"getItem","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"'ItemT","FullName":""}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines how many items are in the data blob."]],"Kind":"Regular","Index":null,"Name":"getItemCount","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"getItemLayout","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"FlatListPropsGetItemLayout","FullName":"FlatListPropsGetItemLayout"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true the scroll view's children are arranged horizontally in a row"],["SummaryLine","instead of vertically in a column. The default value is false."]],"Kind":"Regular","Index":null,"Name":"horizontal","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","How many items to render in the initial batch. This should be enough to fill the screen but not"],["SummaryLine","much more. Note these items will never be unmounted as part of the windowed rendering in order"],["SummaryLine","to improve perceived performance of scroll-to-top actions."]],"Kind":"Regular","Index":null,"Name":"initialNumToRender","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Instead of starting at the top with the first item, start at `initialScrollIndex`. This"],["SummaryLine","disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items"],["SummaryLine","always rendered and immediately renders the items starting at this initial index. Requires"],["SummaryLine","`getItemLayout` to be implemented."]],"Kind":"Regular","Index":null,"Name":"initialScrollIndex","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Reverses the direction of scroll. Uses scale transforms of -1."]],"Kind":"Regular","Index":null,"Name":"inverted","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"keyExtractor","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"item","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'ItemT","FullName":""}]},{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"listKey","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The maximum number of items to render in each incremental render batch. The more rendered at"],["SummaryLine","once, the better the fill rate, but responsiveness my suffer because rendering content may"],["SummaryLine","interfere with responding to button taps or other interactions."]],"Kind":"Regular","Index":null,"Name":"maxToRenderPerBatch","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onEndReached","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"FlatListPropsOnEndReached","FullName":"FlatListPropsOnEndReached"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onEndReachedThreshold","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on mount and layout changes with"],["SummaryLine",""],["SummaryLine","{nativeEvent: { layout: {x, y, width, height}}}."]],"Kind":"Regular","Index":null,"Name":"onLayout","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutChangeEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make"],["SummaryLine","sure to also set the `refreshing` prop correctly."]],"Kind":"Regular","Index":null,"Name":"onRefresh","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to handle failures when scrolling to an index that has not been measured yet."],["SummaryLine","Recommended action is to either compute your own offset and `scrollTo` it, or scroll as far"],["SummaryLine","as possible and then try again after more items have been rendered."]],"Kind":"Regular","Index":null,"Name":"onScrollToIndexFailed","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SectionListPropsOnScrollToIndexFailed","FullName":"SectionListPropsOnScrollToIndexFailed"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called when the viewability of rows changes, as defined by the"],["SummaryLine","`viewabilityConfig` prop."]],"Kind":"Regular","Index":null,"Name":"onViewableItemsChanged","Option":true,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"info","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ViewabilityConfigCallbackPairOnViewableItemsChanged","FullName":"ViewabilityConfigCallbackPairOnViewableItemsChanged"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set this when offset is needed for the loading indicator to show correctly."]],"Kind":"Regular","Index":null,"Name":"progressViewOffset","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set this true while waiting for new data from a refresh."]],"Kind":"Regular","Index":null,"Name":"refreshing","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Note: may have bugs (missing content) in some circumstances - use at your own risk."],["SummaryLine",""],["SummaryLine","This may improve scroll performance for large lists."]],"Kind":"Regular","Index":null,"Name":"removeClippedSubviews","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Render a custom scroll component, e.g. with a differently styled `RefreshControl`."]],"Kind":"Regular","Index":null,"Name":"renderScrollComponent","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollViewProps","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ScrollViewProps","FullName":""}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off"],["SummaryLine","screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`."]],"Kind":"Regular","Index":null,"Name":"updateCellsBatchingPeriod","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewabilityConfig","Option":true,"Type":["Mapped",{"Name":"ViewabilityConfig","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewabilityConfigCallbackPairs","Option":true,"Type":["Mapped",{"Name":"ViewabilityConfigCallbackPairs","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines the maximum number of items rendered outside of the visible area, in units of"],["SummaryLine","visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will"],["SummaryLine","render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing"],["SummaryLine","this number will reduce memory consumption and may improve performance, but will increase the"],["SummaryLine","chance that fast scrolling may reveal momentary blank areas of unrendered content."]],"Kind":"Regular","Index":null,"Name":"windowSize","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ListViewProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ScrollViewProps","FullName":"\"node_modules/@types/react-native/index\".ScrollViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","An instance of [ListView.DataSource](docs/listviewdatasource.html) to use"]],"Kind":"Regular","Index":null,"Name":"dataSource","Option":false,"Type":["Mapped",{"Name":"ListViewDataSource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Flag indicating whether empty section headers should be rendered."],["SummaryLine","In the future release empty section headers will be rendered by"],["SummaryLine","default, and the flag will be deprecated. If empty sections are not"],["SummaryLine","desired to be rendered their indices should be excluded from"],["SummaryLine","sectionID object."]],"Kind":"Regular","Index":null,"Name":"enableEmptySections","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","How many rows to render on initial component mount.  Use this to make"],["SummaryLine","it so that the first screen worth of data apears at one time instead of"],["SummaryLine","over the course of multiple frames."]],"Kind":"Regular","Index":null,"Name":"initialListSize","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","(visibleRows, changedRows) => void"],["SummaryLine",""],["SummaryLine","Called when the set of visible rows changes.  `visibleRows` maps"],["SummaryLine","{ sectionID: { rowID: true }} for all the visible rows, and"],["SummaryLine","`changedRows` maps { sectionID: { rowID: true | false }} for the rows"],["SummaryLine","that have changed their visibility, with true indicating visible, and"],["SummaryLine","false indicating the view has moved out of view."]],"Kind":"Regular","Index":null,"Name":"onChangeVisibleRows","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"visibleRows","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ListViewPropsOnChangeVisibleRowsArray","FullName":"ListViewPropsOnChangeVisibleRowsArray"}]]}]},{"Comment":null,"Name":"changedRows","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ListViewPropsOnChangeVisibleRowsArray","FullName":"ListViewPropsOnChangeVisibleRowsArray"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called when all rows have been rendered and the list has been scrolled"],["SummaryLine","to within onEndReachedThreshold of the bottom.  The native scroll"],["SummaryLine","event is provided."]],"Kind":"Regular","Index":null,"Name":"onEndReached","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Threshold in pixels for onEndReached."]],"Kind":"Regular","Index":null,"Name":"onEndReachedThreshold","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Number of rows to render per event loop."]],"Kind":"Regular","Index":null,"Name":"pageSize","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A performance optimization for improving scroll perf of"],["SummaryLine","large lists, used in conjunction with overflow: 'hidden' on the row"],["SummaryLine","containers.  Use at your own risk."]],"Kind":"Regular","Index":null,"Name":"removeClippedSubviews","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","() => renderable"],["SummaryLine",""],["SummaryLine","The header and footer are always rendered (if these props are provided)"],["SummaryLine","on every render pass.  If they are expensive to re-render, wrap them"],["SummaryLine","in StaticContainer or other mechanism as appropriate.  Footer is always"],["SummaryLine","at the bottom of the list, and header at the top, on every render pass."]],"Kind":"Regular","Index":null,"Name":"renderFooter","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","() => renderable"],["SummaryLine",""],["SummaryLine","The header and footer are always rendered (if these props are provided)"],["SummaryLine","on every render pass.  If they are expensive to re-render, wrap them"],["SummaryLine","in StaticContainer or other mechanism as appropriate.  Footer is always"],["SummaryLine","at the bottom of the list, and header at the top, on every render pass."]],"Kind":"Regular","Index":null,"Name":"renderHeader","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","(rowData, sectionID, rowID) => renderable"],["SummaryLine","Takes a data entry from the data source and its ids and should return"],["SummaryLine","a renderable component to be rendered as the row.  By default the data"],["SummaryLine","is exactly what was put into the data source, but it's also possible to"],["SummaryLine","provide custom extractors."]],"Kind":"Regular","Index":null,"Name":"renderRow","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"rowData","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"sectionID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Comment":null,"Name":"rowID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Comment":null,"Name":"highlightRow","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A function that returns the scrollable component in which the list rows are rendered."],["SummaryLine","Defaults to returning a ScrollView with the given props."]],"Kind":"Regular","Index":null,"Name":"renderScrollComponent","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"props","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollViewProps","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ScrollViewProps","FullName":""}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","(sectionData, sectionID) => renderable"],["SummaryLine",""],["SummaryLine","If provided, a sticky header is rendered for this section.  The sticky"],["SummaryLine","behavior means that it will scroll with the content at the top of the"],["SummaryLine","section until it reaches the top of the screen, at which point it will"],["SummaryLine","stick to the top until it is pushed off the screen by the next section"],["SummaryLine","header."]],"Kind":"Regular","Index":null,"Name":"renderSectionHeader","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"sectionData","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"sectionId","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","(sectionID, rowID, adjacentRowHighlighted) => renderable"],["SummaryLine","If provided, a renderable component to be rendered as the separator below each row"],["SummaryLine","but not the last row if there is a section header below."],["SummaryLine","Take a sectionID and rowID of the row above and whether its adjacent row is highlighted."]],"Kind":"Regular","Index":null,"Name":"renderSeparator","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"sectionID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Comment":null,"Name":"rowID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Comment":null,"Name":"adjacentRowHighlighted","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","How early to start rendering rows before they come on screen, in"],["SummaryLine","pixels."]],"Kind":"Regular","Index":null,"Name":"scrollRenderAheadDistance","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","An array of child indices determining which children get docked to the"],["SummaryLine","top of the screen when scrolling. For example, passing"],["SummaryLine","`stickyHeaderIndices={[0]}` will cause the first child to be fixed to the"],["SummaryLine","top of the scroll view. This property is not supported in conjunction"],["SummaryLine","with `horizontal={true}`."]],"Kind":"Regular","Index":null,"Name":"stickyHeaderIndices","Option":true,"Type":["Array",["Mapped",{"Name":"float","FullName":"float"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Makes the sections headers sticky. The sticky behavior means that it will scroll with the"],["SummaryLine","content at the top of the section until it reaches the top of the screen, at which point it"],["SummaryLine","will stick to the top until it is pushed off the screen by the next section header. This"],["SummaryLine","property is not supported in conjunction with `horizontal={true}`. Only enabled by default"],["SummaryLine","on iOS because of typical platform standards."]],"Kind":"Regular","Index":null,"Name":"stickySectionHeadersEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TimerMixin","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"setTimeout","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"clearTimeout","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"setInterval","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"clearInterval","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"setImmediate","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"clearImmediate","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"requestAnimationFrame","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"cancelAnimationFrame","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ListViewComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ListViewProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ListViewComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ListViewComponent","FullName":"ListViewComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ListView","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ListViewBase","FullName":"error"}]],"Members":[["Property",{"Comments":[["SummaryLine","Exports some data, e.g. for perf investigations or analytics."]],"Kind":"Regular","Index":null,"Name":"getMetrics","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"FlatListGetMetrics","FullName":"FlatListGetMetrics"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Provides a handle to the underlying scroll responder."]],"Kind":"Regular","Index":null,"Name":"getScrollResponder","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Scrolls to a given x, y offset, either immediately or with a smooth animation."],["SummaryLine",""],["SummaryLine","See `ScrollView#scrollTo`."]],"Kind":"Regular","Index":null,"Name":"scrollTo","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"y","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"RecyclerViewBackedScrollViewScrollTo","FullName":"RecyclerViewBackedScrollViewScrollTo"}]]}]},{"Comment":null,"Name":"x","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"animated","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ListViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ListView","FullName":"ListView"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"DataSource","Option":false,"Type":["Mapped",{"Name":"ListViewDataSource","FullName":""}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MapViewAnnotation","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"latitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"longitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animateDrop","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"draggable","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onDragStateChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onFocus","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onBlur","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"subtitle","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"leftCalloutView","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rightCalloutView","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"detailCalloutView","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"image","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"view","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"hasLeftCallout","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"hasRightCallout","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onLeftCalloutPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onRightCalloutPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"id","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MapViewRegion","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"latitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"longitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"latitudeDelta","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"longitudeDelta","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MapViewOverlay","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"coordinates","Option":false,"Type":["Array",["Mapped",{"Name":"MapViewOverlayCoordinates","FullName":"MapViewOverlayCoordinates"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"lineWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"strokeColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"fillColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"id","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MapViewProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","If false points of interest won't be displayed on the map."],["SummaryLine","Default value is true."]],"Kind":"Regular","Index":null,"Name":"showsPointsOfInterest","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Map annotations with title/subtitle."]],"Kind":"Regular","Index":null,"Name":"annotations","Option":true,"Type":["Array",["Mapped",{"Name":"MapViewAnnotation","FullName":""}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true the map will follow the user's location whenever it changes."],["SummaryLine","Note that this has no effect unless showsUserLocation is enabled."],["SummaryLine","Default value is true."]],"Kind":"Regular","Index":null,"Name":"followUserLocation","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Insets for the map's legal label, originally at bottom left of the map. See EdgeInsetsPropType.js for more information."]],"Kind":"Regular","Index":null,"Name":"legalLabelInsets","Option":true,"Type":["Mapped",{"Name":"Insets","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The map type to be displayed."],["SummaryLine","     standard: standard road map (default)"],["SummaryLine","     satellite: satellite view"],["SummaryLine","     hybrid: satellite view with roads and points of interest overlayed"],["SummaryLine",""],["SummaryLine","enum('standard', 'satellite', 'hybrid')"]],"Kind":"Regular","Index":null,"Name":"mapType","Option":true,"Type":["Mapped",{"Name":"MapViewPropsMapType","FullName":"MapViewPropsMapType"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Maximum size of area that can be displayed."]],"Kind":"Regular","Index":null,"Name":"maxDelta","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Minimum size of area that can be displayed."]],"Kind":"Regular","Index":null,"Name":"minDelta","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Map overlays"]],"Kind":"Regular","Index":null,"Name":"overlays","Option":true,"Type":["Array",["Mapped",{"Name":"MapViewOverlay","FullName":""}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If false compass won't be displayed on the map."],["SummaryLine","Default value is true."]],"Kind":"Regular","Index":null,"Name":"showsCompass","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called once, when the user taps an annotation."]],"Kind":"Regular","Index":null,"Name":"onAnnotationPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called continuously when the user is dragging the map."]],"Kind":"Regular","Index":null,"Name":"onRegionChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"region","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MapViewRegion","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback that is called once, when the user is done moving the map."]],"Kind":"Regular","Index":null,"Name":"onRegionChangeComplete","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"region","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MapViewRegion","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When this property is set to true and a valid camera is associated with the map,"],["SummaryLine","the camera’s pitch angle is used to tilt the plane of the map."],["SummaryLine",""],["SummaryLine","When this property is set to false, the camera’s pitch angle is ignored and"],["SummaryLine","the map is always displayed as if the user is looking straight down onto it."]],"Kind":"Regular","Index":null,"Name":"pitchEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The region to be displayed by the map."],["SummaryLine","The region is defined by the center coordinates and the span of coordinates to display."]],"Kind":"Regular","Index":null,"Name":"region","Option":true,"Type":["Mapped",{"Name":"MapViewRegion","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When this property is set to true and a valid camera is associated with the map,"],["SummaryLine","the camera’s heading angle is used to rotate the plane of the map around its center point."],["SummaryLine",""],["SummaryLine","When this property is set to false, the camera’s heading angle is ignored and the map is always oriented"],["SummaryLine","so that true north is situated at the top of the map view"]],"Kind":"Regular","Index":null,"Name":"rotateEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If false the user won't be able to change the map region being displayed."],["SummaryLine","Default value is true."]],"Kind":"Regular","Index":null,"Name":"scrollEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true the app will ask for the user's location and focus on it."],["SummaryLine","Default value is false."],["SummaryLine",""],["SummaryLine","NOTE: You need to add NSLocationWhenInUseUsageDescription key in Info.plist to enable geolocation,"],["SummaryLine","otherwise it is going to fail silently!"]],"Kind":"Regular","Index":null,"Name":"showsUserLocation","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to style and layout the MapView."],["SummaryLine","See StyleSheet.js and ViewStylePropTypes.js for more info."]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If false the user won't be able to pinch/zoom the map."],["SummaryLine","Default value is true."]],"Kind":"Regular","Index":null,"Name":"zoomEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"MapViewComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"MapViewProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"MapViewComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MapViewComponent","FullName":"MapViewComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"MapView","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"MapViewBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"MapViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MapView","FullName":"MapView"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"PinColors","Option":false,"Type":["Mapped",{"Name":"MapViewStaticPinColors","FullName":"MapViewStaticPinColors"}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MaskedViewIOSProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"maskElement","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"MaskedViewComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"MaskedViewIOSProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"MaskedViewComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MaskedViewComponent","FullName":"MaskedViewComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"MaskedViewIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"MaskedViewBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"MaskedViewIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"MaskedViewIOS","FullName":"MaskedViewIOS"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ModalBaseProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The `animationType` prop controls how the modal animates."],["SummaryLine",""],["SummaryLine","- `slide` slides in from the bottom"],["SummaryLine","- `fade` fades into view"],["SummaryLine","- `none` appears without an animation"]],"Kind":"Regular","Index":null,"Name":"animationType","Option":true,"Type":["Mapped",{"Name":"ModalBasePropsAnimationType","FullName":"ModalBasePropsAnimationType"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The `transparent` prop determines whether your modal will fill the entire view."],["SummaryLine","Setting this to `true` will render the modal over a transparent background."]],"Kind":"Regular","Index":null,"Name":"transparent","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The `visible` prop determines whether your modal is visible."]],"Kind":"Regular","Index":null,"Name":"visible","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed."],["SummaryLine","_On the Android platform, this is a required function._"]],"Kind":"Regular","Index":null,"Name":"onRequestClose","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The `onShow` prop allows passing a function that will be called once the modal has been shown."]],"Kind":"Regular","Index":null,"Name":"onShow","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ModalPropsIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","The `presentationStyle` determines the style of modal to show"]],"Kind":"Regular","Index":null,"Name":"presentationStyle","Option":true,"Type":["Mapped",{"Name":"ModalPropsIOSPresentationStyle","FullName":"ModalPropsIOSPresentationStyle"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations."],["SummaryLine","On iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field."]],"Kind":"Regular","Index":null,"Name":"supportedOrientations","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ModalPropsIOSSupportedOrientationsArray","FullName":"ModalPropsIOSSupportedOrientationsArray"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed."]],"Kind":"Regular","Index":null,"Name":"onDismiss","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed."],["SummaryLine","The orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation."]],"Kind":"Regular","Index":null,"Name":"onOrientationChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ModalPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Controls whether to force hardware acceleration for the underlying window."]],"Kind":"Regular","Index":null,"Name":"hardwareAccelerated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ModalProps","FullName":"ModalProps","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Modal","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ModalProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ModalStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Modal","FullName":"Modal"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TouchableMixin","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Invoked when the item should be highlighted. Mixers should implement this"],["SummaryLine","to visually distinguish the `VisualRect` so that the user knows that"],["SummaryLine","releasing a touch will result in a \"selection\" (analog to click)."]],"Kind":"Regular","IsStatic":false,"Name":"touchableHandleActivePressIn","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoked when the item is \"active\" (in that it is still eligible to become"],["SummaryLine","a \"select\") but the touch has left the `PressRect`. Usually the mixer will"],["SummaryLine","want to unhighlight the `VisualRect`. If the user (while pressing) moves"],["SummaryLine","back into the `PressRect` `touchableHandleActivePressIn` will be invoked"],["SummaryLine","again and the mixer should probably highlight the `VisualRect` again. This"],["SummaryLine","event will not fire on an `touchEnd/mouseUp` event, only move events while"],["SummaryLine","the user is depressing the mouse/touch."]],"Kind":"Regular","IsStatic":false,"Name":"touchableHandleActivePressOut","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoked when the item is \"selected\" - meaning the interaction ended by"],["SummaryLine","letting up while the item was either in the state"],["SummaryLine","`RESPONDER_ACTIVE_PRESS_IN` or `RESPONDER_INACTIVE_PRESS_IN`."]],"Kind":"Regular","IsStatic":false,"Name":"touchableHandlePress","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoked when the item is long pressed - meaning the interaction ended by"],["SummaryLine","letting up while the item was in `RESPONDER_ACTIVE_LONG_PRESS_IN`. If"],["SummaryLine","`touchableHandleLongPress` is *not* provided, `touchableHandlePress` will"],["SummaryLine","be called as it normally is. If `touchableHandleLongPress` is provided, by"],["SummaryLine","default any `touchableHandlePress` callback will not be invoked. To"],["SummaryLine","override this default behavior, override `touchableLongPressCancelsPress`"],["SummaryLine","to return false. As a result, `touchableHandlePress` will be called when"],["SummaryLine","lifting up, even if `touchableHandleLongPress` has also been called."]],"Kind":"Regular","IsStatic":false,"Name":"touchableHandleLongPress","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns the amount to extend the `HitRect` into the `PressRect`. Positive"],["SummaryLine","numbers mean the size expands outwards."]],"Kind":"Regular","IsStatic":false,"Name":"touchableGetPressRectOffset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"Insets","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns the number of millis to wait before triggering a highlight."]],"Kind":"Regular","IsStatic":false,"Name":"touchableGetHighlightDelayMS","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"touchableGetLongPressDelayMS","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"touchableGetPressOutDelayMS","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"touchableGetHitSlop","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"Insets","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TouchableWithoutFeedbackProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AccessibilityProps","FullName":"\"node_modules/@types/react-native/index\".AccessibilityProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Delay in ms, from onPressIn, before onLongPress is called."]],"Kind":"Regular","Index":null,"Name":"delayLongPress","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Delay in ms, from the start of the touch, before onPressIn is called."]],"Kind":"Regular","Index":null,"Name":"delayPressIn","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Delay in ms, from the release of the touch, before onPressOut is called."]],"Kind":"Regular","Index":null,"Name":"delayPressOut","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If true, disable all interactions for this component."]],"Kind":"Regular","Index":null,"Name":"disabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","This defines how far your touch can start away from the button."],["SummaryLine","This is added to pressRetentionOffset when moving off of the button."],["SummaryLine","NOTE The touch area never extends past the parent view bounds and"],["SummaryLine","the Z-index of sibling views always takes precedence if a touch hits"],["SummaryLine","two overlapping views."]],"Kind":"Regular","Index":null,"Name":"hitSlop","Option":true,"Type":["Mapped",{"Name":"Insets","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked on mount and layout changes with"],["SummaryLine","{nativeEvent: {layout: {x, y, width, height}}}"]],"Kind":"Regular","Index":null,"Name":"onLayout","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LayoutChangeEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onLongPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called when the touch is released,"],["SummaryLine","but not if cancelled (e.g. by a scroll that steals the responder lock)."]],"Kind":"Regular","Index":null,"Name":"onPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPressIn","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPressOut","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","//FIXME: not in doc but available in examples"]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When the scroll view is disabled, this defines how far your"],["SummaryLine","touch may move off of the button, before deactivating the button."],["SummaryLine","Once deactivated, try moving it back and you'll see that the button"],["SummaryLine","is once again reactivated! Move it back and forth several times"],["SummaryLine","while the scroll view is disabled. Ensure you pass in a constant"],["SummaryLine","to reduce memory allocations."]],"Kind":"Regular","Index":null,"Name":"pressRetentionOffset","Option":true,"Type":["Mapped",{"Name":"Insets","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this view in end-to-end tests."]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Do not use unless you have a very good reason."],["SummaryLine","All the elements that respond to press should have a visual feedback when touched."],["SummaryLine","This is one of the primary reason a \"web\" app doesn't feel \"native\"."]],"IsStatic":false,"IsClass":true,"Name":"TouchableWithoutFeedbackComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"TouchableWithoutFeedbackProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Do not use unless you have a very good reason."],["SummaryLine","All the elements that respond to press should have a visual feedback when touched."],["SummaryLine","This is one of the primary reason a \"web\" app doesn't feel \"native\"."]],"IsStatic":true,"IsClass":true,"Name":"TouchableWithoutFeedbackComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TouchableWithoutFeedbackComponent","FullName":"TouchableWithoutFeedbackComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"TouchableWithoutFeedback","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TouchableWithoutFeedbackBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"TouchableWithoutFeedbackStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TouchableWithoutFeedback","FullName":"TouchableWithoutFeedback"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TouchableHighlightProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TouchableWithoutFeedbackProps","FullName":"\"node_modules/@types/react-native/index\".TouchableWithoutFeedbackProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Determines what the opacity of the wrapped view should be when touch is active."]],"Kind":"Regular","Index":null,"Name":"activeOpacity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called immediately after the underlay is hidden"]],"Kind":"Regular","Index":null,"Name":"onHideUnderlay","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called immediately after the underlay is shown"]],"Kind":"Regular","Index":null,"Name":"onShowUnderlay","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","//FIXME: not in doc but available in examples"]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The color of the underlay that will show through when the touch is active."]],"Kind":"Regular","Index":null,"Name":"underlayColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A wrapper for making views respond properly to touches."],["SummaryLine","On press down, the opacity of the wrapped view is decreased,"],["SummaryLine","which allows the underlay color to show through, darkening or tinting the view."],["SummaryLine","The underlay comes from adding a view to the view hierarchy,"],["SummaryLine","which can sometimes cause unwanted visual artifacts if not used correctly,"],["SummaryLine","for example if the backgroundColor of the wrapped view isn't explicitly set to an opaque color."],["SummaryLine",""],["SummaryLine","NOTE: TouchableHighlight supports only one child"],["SummaryLine","If you wish to have several child components, wrap them in a View."]],"IsStatic":false,"IsClass":true,"Name":"TouchableHighlightComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"TouchableHighlightProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A wrapper for making views respond properly to touches."],["SummaryLine","On press down, the opacity of the wrapped view is decreased,"],["SummaryLine","which allows the underlay color to show through, darkening or tinting the view."],["SummaryLine","The underlay comes from adding a view to the view hierarchy,"],["SummaryLine","which can sometimes cause unwanted visual artifacts if not used correctly,"],["SummaryLine","for example if the backgroundColor of the wrapped view isn't explicitly set to an opaque color."],["SummaryLine",""],["SummaryLine","NOTE: TouchableHighlight supports only one child"],["SummaryLine","If you wish to have several child components, wrap them in a View."]],"IsStatic":true,"IsClass":true,"Name":"TouchableHighlightComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TouchableHighlightComponent","FullName":"TouchableHighlightComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"TouchableHighlight","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TouchableHighlightBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"TouchableHighlightStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TouchableHighlight","FullName":"TouchableHighlight"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TouchableOpacityProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TouchableWithoutFeedbackProps","FullName":"\"node_modules/@types/react-native/index\".TouchableWithoutFeedbackProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Determines what the opacity of the wrapped view should be when touch is active."],["SummaryLine","Defaults to 0.2"]],"Kind":"Regular","Index":null,"Name":"activeOpacity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A wrapper for making views respond properly to touches."],["SummaryLine","On press down, the opacity of the wrapped view is decreased, dimming it."],["SummaryLine","This is done without actually changing the view hierarchy,"],["SummaryLine","and in general is easy to add to an app without weird side-effects."]],"IsStatic":false,"IsClass":true,"Name":"TouchableOpacityComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"TouchableOpacityProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A wrapper for making views respond properly to touches."],["SummaryLine","On press down, the opacity of the wrapped view is decreased, dimming it."],["SummaryLine","This is done without actually changing the view hierarchy,"],["SummaryLine","and in general is easy to add to an app without weird side-effects."]],"IsStatic":true,"IsClass":true,"Name":"TouchableOpacityComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TouchableOpacityComponent","FullName":"TouchableOpacityComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"TouchableOpacity","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TouchableOpacityBase","FullName":"error"}]],"Members":[["Property",{"Comments":[["SummaryLine","Animate the touchable to a new opacity."]],"Kind":"Regular","Index":null,"Name":"setOpacityTo","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"TouchableOpacityStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TouchableOpacity","FullName":"TouchableOpacity"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"BaseBackgroundPropType","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RippleBackgroundPropType","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"BaseBackgroundPropType","FullName":"\"node_modules/@types/react-native/index\".BaseBackgroundPropType"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["StringLiteral","RippleAndroid"],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"color","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"borderless","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ThemeAttributeBackgroundPropType","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"BaseBackgroundPropType","FullName":"\"node_modules/@types/react-native/index\".BaseBackgroundPropType"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["StringLiteral","ThemeAttrAndroid"],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"attribute","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"BackgroundPropType","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"RippleBackgroundPropType","FullName":""}],["Mapped",{"Name":"ThemeAttributeBackgroundPropType","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TouchableNativeFeedbackProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TouchableWithoutFeedbackProps","FullName":"\"node_modules/@types/react-native/index\".TouchableWithoutFeedbackProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Determines the type of background drawable that's going to be used to display feedback."],["SummaryLine","It takes an object with type property and extra data depending on the type."],["SummaryLine","It's recommended to use one of the following static methods to generate that dictionary:"],["SummaryLine","      1) TouchableNativeFeedback.SelectableBackground() - will create object that represents android theme's"],["SummaryLine","         default background for selectable elements (?android:attr/selectableItemBackground)"],["SummaryLine","      2) TouchableNativeFeedback.SelectableBackgroundBorderless() - will create object that represent android"],["SummaryLine","         theme's default background for borderless selectable elements"],["SummaryLine","         (?android:attr/selectableItemBackgroundBorderless). Available on android API level 21+"],["SummaryLine","      3) TouchableNativeFeedback.Ripple(color, borderless) - will create object that represents ripple drawable"],["SummaryLine","         with specified color (as a string). If property borderless evaluates to true the ripple will render"],["SummaryLine","         outside of the view bounds (see native actionbar buttons as an example of that behavior). This background"],["SummaryLine","         type is available on Android API level 21+"]],"Kind":"Regular","Index":null,"Name":"background","Option":true,"Type":["Mapped",{"Name":"BackgroundPropType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"useForeground","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A wrapper for making views respond properly to touches (Android only)."],["SummaryLine","On Android this component uses native state drawable to display touch feedback."],["SummaryLine","At the moment it only supports having a single View instance as a child node,"],["SummaryLine","as it's implemented by replacing that View with another instance of RCTView node with some additional properties set."],["SummaryLine",""],["SummaryLine","Background drawable of native feedback touchable can be customized with background property."]],"IsStatic":false,"IsClass":true,"Name":"TouchableNativeFeedbackComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"TouchableNativeFeedbackProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A wrapper for making views respond properly to touches (Android only)."],["SummaryLine","On Android this component uses native state drawable to display touch feedback."],["SummaryLine","At the moment it only supports having a single View instance as a child node,"],["SummaryLine","as it's implemented by replacing that View with another instance of RCTView node with some additional properties set."],["SummaryLine",""],["SummaryLine","Background drawable of native feedback touchable can be customized with background property."]],"IsStatic":true,"IsClass":true,"Name":"TouchableNativeFeedbackComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TouchableNativeFeedbackComponent","FullName":"TouchableNativeFeedbackComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"TouchableNativeFeedback","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"TouchableNativeFeedbackBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"TouchableNativeFeedbackStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TouchableNativeFeedback","FullName":"TouchableNativeFeedback"}],"TypeParameters":[]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Creates an object that represents android theme's default background for"],["SummaryLine","selectable elements (?android:attr/selectableItemBackground)."]],"Kind":"Regular","IsStatic":true,"Name":"SelectableBackground","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ThemeAttributeBackgroundPropType","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Creates an object that represent android theme's default background for borderless"],["SummaryLine","selectable elements (?android:attr/selectableItemBackgroundBorderless)."],["SummaryLine","Available on android API level 21+."]],"Kind":"Regular","IsStatic":true,"Name":"SelectableBackgroundBorderless","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ThemeAttributeBackgroundPropType","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Creates an object that represents ripple drawable with specified color (as a"],["SummaryLine","string). If property `borderless` evaluates to true the ripple will"],["SummaryLine","render outside of the view bounds (see native actionbar buttons as an"],["SummaryLine","example of that behavior). This background type is available on Android"],["SummaryLine","API level 21+."]],"Kind":"Regular","IsStatic":true,"Name":"Ripple","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"color","Description":["The ripple color"]}],"Name":"color","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":["Param",{"Name":"borderless","Description":["If the ripple can render outside it's bounds"]}],"Name":"borderless","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"RippleBackgroundPropType","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":true,"Name":"canUseNativeForeground","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Route","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``component``","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"React.ComponentType","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"id","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"passProps","Option":true,"Type":["Mapped",{"Name":"Object","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"backButtonTitle","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"content","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"message","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"index","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onRightButtonPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rightButtonTitle","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"wrapperStyle","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"InteractionMixin","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"createInteractionHandle","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"clearInteractionHandle","TypeParameters":[],"Params":[{"Comment":null,"Name":"clearHandle","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Schedule work for after all interactions have completed."]],"Kind":"Regular","IsStatic":false,"Name":"runAfterInteractions","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SubscribableMixin","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Special form of calling `addListener` that *guarantees* that a"],["SummaryLine","subscription *must* be tied to a component instance, and therefore will"],["SummaryLine","be cleaned up when the component is unmounted. It is impossible to create"],["SummaryLine","the subscription and pass it in - this method must be the one to create"],["SummaryLine","the subscription and therefore can guarantee it is retained in a way that"],["SummaryLine","will be cleaned up."]],"Kind":"Regular","IsStatic":false,"Name":"addListenerOn","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"eventEmitter","Description":["emitter to subscribe to."]}],"Name":"eventEmitter","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":["Param",{"Name":"eventType","Description":["Type of event to listen to."]}],"Name":"eventType","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":["Param",{"Name":"listener","Description":["Function to invoke when event occurs."]}],"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]},{"Comment":["Param",{"Name":"context","Description":["Object to use as listener context."]}],"Name":"context","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Module",{"HasDeclare":false,"IsNamespace":true,"Name":"StyleSheet","Types":[["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Creates a StyleSheet style reference from the given object."]],"Kind":"Regular","IsStatic":false,"Name":"create","TypeParameters":[["GenericTypeParameter",{"Name":"'T","Constraint":["Generic",{"Type":["Mapped",{"Name":"NamedStyles","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]}]],"Params":[{"Comment":null,"Name":"styles","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Mapped",{"Name":"obj","FullName":"obj"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Flattens an array of style objects, into one aggregated style object."],["SummaryLine","Alternatively, this method can be used to lookup IDs, returned by"],["SummaryLine","StyleSheet.register."],["SummaryLine",""],["SummaryLine","> **NOTE**: Exercise caution as abusing this can tax you in terms of"],["SummaryLine","> optimizations."],["SummaryLine",">"],["SummaryLine","> IDs enable optimizations through the bridge and memory in general. Refering"],["SummaryLine","> to style objects directly will deprive you of these optimizations."],["SummaryLine",""],["SummaryLine","Example:"],["SummaryLine","```"],["SummaryLine","const styles = StyleSheet.create({"],["SummaryLine","   listItem: {"],["SummaryLine","     flex: 1,"],["SummaryLine","     fontSize: 16,"],["SummaryLine","     color: 'white'"],["SummaryLine","   },"],["SummaryLine","   selectedListItem: {"],["SummaryLine","     color: 'green'"],["SummaryLine","   }"],["SummaryLine","});"],["SummaryLine",""],["SummaryLine","StyleSheet.flatten([styles.listItem, styles.selectedListItem])"],["SummaryLine","// returns { flex: 1, fontSize: 16, color: 'green' }"],["SummaryLine","```"],["SummaryLine","Alternative use:"],["SummaryLine","```"],["SummaryLine","StyleSheet.flatten(styles.listItem);"],["SummaryLine","// return { flex: 1, fontSize: 16, color: 'white' }"],["SummaryLine","// Simply styles.listItem would return its ID (number)"],["SummaryLine","```"],["SummaryLine","This method internally uses `StyleSheetRegistry.getStyleByID(style)`"],["SummaryLine","to resolve style objects represented by IDs. Thus, an array of style"],["SummaryLine","objects (instances of StyleSheet.create), are individually resolved to,"],["SummaryLine","their respective objects, merged as one and then returned. This also explains"],["SummaryLine","the alternative use."]],"Kind":"Regular","IsStatic":false,"Name":"flatten","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Comment":null,"Name":"style","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"RegisteredStyle","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"flatten","TypeParameters":[],"Params":[{"Comment":null,"Name":"style","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TextStyle","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"TextStyle","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"flatten","TypeParameters":[],"Params":[{"Comment":null,"Name":"style","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ImageStyle","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"ImageStyle","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"flatten","TypeParameters":[],"Params":[{"Comment":null,"Name":"style","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"ViewStyle","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","WARNING: EXPERIMENTAL. Breaking changes will probably happen a lot and will"],["SummaryLine","not be reliably announced. The whole thing might be deleted, who knows? Use"],["SummaryLine","at your own risk."],["SummaryLine",""],["SummaryLine","Sets a function to use to pre-process a style property value. This is used"],["SummaryLine","internally to process color and transform values. You should not use this"],["SummaryLine","unless you really know what you are doing and have exhausted other options."]],"Kind":"Regular","IsStatic":false,"Name":"setStyleAttributePreprocessor","TypeParameters":[],"Params":[{"Comment":null,"Name":"property","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"``process``","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"nextProp","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":true,"Name":"hairlineWidth","Type":["Mapped",{"Name":"float","FullName":"float"}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":true,"Name":"absoluteFillObject","Type":["Mapped",{"Name":"AbsoluteFillStyle","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":true,"Name":"absoluteFill","Type":["Generic",{"Type":["Mapped",{"Name":"RegisteredStyle","FullName":""}],"TypeParameters":[["Mapped",{"Name":"AbsoluteFillStyle","FullName":""}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NamedStyles","FullName":"NamedStyles","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AbsoluteFillStyle","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"position","Option":false,"Type":["StringLiteral","absolute"],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"left","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"right","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"top","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"bottom","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RelayProfiler","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"attachProfileHandler","TypeParameters":[],"Params":[{"Comment":null,"Name":"name","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"name","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"state","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"attachAggregateHandler","TypeParameters":[],"Params":[{"Comment":null,"Name":"name","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"name","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SystraceStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setEnabled","TypeParameters":[],"Params":[{"Comment":null,"Name":"enabled","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","beginEvent/endEvent for starting and then ending a profile within the same call stack frame"]],"Kind":"Regular","IsStatic":false,"Name":"beginEvent","TypeParameters":[],"Params":[{"Comment":null,"Name":"profileName","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Comment":null,"Name":"args","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"endEvent","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","beginAsyncEvent/endAsyncEvent for starting and then ending a profile where the end can either"],["SummaryLine","occur on another thread or out of the current stack frame, eg await"],["SummaryLine","the returned cookie variable should be used as input into the endAsyncEvent call to end the profile"]],"Kind":"Regular","IsStatic":false,"Name":"beginAsyncEvent","TypeParameters":[],"Params":[{"Comment":null,"Name":"profileName","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"endAsyncEvent","TypeParameters":[],"Params":[{"Comment":null,"Name":"profileName","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Comment":null,"Name":"cookie","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","counterEvent registers the value to the profileName on the systrace timeline"]],"Kind":"Regular","IsStatic":false,"Name":"counterEvent","TypeParameters":[],"Params":[{"Comment":null,"Name":"profileName","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Comment":null,"Name":"value","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Relay profiles use await calls, so likely occur out of current stack frame"],["SummaryLine","therefore async variant of profiling is used"]],"Kind":"Regular","IsStatic":false,"Name":"attachToRelayProfiler","TypeParameters":[],"Params":[{"Comment":null,"Name":"relayProfiler","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"RelayProfiler","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"swizzleJSON","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Measures multiple methods of a class. For example, you can do:"],["SummaryLine","Systrace.measureMethods(JSON, 'JSON', ['parse', 'stringify']);"]],"Kind":"Regular","IsStatic":false,"Name":"measureMethods","TypeParameters":[],"Params":[{"Comment":null,"Name":"``object``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"objectName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":["Param",{"Name":"methodNames","Description":["Map from method names to method display names."]}],"Name":"methodNames","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns an profiled version of the input function. For example, you can:"],["SummaryLine","JSON.parse = Systrace.measure('JSON', 'parse', JSON.parse);"]],"Kind":"Regular","IsStatic":false,"Name":"``measure``","TypeParameters":[["GenericTypeParameter",{"Name":"'T","Constraint":null}]],"Params":[{"Comment":null,"Name":"objName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"fnName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"func","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"'T","FullName":""}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","//FIXME: Could not find docs. Inferred from examples and jscode : ListViewDataSource.js"]],"IsStatic":false,"IsClass":false,"Name":"DataSourceAssetCallback","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"rowHasChanged","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"r1","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"r2","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"sectionHeaderHasChanged","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"h1","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"h2","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"getRowData","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"dataBlob","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"sectionID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}]},{"Comment":null,"Name":"rowID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"getSectionHeaderData","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"dataBlob","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"sectionID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Provides efficient data processing and access to the"],["SummaryLine","`ListView` component.  A `ListViewDataSource` is created with functions for"],["SummaryLine","extracting data from the input blob, and comparing elements (with default"],["SummaryLine","implementations for convenience).  The input blob can be as simple as an"],["SummaryLine","array of strings, or an object with rows nested inside section objects."],["SummaryLine",""],["SummaryLine","To update the data in the datasource, use `cloneWithRows` (or"],["SummaryLine","`cloneWithRowsAndSections` if you care about sections).  The data in the"],["SummaryLine","data source is immutable, so you can't modify it directly.  The clone methods"],["SummaryLine","suck in the new data and compute a diff for each row so ListView knows"],["SummaryLine","whether to re-render it or not."]],"IsStatic":false,"IsClass":false,"Name":"ListViewDataSource","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Clones this `ListViewDataSource` with the specified `dataBlob` and"],["SummaryLine","`rowIdentities`. The `dataBlob` is just an aribitrary blob of data. At"],["SummaryLine","construction an extractor to get the interesting informatoin was defined"],["SummaryLine","(or the default was used)."],["SummaryLine",""],["SummaryLine","The `rowIdentities` is is a 2D array of identifiers for rows."],["SummaryLine","ie. [['a1', 'a2'], ['b1', 'b2', 'b3'], ...].  If not provided, it's"],["SummaryLine","assumed that the keys of the section data are the row identities."],["SummaryLine",""],["SummaryLine","Note: This function does NOT clone the data in this data source. It simply"],["SummaryLine","passes the functions defined at construction to a new data source with"],["SummaryLine","the data specified. If you wish to maintain the existing data you must"],["SummaryLine","handle merging of old and new data separately and then pass that into"],["SummaryLine","this function as the `dataBlob`."]],"Kind":"Regular","IsStatic":false,"Name":"cloneWithRows","TypeParameters":[],"Params":[{"Comment":null,"Name":"dataBlob","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Mapped",{"Name":"LayoutAnimationStaticConfigChecker","FullName":"LayoutAnimationStaticConfigChecker"}]]}]},{"Comment":null,"Name":"rowIdentities","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]]}]}],"ReturnType":["Mapped",{"Name":"ListViewDataSource","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","This performs the same function as the `cloneWithRows` function but here"],["SummaryLine","you also specify what your `sectionIdentities` are. If you don't care"],["SummaryLine","about sections you should safely be able to use `cloneWithRows`."],["SummaryLine",""],["SummaryLine","`sectionIdentities` is an array of identifiers for  sections."],["SummaryLine","ie. ['s1', 's2', ...].  If not provided, it's assumed that the"],["SummaryLine","keys of dataBlob are the section identities."],["SummaryLine",""],["SummaryLine","Note: this returns a new object!"]],"Kind":"Regular","IsStatic":false,"Name":"cloneWithRowsAndSections","TypeParameters":[],"Params":[{"Comment":null,"Name":"dataBlob","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Mapped",{"Name":"LayoutAnimationStaticConfigChecker","FullName":"LayoutAnimationStaticConfigChecker"}]]}]},{"Comment":null,"Name":"sectionIdentities","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]]}]},{"Comment":null,"Name":"rowIdentities","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]]}]]}]}],"ReturnType":["Mapped",{"Name":"ListViewDataSource","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getRowCount","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getRowAndSectionCount","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns if the row is dirtied and needs to be rerendered"]],"Kind":"Regular","IsStatic":false,"Name":"rowShouldUpdate","TypeParameters":[],"Params":[{"Comment":null,"Name":"sectionIndex","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"rowIndex","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the data required to render the row."]],"Kind":"Regular","IsStatic":false,"Name":"getRowData","TypeParameters":[],"Params":[{"Comment":null,"Name":"sectionIndex","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"rowIndex","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the rowID at index provided if the dataSource arrays were flattened,"],["SummaryLine","or null of out of range indexes."]],"Kind":"Regular","IsStatic":false,"Name":"getRowIDForFlatIndex","TypeParameters":[],"Params":[{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the sectionID at index provided if the dataSource arrays were flattened,"],["SummaryLine","or null for out of range indexes."]],"Kind":"Regular","IsStatic":false,"Name":"getSectionIDForFlatIndex","TypeParameters":[],"Params":[{"Comment":null,"Name":"index","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns an array containing the number of rows in each section"]],"Kind":"Regular","IsStatic":false,"Name":"getSectionLengths","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"float","FullName":"float"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns if the section header is dirtied and needs to be rerendered"]],"Kind":"Regular","IsStatic":false,"Name":"sectionHeaderShouldUpdate","TypeParameters":[],"Params":[{"Comment":null,"Name":"sectionIndex","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the data required to render the section header"]],"Kind":"Regular","IsStatic":false,"Name":"getSectionHeaderData","TypeParameters":[],"Params":[{"Comment":null,"Name":"sectionIndex","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Provides efficient data processing and access to the"],["SummaryLine","`ListView` component.  A `ListViewDataSource` is created with functions for"],["SummaryLine","extracting data from the input blob, and comparing elements (with default"],["SummaryLine","implementations for convenience).  The input blob can be as simple as an"],["SummaryLine","array of strings, or an object with rows nested inside section objects."],["SummaryLine",""],["SummaryLine","To update the data in the datasource, use `cloneWithRows` (or"],["SummaryLine","`cloneWithRowsAndSections` if you care about sections).  The data in the"],["SummaryLine","data source is immutable, so you can't modify it directly.  The clone methods"],["SummaryLine","suck in the new data and compute a diff for each row so ListView knows"],["SummaryLine","whether to re-render it or not."]],"IsStatic":true,"IsClass":false,"Name":"ListViewDataSourceStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","You can provide custom extraction and `hasChanged` functions for section"],["SummaryLine","headers and rows.  If absent, data will be extracted with the"],["SummaryLine","`defaultGetRowData` and `defaultGetSectionHeaderData` functions."],["SummaryLine",""],["SummaryLine","The default extractor expects data of one of the following forms:"],["SummaryLine",""],["SummaryLine","      { sectionID_1: { rowID_1: <rowData1>, ... }, ... }"],["SummaryLine",""],["SummaryLine","    or"],["SummaryLine",""],["SummaryLine","      { sectionID_1: [ <rowData1>, <rowData2>, ... ], ... }"],["SummaryLine",""],["SummaryLine","    or"],["SummaryLine",""],["SummaryLine","      [ [ <rowData1>, <rowData2>, ... ], ... ]"],["SummaryLine",""],["SummaryLine","The constructor takes in a params argument that can contain any of the"],["SummaryLine","following:"],["SummaryLine",""],["SummaryLine","- getRowData(dataBlob, sectionID, rowID);"],["SummaryLine","- getSectionHeaderData(dataBlob, sectionID);"],["SummaryLine","- rowHasChanged(prevRowData, nextRowData);"],["SummaryLine","- sectionHeaderHasChanged(prevSectionData, nextSectionData);"]],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Comment":null,"Name":"onAsset","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DataSourceAssetCallback","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ListViewDataSource","FullName":"ListViewDataSource"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TabBarIOSItemProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Little red bubble that sits at the top right of the icon."]],"Kind":"Regular","Index":null,"Name":"badge","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Background color for the badge. Available since iOS 10."]],"Kind":"Regular","Index":null,"Name":"badgeColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A custom icon for the tab. It is ignored when a system icon is defined."]],"Kind":"Regular","Index":null,"Name":"icon","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Callback when this tab is being selected,"],["SummaryLine","you should change the state of your component to set selected={true}."]],"Kind":"Regular","Index":null,"Name":"onPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If set to true it renders the image as original,"],["SummaryLine","it defaults to being displayed as a template"]],"Kind":"Regular","Index":null,"Name":"renderAsOriginal","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","It specifies whether the children are visible or not. If you see a blank content, you probably forgot to add a selected one."]],"Kind":"Regular","Index":null,"Name":"selected","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A custom icon when the tab is selected."],["SummaryLine","It is ignored when a system icon is defined. If left empty, the icon will be tinted in blue."]],"Kind":"Regular","Index":null,"Name":"selectedIcon","Option":true,"Type":["Mapped",{"Name":"ImageURISource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","React style object."]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Items comes with a few predefined system icons."],["SummaryLine","Note that if you are using them, the title and selectedIcon will be overriden with the system ones."],["SummaryLine",""],["SummaryLine","  enum('bookmarks', 'contacts', 'downloads', 'favorites', 'featured', 'history', 'more', 'most-recent', 'most-viewed', 'recents', 'search', 'top-rated')"]],"Kind":"Regular","Index":null,"Name":"systemIcon","Option":true,"Type":["Mapped",{"Name":"TabBarIOSItemPropsSystemIcon","FullName":"TabBarIOSItemPropsSystemIcon"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Text that appears under the icon. It is ignored when a system icon is defined."]],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"TabBarIOSItem","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"TabBarIOSItemProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"TabBarIOSItemStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TabBarIOSItem","FullName":"TabBarIOSItem"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TabBarIOSProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Background color of the tab bar"]],"Kind":"Regular","Index":null,"Name":"barTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Specifies tab bar item positioning. Available values are:"],["SummaryLine","- fill - distributes items across the entire width of the tab bar"],["SummaryLine","- center - centers item in the available tab bar space"],["SummaryLine","- auto (default) - distributes items dynamically according to the"],["SummaryLine","user interface idiom. In a horizontally compact environment (e.g. iPhone 5)"],["SummaryLine","this value defaults to `fill`, in a horizontally regular one (e.g. iPad)"],["SummaryLine","it defaults to center."]],"Kind":"Regular","Index":null,"Name":"itemPositioning","Option":true,"Type":["Mapped",{"Name":"TabBarIOSPropsItemPositioning","FullName":"TabBarIOSPropsItemPositioning"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Color of the currently selected tab icon"]],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A Boolean value that indicates whether the tab bar is translucent"]],"Kind":"Regular","Index":null,"Name":"translucent","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Color of text on unselected tabs"]],"Kind":"Regular","Index":null,"Name":"unselectedTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Color of unselected tab icons. Available since iOS 10."]],"Kind":"Regular","Index":null,"Name":"unselectedItemTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"TabBarIOS","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"TabBarIOSProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"TabBarIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"TabBarIOS","FullName":"TabBarIOS"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Item","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PixelRatioStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"get","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getFontScale","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Converts a layout size (dp) to pixel size (px)."],["SummaryLine","Guaranteed to return an integer number."]],"Kind":"Regular","IsStatic":false,"Name":"getPixelSizeForLayoutSize","TypeParameters":[],"Params":[{"Comment":null,"Name":"layoutSize","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Rounds a layout size (dp) to the nearest layout size that"],["SummaryLine","corresponds to an integer number of pixels. For example,"],["SummaryLine","on a device with a PixelRatio of 3,"],["SummaryLine","PixelRatio.roundToNearestPixel(8.4) = 8.33,"],["SummaryLine","which corresponds to exactly (8.33 * 3) = 25 pixels."]],"Kind":"Regular","IsStatic":false,"Name":"roundToNearestPixel","TypeParameters":[],"Params":[{"Comment":null,"Name":"layoutSize","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","No-op for iOS, but used on the web. Should not be documented. [sic]"]],"Kind":"Regular","IsStatic":false,"Name":"startDetecting","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PlatformOSType","FullName":"PlatformOSType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"ios","Type":"String","Value":"ios"},{"Name":"android","Type":"String","Value":"android"},{"Name":"macos","Type":"String","Value":"macos"},{"Name":"windows","Type":"String","Value":"windows"},{"Name":"web","Type":"String","Value":"web"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PlatformStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"OS","Option":false,"Type":["Mapped",{"Name":"PlatformOSType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Version","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"select","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Comment":null,"Name":"specifics","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Mapped",{"Name":"'T","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PlatformIOSStatic","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"PlatformStatic","FullName":"\"node_modules/@types/react-native/index\".PlatformStatic"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"isPad","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"isTVOS","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Deprecated - subclass NativeEventEmitter to create granular event modules instead of"],["SummaryLine","adding all event listeners directly to RCTDeviceEventEmitter."]],"IsStatic":false,"IsClass":false,"Name":"DeviceEventEmitterStatic","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"EventEmitter","FullName":"\"node_modules/@types/react-native/index\".EventEmitter"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"sharedSubscriber","Option":false,"Type":["Mapped",{"Name":"EventSubscriptionVendor","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Adds a listener to be invoked when events of the specified type are"],["SummaryLine","emitted. An optional calling context may be provided. The data arguments"],["SummaryLine","emitted will be passed to the listener function."]],"Kind":"Regular","IsStatic":false,"Name":"addListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"context","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Mapped",{"Name":"EmitterSubscription","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Deprecated - subclass NativeEventEmitter to create granular event modules instead of"],["SummaryLine","adding all event listeners directly to RCTDeviceEventEmitter."]],"IsStatic":true,"IsClass":false,"Name":"DeviceEventEmitterStaticStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"DeviceEventEmitterStatic","FullName":"DeviceEventEmitterStatic"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScaledSize","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scale","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"fontScale","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Initial dimensions are set before `runApplication` is called so they should"],["SummaryLine","be available before any other require's are run, but may be updated later."],["SummaryLine",""],["SummaryLine","Note: Although dimensions are available immediately, they may change (e.g"],["SummaryLine","due to device rotation) so any rendering logic or styles that depend on"],["SummaryLine","these constants should try to call this function on every render, rather"],["SummaryLine","than caching the value (for example, using inline styles rather than"],["SummaryLine","setting a value in a `StyleSheet`)."],["SummaryLine",""],["SummaryLine","Example: `const {height, width} = Dimensions.get('window');`"]],"IsStatic":false,"IsClass":false,"Name":"Dimensions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Initial dimensions are set before runApplication is called so they"],["SummaryLine","should be available before any other require's are run, but may be"],["SummaryLine","updated later."],["SummaryLine","Note: Although dimensions are available immediately, they may"],["SummaryLine","change (e.g due to device rotation) so any rendering logic or"],["SummaryLine","styles that depend on these constants should try to call this"],["SummaryLine","function on every render, rather than caching the value (for"],["SummaryLine","example, using inline styles rather than setting a value in a"],["SummaryLine","StyleSheet)."],["SummaryLine","Example: const {height, width} = Dimensions.get('window');"]],"Kind":"Regular","IsStatic":false,"Name":"get","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"dim","Description":["Name of dimension as defined when calling set."]}],"Name":"dim","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DimensionsGetDim","FullName":"DimensionsGetDim"}]}],"ReturnType":["Mapped",{"Name":"ScaledSize","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","This should only be called from native code by sending the didUpdateDimensions event."]],"Kind":"Regular","IsStatic":false,"Name":"set","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"dims","Description":["Simple string-keyed object of dimensions to set"]}],"Name":"dims","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DimensionsSetDims","FullName":"DimensionsSetDims"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Add an event listener for dimension changes"]],"Kind":["StringParam","$0.addEventListener('change',$1)"],"IsStatic":false,"Name":"addEventListener_change","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"handler","Description":["the event handler"]}],"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DimensionsAddEventListener_change","FullName":"DimensionsAddEventListener_change"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Remove an event listener"]],"Kind":["StringParam","$0.removeEventListener('change',$1)"],"IsStatic":false,"Name":"removeEventListener_change","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"handler","Description":["the event handler"]}],"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"p0","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DimensionsAddEventListener_change","FullName":"DimensionsAddEventListener_change"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DimensionsGetDim","FullName":"DimensionsGetDim","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"window","Type":"String","Value":"window"},{"Name":"screen","Type":"String","Value":"screen"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DimensionsSetDims","FullName":"DimensionsSetDims","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SimpleTask","FullName":"SimpleTask","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"name","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"gen","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PromiseTask","FullName":"PromiseTask","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"name","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"gen","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"Handle","Type":["Mapped",{"Name":"float","FullName":"float"}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"InteractionManagerStatic","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"EventEmitterListener","FullName":"\"node_modules/@types/react-native/index\".EventEmitterListener"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Events","Option":false,"Type":["Mapped",{"Name":"InteractionManagerStaticEvents","FullName":"InteractionManagerStaticEvents"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Schedule a function to run after all interactions have completed."],["SummaryLine","Returns a cancellable"]],"Kind":"Regular","IsStatic":false,"Name":"runAfterInteractions","TypeParameters":[],"Params":[{"Comment":null,"Name":"task","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Mapped",{"Name":"SimpleTask","FullName":""}],["Mapped",{"Name":"PromiseTask","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"InteractionManagerStaticRunAfterInteractionsReturn","FullName":"InteractionManagerStaticRunAfterInteractionsReturn"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Notify manager that an interaction has started."]],"Kind":"Regular","IsStatic":false,"Name":"createInteractionHandle","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"Handle","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Notify manager that an interaction has completed."]],"Kind":"Regular","IsStatic":false,"Name":"clearInteractionHandle","TypeParameters":[],"Params":[{"Comment":null,"Name":"handle","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Handle","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","A positive number will use setTimeout to schedule any tasks after"],["SummaryLine","the eventLoopRunningTime hits the deadline value, otherwise all"],["SummaryLine","tasks will be executed in one setImmediate batch (default)."]],"Kind":"Regular","IsStatic":false,"Name":"setDeadline","TypeParameters":[],"Params":[{"Comment":null,"Name":"deadline","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"InteractionManagerStaticRunAfterInteractionsReturn","FullName":"InteractionManagerStaticRunAfterInteractionsReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``then``","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"onfulfilled","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]},{"Comment":null,"Name":"onrejected","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``done``","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"args","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"cancel","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollResponderEvent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":"\"node_modules/@types/react-native/index\".NativeSyntheticEvent"}],"TypeParameters":[["Mapped",{"Name":"NativeTouchEvent","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollResponderMixin","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"SubscribableMixin","FullName":"\"node_modules/@types/react-native/index\".SubscribableMixin"}]],"Members":[["Function",{"Comments":[["SummaryLine","Invoke this from an `onScroll` event."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleScrollShouldSetResponder","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Merely touch starting is not sufficient for a scroll view to become the"],["SummaryLine","responder. Being the \"responder\" means that the very next touch move/end"],["SummaryLine","event will result in an action/movement."],["SummaryLine",""],["SummaryLine","Invoke this from an `onStartShouldSetResponder` event."],["SummaryLine",""],["SummaryLine","`onStartShouldSetResponder` is used when the next move/end will trigger"],["SummaryLine","some UI movement/action, but when you want to yield priority to views"],["SummaryLine","nested inside of the view."],["SummaryLine",""],["SummaryLine","There may be some cases where scroll views actually should return `true`"],["SummaryLine","from `onStartShouldSetResponder`: Any time we are detecting a standard tap"],["SummaryLine","that gives priority to nested views."],["SummaryLine",""],["SummaryLine","- If a single tap on the scroll view triggers an action such as"],["SummaryLine","   recentering a map style view yet wants to give priority to interaction"],["SummaryLine","   views inside (such as dropped pins or labels), then we would return true"],["SummaryLine","   from this method when there is a single touch."],["SummaryLine",""],["SummaryLine","- Similar to the previous case, if a two finger \"tap\" should trigger a"],["SummaryLine","   zoom, we would check the `touches` count, and if `>= 2`, we would return"],["SummaryLine","   true."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleStartShouldSetResponder","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","There are times when the scroll view wants to become the responder"],["SummaryLine","(meaning respond to the next immediate `touchStart/touchEnd`), in a way"],["SummaryLine","that *doesn't* give priority to nested views (hence the capture phase):"],["SummaryLine",""],["SummaryLine","- Currently animating."],["SummaryLine","- Tapping anywhere that is not the focused input, while the keyboard is"],["SummaryLine","   up (which should dismiss the keyboard)."],["SummaryLine",""],["SummaryLine","Invoke this from an `onStartShouldSetResponderCapture` event."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleStartShouldSetResponderCapture","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoke this from an `onResponderReject` event."],["SummaryLine",""],["SummaryLine","Some other element is not yielding its role as responder. Normally, we'd"],["SummaryLine","just disable the `UIScrollView`, but a touch has already began on it, the"],["SummaryLine","`UIScrollView` will not accept being disabled after that. The easiest"],["SummaryLine","solution for now is to accept the limitation of disallowing this"],["SummaryLine","altogether. To improve this, find a way to disable the `UIScrollView` after"],["SummaryLine","a touch has already started."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleResponderReject","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","We will allow the scroll view to give up its lock iff it acquired the lock"],["SummaryLine","during an animation. This is a very useful default that happens to satisfy"],["SummaryLine","many common user experiences."],["SummaryLine",""],["SummaryLine","- Stop a scroll on the left edge, then turn that into an outer view's"],["SummaryLine","   backswipe."],["SummaryLine","- Stop a scroll mid-bounce at the top, continue pulling to have the outer"],["SummaryLine","   view dismiss."],["SummaryLine","- However, without catching the scroll view mid-bounce (while it is"],["SummaryLine","   motionless), if you drag far enough for the scroll view to become"],["SummaryLine","   responder (and therefore drag the scroll view a bit), any backswipe"],["SummaryLine","   navigation of a swipe gesture higher in the view hierarchy, should be"],["SummaryLine","   rejected."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleTerminationRequest","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoke this from an `onTouchEnd` event."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleTouchEnd","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"e","Description":["Event."]}],"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoke this from an `onResponderRelease` event."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleResponderRelease","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleScroll","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoke this from an `onResponderGrant` event."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleResponderGrant","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll"],["SummaryLine","animation, and there's not an easy way to distinguish a drag vs. stopping"],["SummaryLine","momentum."],["SummaryLine",""],["SummaryLine","Invoke this from an `onScrollBeginDrag` event."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleScrollBeginDrag","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoke this from an `onScrollEndDrag` event."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleScrollEndDrag","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoke this from an `onMomentumScrollBegin` event."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleMomentumScrollBegin","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoke this from an `onMomentumScrollEnd` event."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleMomentumScrollEnd","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoke this from an `onTouchStart` event."],["SummaryLine",""],["SummaryLine","Since we know that the `SimpleEventPlugin` occurs later in the plugin"],["SummaryLine","order, after `ResponderEventPlugin`, we can detect that we were *not*"],["SummaryLine","permitted to be the responder (presumably because a contained view became"],["SummaryLine","responder). The `onResponderReject` won't fire in that case - it only"],["SummaryLine","fires when a *current* responder rejects our request."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleTouchStart","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"e","Description":["Touch Start event."]}],"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invoke this from an `onTouchMove` event."],["SummaryLine",""],["SummaryLine","Since we know that the `SimpleEventPlugin` occurs later in the plugin"],["SummaryLine","order, after `ResponderEventPlugin`, we can detect that we were *not*"],["SummaryLine","permitted to be the responder (presumably because a contained view became"],["SummaryLine","responder). The `onResponderReject` won't fire in that case - it only"],["SummaryLine","fires when a *current* responder rejects our request."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderHandleTouchMove","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"e","Description":["Touch Start event."]}],"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","A helper function for this class that lets us quickly determine if the"],["SummaryLine","view is currently animating. This is particularly useful to know when"],["SummaryLine","a touch has just started or ended."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderIsAnimating","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns the node that represents native view that can be scrolled."],["SummaryLine","Components can pass what node to use by defining a `getScrollableNode`"],["SummaryLine","function otherwise `this` is used."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderGetScrollableNode","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","A helper function to scroll to a specific point  in the scrollview."],["SummaryLine","This is currently used to help focus on child textviews, but can also"],["SummaryLine","be used to quickly scroll to any element we want to focus. Syntax:"],["SummaryLine",""],["SummaryLine","scrollResponderScrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})"],["SummaryLine",""],["SummaryLine","Note: The weird argument signature is due to the fact that, for historical reasons,"],["SummaryLine","the function also accepts separate arguments as as alternative to the options object."],["SummaryLine","This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderScrollTo","TypeParameters":[],"Params":[{"Comment":null,"Name":"x","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"RecyclerViewBackedScrollViewScrollTo","FullName":"RecyclerViewBackedScrollViewScrollTo"}]]}]},{"Comment":null,"Name":"y","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"animated","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","A helper function to zoom to a specific rect in the scrollview. The argument has the shape"],["SummaryLine","{x: number; y: number; width: number; height: number; animated: boolean = true}"]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderZoomTo","TypeParameters":[],"Params":[{"Comment":null,"Name":"rect","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderMixinScrollResponderZoomToRect","FullName":"ScrollResponderMixinScrollResponderZoomToRect"}]},{"Comment":null,"Name":"animated","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","This method should be used as the callback to onFocus in a TextInputs'"],["SummaryLine","parent view. Note that any module using this mixin needs to return"],["SummaryLine","the parent view's ref in getScrollViewRef() in order to use this method."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderScrollNativeHandleToKeyboard","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"nodeHandle","Description":["The TextInput node handle"]}],"Name":"nodeHandle","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":["Param",{"Name":"additionalOffset","Description":["The scroll view's top \"contentInset\".","Default is 0."]}],"Name":"additionalOffset","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"preventNegativeScrollOffset","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","The calculations performed here assume the scroll view takes up the entire"],["SummaryLine","screen - even if has some content inset. We then measure the offsets of the"],["SummaryLine","keyboard, and compensate both for the scroll view's \"contentInset\"."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderInputMeasureAndScrollToKeyboard","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"left","Description":["Position of input w.r.t. table view."]}],"Name":"left","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":["Param",{"Name":"top","Description":["Position of input w.r.t. table view."]}],"Name":"top","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":["Param",{"Name":"width","Description":["Width of the text input."]}],"Name":"width","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":["Param",{"Name":"height","Description":["Height of the text input."]}],"Name":"height","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderTextInputFocusError","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","`componentWillMount` is the closest thing to a  standard \"constructor\" for"],["SummaryLine","React components."],["SummaryLine",""],["SummaryLine","The `keyboardWillShow` is called before input focus."]],"Kind":"Regular","IsStatic":false,"Name":"componentWillMount","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Warning, this may be called several times for a single keyboard opening."],["SummaryLine","It's best to store the information in this method and then take any action"],["SummaryLine","at a later point (either in `keyboardDidShow` or other)."],["SummaryLine",""],["SummaryLine","Here's the order that events occur in:"],["SummaryLine","- focus"],["SummaryLine","- willShow {startCoordinates, endCoordinates} several times"],["SummaryLine","- didShow several times"],["SummaryLine","- blur"],["SummaryLine","- willHide {startCoordinates, endCoordinates} several times"],["SummaryLine","- didHide several times"],["SummaryLine",""],["SummaryLine","The `ScrollResponder` providesModule callbacks for each of these events."],["SummaryLine","Even though any user could have easily listened to keyboard events"],["SummaryLine","themselves, using these `props` callbacks ensures that ordering of events"],["SummaryLine","is consistent - and not dependent on the order that the keyboard events are"],["SummaryLine","subscribed to. This matters when telling the scroll view to scroll to where"],["SummaryLine","the keyboard is headed - the scroll responder better have been notified of"],["SummaryLine","the keyboard destination before being instructed to scroll to where the"],["SummaryLine","keyboard will be. Stick to the `ScrollResponder` callbacks, and everything"],["SummaryLine","will work."],["SummaryLine",""],["SummaryLine","WARNING: These callbacks will fire even if a keyboard is displayed in a"],["SummaryLine","different navigation pane. Filter out the events to determine if they are"],["SummaryLine","relevant to you. (For example, only if you receive these callbacks after"],["SummaryLine","you had explicitly focused a node etc)."]],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderKeyboardWillShow","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderKeyboardWillHide","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderKeyboardDidShow","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"scrollResponderKeyboardDidHide","TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollResponderEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollResponderMixinScrollResponderZoomToRect","FullName":"ScrollResponderMixinScrollResponderZoomToRect","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollViewPropsIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","When true the scroll view bounces horizontally when it reaches the end"],["SummaryLine","even if the content is smaller than the scroll view itself. The default"],["SummaryLine","value is true when `horizontal={true}` and false otherwise."]],"Kind":"Regular","Index":null,"Name":"alwaysBounceHorizontal","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true the scroll view bounces vertically when it reaches the end"],["SummaryLine","even if the content is smaller than the scroll view itself. The default"],["SummaryLine","value is false when `horizontal={true}` and true otherwise."]],"Kind":"Regular","Index":null,"Name":"alwaysBounceVertical","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Controls whether iOS should automatically adjust the content inset for scroll views that are placed behind a navigation bar or tab bar/ toolbar."],["SummaryLine","The default value is true."]],"Kind":"Regular","Index":null,"Name":"automaticallyAdjustContentInsets","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true the scroll view bounces when it reaches the end of the"],["SummaryLine","content if the content is larger then the scroll view along the axis of"],["SummaryLine","the scroll direction. When false it disables all bouncing even if"],["SummaryLine","the `alwaysBounce*` props are true. The default value is true."]],"Kind":"Regular","Index":null,"Name":"bounces","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true gestures can drive zoom past min/max and the zoom will animate"],["SummaryLine","to the min/max value at gesture end otherwise the zoom will not exceed"],["SummaryLine","the limits."]],"Kind":"Regular","Index":null,"Name":"bouncesZoom","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When false once tracking starts won't try to drag if the touch moves."],["SummaryLine","The default value is true."]],"Kind":"Regular","Index":null,"Name":"canCancelContentTouches","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true the scroll view automatically centers the content when the"],["SummaryLine","content is smaller than the scroll view bounds; when the content is"],["SummaryLine","larger than the scroll view this property has no effect. The default"],["SummaryLine","value is false."]],"Kind":"Regular","Index":null,"Name":"centerContent","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The amount by which the scroll view content is inset from the edges of the scroll view."],["SummaryLine","Defaults to {0, 0, 0, 0}."]],"Kind":"Regular","Index":null,"Name":"contentInset","Option":true,"Type":["Mapped",{"Name":"Insets","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to manually set the starting scroll offset."],["SummaryLine","The default value is {x: 0, y: 0}"]],"Kind":"Regular","Index":null,"Name":"contentOffset","Option":true,"Type":["Mapped",{"Name":"PointPropType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","This property specifies how the safe area insets are used to modify the content area of the scroll view."],["SummaryLine","The default value of this property must be 'automatic'. But the default value is 'never' until RN@0.51."]],"Kind":"Regular","Index":null,"Name":"contentInsetAdjustmentBehavior","Option":true,"Type":["Mapped",{"Name":"ScrollViewPropsIOSContentInsetAdjustmentBehavior","FullName":"ScrollViewPropsIOSContentInsetAdjustmentBehavior"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A floating-point number that determines how quickly the scroll view"],["SummaryLine","decelerates after the user lifts their finger. Reasonable choices include"],["SummaryLine","   - Normal: 0.998 (the default)"],["SummaryLine","   - Fast: 0.9"]],"Kind":"Regular","Index":null,"Name":"decelerationRate","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Enum",{"Name":"StringEnum","Cases":[{"Name":"fast","Type":"String","Value":"fast"},{"Name":"normal","Type":"String","Value":"normal"}]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true the ScrollView will try to lock to only vertical or horizontal"],["SummaryLine","scrolling while dragging.  The default value is false."]],"Kind":"Regular","Index":null,"Name":"directionalLockEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The style of the scroll indicators."],["SummaryLine","- default (the default), same as black."],["SummaryLine","- black, scroll indicator is black. This style is good against"],["SummaryLine","   a white content background."],["SummaryLine","- white, scroll indicator is white. This style is good against"],["SummaryLine","   a black content background."]],"Kind":"Regular","Index":null,"Name":"indicatorStyle","Option":true,"Type":["Mapped",{"Name":"ScrollViewPropsIOSIndicatorStyle","FullName":"ScrollViewPropsIOSIndicatorStyle"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The maximum allowed zoom scale. The default value is 1.0."]],"Kind":"Regular","Index":null,"Name":"maximumZoomScale","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The minimum allowed zoom scale. The default value is 1.0."]],"Kind":"Regular","Index":null,"Name":"minimumZoomScale","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called when a scrolling animation ends."]],"Kind":"Regular","Index":null,"Name":"onScrollAnimationEnd","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true, ScrollView allows use of pinch gestures to zoom in and out."],["SummaryLine","The default value is true."]],"Kind":"Regular","Index":null,"Name":"pinchGestureEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","This controls how often the scroll event will be fired while scrolling (in events per seconds)."],["SummaryLine","A higher number yields better accuracy for code that is tracking the scroll position,"],["SummaryLine","but can lead to scroll performance problems due to the volume of information being send over the bridge."],["SummaryLine","The default value is zero, which means the scroll event will be sent only once each time the view is scrolled."]],"Kind":"Regular","Index":null,"Name":"scrollEventThrottle","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The amount by which the scroll view indicators are inset from the edges of the scroll view."],["SummaryLine","This should normally be set to the same value as the contentInset."],["SummaryLine","Defaults to {0, 0, 0, 0}."]],"Kind":"Regular","Index":null,"Name":"scrollIndicatorInsets","Option":true,"Type":["Mapped",{"Name":"Insets","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true the scroll view scrolls to top when the status bar is tapped."],["SummaryLine","The default value is true."]],"Kind":"Regular","Index":null,"Name":"scrollsToTop","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When snapToInterval is set, snapToAlignment will define the relationship of the the snapping to the scroll view."],["SummaryLine","      - start (the default) will align the snap at the left (horizontal) or top (vertical)"],["SummaryLine","      - center will align the snap in the center"],["SummaryLine","      - end will align the snap at the right (horizontal) or bottom (vertical)"]],"Kind":"Regular","Index":null,"Name":"snapToAlignment","Option":true,"Type":["Mapped",{"Name":"ScrollViewPropsIOSSnapToAlignment","FullName":"ScrollViewPropsIOSSnapToAlignment"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When set, causes the scroll view to stop at multiples of the value of snapToInterval."],["SummaryLine","This can be used for paginating through children that have lengths smaller than the scroll view."],["SummaryLine","Used in combination with snapToAlignment."]],"Kind":"Regular","Index":null,"Name":"snapToInterval","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","An array of child indices determining which children get docked to the"],["SummaryLine","top of the screen when scrolling. For example passing"],["SummaryLine","`stickyHeaderIndices={[0]}` will cause the first child to be fixed to the"],["SummaryLine","top of the scroll view. This property is not supported in conjunction"],["SummaryLine","with `horizontal={true}`."]],"Kind":"Regular","Index":null,"Name":"stickyHeaderIndices","Option":true,"Type":["Array",["Mapped",{"Name":"float","FullName":"float"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The current scale of the scroll view content. The default value is 1.0."]],"Kind":"Regular","Index":null,"Name":"zoomScale","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollViewPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Sometimes a scrollview takes up more space than its content fills."],["SummaryLine","When this is the case, this prop will fill the rest of the"],["SummaryLine","scrollview with a color to avoid setting a background and creating"],["SummaryLine","unnecessary overdraw. This is an advanced optimization that is not"],["SummaryLine","needed in the general case."]],"Kind":"Regular","Index":null,"Name":"endFillColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Tag used to log scroll performance on this scroll view. Will force"],["SummaryLine","momentum events to be turned on (see sendMomentumEvents). This doesn't do"],["SummaryLine","anything out of the box and you need to implement a custom native"],["SummaryLine","FpsListener for it to be useful."]],"Kind":"Regular","Index":null,"Name":"scrollPerfTag","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to override default value of overScroll mode."],["SummaryLine",""],["SummaryLine","   Possible values:"],["SummaryLine","     - 'auto' - Default value, allow a user to over-scroll this view only if the content is large enough to meaningfully scroll."],["SummaryLine","     - 'always' - Always allow a user to over-scroll this view."],["SummaryLine","     - 'never' - Never allow a user to over-scroll this view."]],"Kind":"Regular","Index":null,"Name":"overScrollMode","Option":true,"Type":["Mapped",{"Name":"ScrollViewPropsAndroidOverScrollMode","FullName":"ScrollViewPropsAndroidOverScrollMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Enables nested scrolling for Android API level 21+. Nested scrolling is supported by default on iOS."]],"Kind":"Regular","Index":null,"Name":"nestedScrollEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollViewProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}],["Mapped",{"Name":"ScrollViewPropsIOS","FullName":"\"node_modules/@types/react-native/index\".ScrollViewPropsIOS"}],["Mapped",{"Name":"ScrollViewPropsAndroid","FullName":"\"node_modules/@types/react-native/index\".ScrollViewPropsAndroid"}],["Mapped",{"Name":"Touchable","FullName":"\"node_modules/@types/react-native/index\".Touchable"}]],"Members":[["Property",{"Comments":[["SummaryLine","These styles will be applied to the scroll view content container which"],["SummaryLine","wraps all of the child views. Example:"],["SummaryLine",""],["SummaryLine","   return ("],["SummaryLine","     <ScrollView contentContainerStyle={styles.contentContainer}>"],["SummaryLine","     </ScrollView>"],["SummaryLine","   );"],["SummaryLine","   ..."],["SummaryLine","   const styles = StyleSheet.create({"],["SummaryLine","     contentContainer: {"],["SummaryLine","       paddingVertical: 20"],["SummaryLine","     }"],["SummaryLine","   });"]],"Kind":"Regular","Index":null,"Name":"contentContainerStyle","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true the scroll view's children are arranged horizontally in a row"],["SummaryLine","instead of vertically in a column. The default value is false."]],"Kind":"Regular","Index":null,"Name":"horizontal","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Determines whether the keyboard gets dismissed in response to a drag."],["SummaryLine","   - 'none' (the default) drags do not dismiss the keyboard."],["SummaryLine","   - 'onDrag' the keyboard is dismissed when a drag begins."],["SummaryLine","   - 'interactive' the keyboard is dismissed interactively with the drag"],["SummaryLine","     and moves in synchrony with the touch; dragging upwards cancels the"],["SummaryLine","     dismissal."]],"Kind":"Regular","Index":null,"Name":"keyboardDismissMode","Option":true,"Type":["Mapped",{"Name":"ScrollViewPropsKeyboardDismissMode","FullName":"ScrollViewPropsKeyboardDismissMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When false tapping outside of the focused text input when the keyboard"],["SummaryLine","is up dismisses the keyboard. When true the scroll view will not catch"],["SummaryLine","taps and the keyboard will not dismiss automatically. The default value"],["SummaryLine","is false."]],"Kind":"Regular","Index":null,"Name":"keyboardShouldPersistTaps","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"bool","FullName":"bool"}],["Enum",{"Name":"StringEnum","Cases":[{"Name":"always","Type":"String","Value":"always"},{"Name":"never","Type":"String","Value":"never"},{"Name":"handled","Type":"String","Value":"handled"}]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Called when scrollable content view of the ScrollView changes."],["SummaryLine","Handler function is passed the content width and content height as parameters: (contentWidth, contentHeight)"],["SummaryLine","It's implemented using onLayout handler attached to the content container which this ScrollView renders."]],"Kind":"Regular","Index":null,"Name":"onContentSizeChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"w","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"h","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Fires at most once per frame during scrolling."],["SummaryLine","The frequency of the events can be contolled using the scrollEventThrottle prop."]],"Kind":"Regular","Index":null,"Name":"onScroll","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"NativeScrollEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Fires if a user initiates a scroll gesture."]],"Kind":"Regular","Index":null,"Name":"onScrollBeginDrag","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"NativeScrollEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Fires when a user has finished scrolling."]],"Kind":"Regular","Index":null,"Name":"onScrollEndDrag","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"NativeScrollEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Fires when scroll view has finished moving"]],"Kind":"Regular","Index":null,"Name":"onMomentumScrollEnd","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"NativeScrollEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Fires when scroll view has begun moving"]],"Kind":"Regular","Index":null,"Name":"onMomentumScrollBegin","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"NativeScrollEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true the scroll view stops on multiples of the scroll view's size"],["SummaryLine","when scrolling. This can be used for horizontal pagination. The default"],["SummaryLine","value is false."]],"Kind":"Regular","Index":null,"Name":"pagingEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When false, the content does not scroll. The default value is true"]],"Kind":"Regular","Index":null,"Name":"scrollEnabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Experimental: When true offscreen child views (whose `overflow` value is"],["SummaryLine","`hidden`) are removed from their native backing superview when offscreen."],["SummaryLine","This canimprove scrolling performance on long lists. The default value is"],["SummaryLine","false."]],"Kind":"Regular","Index":null,"Name":"removeClippedSubviews","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true, shows a horizontal scroll indicator."]],"Kind":"Regular","Index":null,"Name":"showsHorizontalScrollIndicator","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","When true, shows a vertical scroll indicator."]],"Kind":"Regular","Index":null,"Name":"showsVerticalScrollIndicator","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Style"]],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A RefreshControl component, used to provide pull-to-refresh"],["SummaryLine","functionality for the ScrollView."]],"Kind":"Regular","Index":null,"Name":"refreshControl","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Mapped",{"Name":"RefreshControlProps","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ScrollViewComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ScrollViewProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ScrollViewComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ScrollViewComponent","FullName":"ScrollViewComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ScrollView","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ScrollViewBase","FullName":"error"}]],"Members":[["Function",{"Comments":[["SummaryLine","Scrolls to a given x, y offset, either immediately or with a smooth animation."],["SummaryLine","Syntax:"],["SummaryLine",""],["SummaryLine","scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})"],["SummaryLine",""],["SummaryLine","Note: The weird argument signature is due to the fact that, for historical reasons,"],["SummaryLine","the function also accepts separate arguments as as alternative to the options object."],["SummaryLine","This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED."]],"Kind":"Regular","IsStatic":false,"Name":"scrollTo","TypeParameters":[],"Params":[{"Comment":null,"Name":"y","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"RecyclerViewBackedScrollViewScrollTo","FullName":"RecyclerViewBackedScrollViewScrollTo"}]]}]},{"Comment":null,"Name":"x","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"animated","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","A helper function that scrolls to the end of the scrollview;"],["SummaryLine","If this is a vertical ScrollView, it scrolls to the bottom."],["SummaryLine","If this is a horizontal ScrollView scrolls to the right."],["SummaryLine",""],["SummaryLine","The options object has an animated prop, that enables the scrolling animation or not."],["SummaryLine","The animated prop defaults to true"]],"Kind":"Regular","IsStatic":false,"Name":"scrollToEnd","TypeParameters":[],"Params":[{"Comment":null,"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ScrollViewScrollToEndOptions","FullName":"ScrollViewScrollToEndOptions"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns a reference to the underlying scroll responder, which supports"],["SummaryLine","operations like `scrollTo`. All ScrollView-like components should"],["SummaryLine","implement this method so that they can be composed while providing access"],["SummaryLine","to the underlying scroll responder's methods."]],"Kind":"Regular","IsStatic":false,"Name":"getScrollResponder","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"JSX.Element","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getScrollableNode","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getInnerViewNode","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scrollWithoutAnimationTo","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"y","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"x","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollViewScrollToEndOptions","FullName":"ScrollViewScrollToEndOptions","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animated","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ScrollViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ScrollView","FullName":"ScrollView"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeScrollRectangle","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"left","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"top","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"bottom","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"right","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeScrollPoint","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeScrollVelocity","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeScrollSize","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeScrollEvent","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"contentInset","Option":false,"Type":["Mapped",{"Name":"NativeScrollRectangle","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"contentOffset","Option":false,"Type":["Mapped",{"Name":"NativeScrollPoint","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"contentSize","Option":false,"Type":["Mapped",{"Name":"NativeScrollSize","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"layoutMeasurement","Option":false,"Type":["Mapped",{"Name":"NativeScrollSize","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"velocity","Option":true,"Type":["Mapped",{"Name":"NativeScrollVelocity","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"zoomScale","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SnapshotViewIOSProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"onSnapshotReady","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"testIdentifier","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"SnapshotViewIOSComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"SnapshotViewIOSProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"SnapshotViewIOSComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SnapshotViewIOSComponent","FullName":"SnapshotViewIOSComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"SnapshotViewIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"SnapshotViewIOSBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"SnapshotViewIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SnapshotViewIOS","FullName":"SnapshotViewIOS"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Data source wrapper around ListViewDataSource to allow for tracking of"],["SummaryLine","which row is swiped open and close opened row(s) when another row is swiped"],["SummaryLine","open."],["SummaryLine",""],["SummaryLine","See https://github.com/facebook/react-native/pull/5602 for why"],["SummaryLine","ListViewDataSource is not subclassed."]],"IsStatic":false,"IsClass":false,"Name":"SwipeableListViewDataSource","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"cloneWithRowsAndSections","TypeParameters":[],"Params":[{"Comment":null,"Name":"dataBlob","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"sectionIdentities","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}]},{"Comment":null,"Name":"rowIdentities","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}]]}]}],"ReturnType":["Mapped",{"Name":"SwipeableListViewDataSource","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getDataSource","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ListViewDataSource","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getOpenRowID","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getFirstRowID","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setOpenRowID","TypeParameters":[],"Params":[{"Comment":null,"Name":"rowID","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"SwipeableListViewDataSource","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SwipeableListViewProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","To alert the user that swiping is possible, the first row can bounce"],["SummaryLine","on component mount."]],"Kind":"Regular","Index":null,"Name":"bounceFirstRowOnMount","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Use `SwipeableListView.getNewDataSource()` to get a data source to use,"],["SummaryLine","then use it just like you would a normal ListView data source"]],"Kind":"Regular","Index":null,"Name":"dataSource","Option":false,"Type":["Mapped",{"Name":"SwipeableListViewDataSource","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"maxSwipeDistance","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"renderRow","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"rowData","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"sectionID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Comment":null,"Name":"rowID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Comment":null,"Name":"highlightRow","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"renderQuickActions","TypeParameters":[],"Params":[{"Comment":null,"Name":"rowData","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"sectionID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]},{"Comment":null,"Name":"rowID","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A container component that renders multiple SwipeableRow's in a ListView"],["SummaryLine","implementation. This is designed to be a drop-in replacement for the"],["SummaryLine","standard React Native `ListView`, so use it as if it were a ListView, but"],["SummaryLine","with extra props, i.e."],["SummaryLine",""],["SummaryLine","let ds = SwipeableListView.getNewDataSource();"],["SummaryLine","ds.cloneWithRowsAndSections(dataBlob, ?sectionIDs, ?rowIDs);"],["SummaryLine","// .."],["SummaryLine","<SwipeableListView renderRow={..} renderQuickActions={..} {..ListView props} />"],["SummaryLine",""],["SummaryLine","SwipeableRow can be used independently of this component, but the main"],["SummaryLine","benefit of using this component is"],["SummaryLine",""],["SummaryLine","- It ensures that at most 1 row is swiped open (auto closes others)"],["SummaryLine","- It can bounce the 1st row of the list so users know it's swipeable"],["SummaryLine","- More to come"]],"IsStatic":false,"IsClass":true,"Name":"SwipeableListView","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"SwipeableListViewProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","A container component that renders multiple SwipeableRow's in a ListView"],["SummaryLine","implementation. This is designed to be a drop-in replacement for the"],["SummaryLine","standard React Native `ListView`, so use it as if it were a ListView, but"],["SummaryLine","with extra props, i.e."],["SummaryLine",""],["SummaryLine","let ds = SwipeableListView.getNewDataSource();"],["SummaryLine","ds.cloneWithRowsAndSections(dataBlob, ?sectionIDs, ?rowIDs);"],["SummaryLine","// .."],["SummaryLine","<SwipeableListView renderRow={..} renderQuickActions={..} {..ListView props} />"],["SummaryLine",""],["SummaryLine","SwipeableRow can be used independently of this component, but the main"],["SummaryLine","benefit of using this component is"],["SummaryLine",""],["SummaryLine","- It ensures that at most 1 row is swiped open (auto closes others)"],["SummaryLine","- It can bounce the 1st row of the list so users know it's swipeable"],["SummaryLine","- More to come"]],"IsStatic":true,"IsClass":true,"Name":"SwipeableListViewStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SwipeableListView","FullName":"SwipeableListView"}],"TypeParameters":[]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":true,"Name":"getNewDataSource","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"SwipeableListViewDataSource","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ActionSheetIOSOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"options","Option":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"cancelButtonIndex","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"destructiveButtonIndex","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"message","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ShareActionSheetIOSOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"message","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"url","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"subject","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The activities to exclude from the ActionSheet."],["SummaryLine","For example: ['com.apple.UIKit.activity.PostToTwitter']"]],"Kind":"Regular","Index":null,"Name":"excludedActivityTypes","Option":true,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ActionSheetIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Display an iOS action sheet. The `options` object must contain one or more"],["SummaryLine","of:"],["SummaryLine","- `options` (array of strings) - a list of button titles (required)"],["SummaryLine","- `cancelButtonIndex` (int) - index of cancel button in `options`"],["SummaryLine","- `destructiveButtonIndex` (int) - index of destructive button in `options`"],["SummaryLine","- `title` (string) - a title to show above the action sheet"],["SummaryLine","- `message` (string) - a message to show below the title"]],"Kind":"Regular","Index":null,"Name":"showActionSheetWithOptions","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ActionSheetIOSOptions","FullName":""}]},{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"buttonIndex","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Display the iOS share sheet. The `options` object should contain"],["SummaryLine","one or both of `message` and `url` and can additionally have"],["SummaryLine","a `subject` or `excludedActivityTypes`:"],["SummaryLine",""],["SummaryLine","- `url` (string) - a URL to share"],["SummaryLine","- `message` (string) - a message to share"],["SummaryLine","- `subject` (string) - a subject for the message"],["SummaryLine","- `excludedActivityTypes` (array) - the activities to exclude from the ActionSheet"],["SummaryLine",""],["SummaryLine","NOTE: if `url` points to a local file, or is a base64-encoded"],["SummaryLine","uri, the file it points to will be loaded and shared directly."],["SummaryLine","In this way, you can share images, videos, PDF files, etc."]],"Kind":"Regular","Index":null,"Name":"showShareActionSheetWithOptions","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ShareActionSheetIOSOptions","FullName":""}]},{"Comment":null,"Name":"failureCallback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Error","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"successCallback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"success","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]},{"Comment":null,"Name":"``method``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"ShareContent","Type":["Union",{"Option":false,"Types":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"message","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"url","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]]}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ShareOptions","FullName":"ShareOptions","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"dialogTitle","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"excludedActivityTypes","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ShareStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Open a dialog to share text content."],["SummaryLine",""],["SummaryLine","In iOS, Returns a Promise which will be invoked an object containing `action`, `activityType`."],["SummaryLine","If the user dismissed the dialog, the Promise will still be resolved with action being `Share.dismissedAction`"],["SummaryLine","and all the other keys being undefined."],["SummaryLine",""],["SummaryLine","In Android, Returns a Promise which always be resolved with action being `Share.sharedAction`."],["SummaryLine",""],["SummaryLine","### Content"],["SummaryLine",""],["SummaryLine","  - `message` - a message to share"],["SummaryLine","  - `title` - title of the message"],["SummaryLine",""],["SummaryLine","#### iOS"],["SummaryLine",""],["SummaryLine","  - `url` - an URL to share"],["SummaryLine",""],["SummaryLine","At least one of URL and message is required."],["SummaryLine",""],["SummaryLine","### Options"],["SummaryLine",""],["SummaryLine","#### iOS"],["SummaryLine",""],["SummaryLine","- `excludedActivityTypes`"],["SummaryLine","- `tintColor`"],["SummaryLine",""],["SummaryLine","#### Android"],["SummaryLine",""],["SummaryLine","- `dialogTitle`"]],"Kind":"Regular","IsStatic":false,"Name":"share","TypeParameters":[],"Params":[{"Comment":null,"Name":"content","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ShareContent","FullName":""}]},{"Comment":null,"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ShareOptions","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"Object","FullName":""}]]}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"sharedAction","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"dismissedAction","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityEventName","FullName":"AccessibilityEventName","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"change","Type":"String","Value":"change"},{"Name":"announcementFinished","Type":"String","Value":"announcementFinished"}]}]],"Accessibility":null}],["Alias",{"Name":"AccessibilityChangeEvent","Type":["Mapped",{"Name":"bool","FullName":"bool"}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityAnnoucementFinishedEvent","FullName":"AccessibilityAnnoucementFinishedEvent","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"announcement","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"success","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"AccessibilityEvent","Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"AccessibilityChangeEvent","FullName":""}],["Mapped",{"Name":"AccessibilityAnnoucementFinishedEvent","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityInfoStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Query whether a screen reader is currently enabled."],["SummaryLine","Returns a promise which resolves to a boolean. The result is true when a screen reader is enabled and false otherwise."]],"Kind":"Regular","Index":null,"Name":"fetch","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Add an event handler. Supported events:"],["SummaryLine","  - change: Fires when the state of the screen reader changes."],["SummaryLine","            The argument to the event handler is a boolean."],["SummaryLine","            The boolean is true when a screen reader is enabled and false otherwise."],["SummaryLine",""],["SummaryLine","- announcementFinished: iOS-only event. Fires when the screen reader has finished making an announcement."],["SummaryLine","                         The argument to the event handler is a dictionary with these keys:"],["SummaryLine","                          - announcement: The string announced by the screen reader."],["SummaryLine","                          - success: A boolean indicating whether the announcement was successfully made."]],"Kind":"Regular","Index":null,"Name":"addEventListener","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AccessibilityEventName","FullName":""}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AccessibilityEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Remove an event handler."]],"Kind":"Regular","Index":null,"Name":"removeEventListener","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AccessibilityEventName","FullName":""}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AccessibilityEvent","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set acessibility focus to a react component."]],"Kind":"Regular","Index":null,"Name":"setAccessibilityFocus","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"reactTag","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Post a string to be announced by the screen reader."]],"Kind":"Regular","Index":null,"Name":"announceForAccessibility","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"announcement","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AlertButton","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"text","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Mapped",{"Name":"AlertButtonStyle","FullName":"AlertButtonStyle"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AlertOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"cancelable","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onDismiss","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Launches an alert dialog with the specified title and message."],["SummaryLine",""],["SummaryLine","Optionally provide a list of buttons. Tapping any button will fire the"],["SummaryLine","respective onPress callback and dismiss the alert. By default, the only"],["SummaryLine","button will be an 'OK' button."],["SummaryLine",""],["SummaryLine","This is an API that works both on iOS and Android and can show static"],["SummaryLine","alerts. To show an alert that prompts the user to enter some information,"],["SummaryLine","see `AlertIOS`; entering text in an alert is common on iOS only."],["SummaryLine",""],["SummaryLine","## iOS"],["SummaryLine",""],["SummaryLine","On iOS you can specify any number of buttons. Each button can optionally"],["SummaryLine","specify a style, which is one of 'default', 'cancel' or 'destructive'."],["SummaryLine",""],["SummaryLine","## Android"],["SummaryLine",""],["SummaryLine","On Android at most three buttons can be specified. Android has a concept"],["SummaryLine","of a neutral, negative and a positive button:"],["SummaryLine",""],["SummaryLine","   - If you specify one button, it will be the 'positive' one (such as 'OK')"],["SummaryLine","   - Two buttons mean 'negative', 'positive' (such as 'Cancel', 'OK')"],["SummaryLine","   - Three buttons mean 'neutral', 'negative', 'positive' (such as 'Later', 'Cancel', 'OK')"],["SummaryLine",""],["SummaryLine","```"],["SummaryLine","// Works on both iOS and Android"],["SummaryLine","Alert.alert("],["SummaryLine","   'Alert Title',"],["SummaryLine","   'My Alert Msg',"],["SummaryLine","   ["],["SummaryLine","     {text: 'Ask me later', onPress: () => console.log('Ask me later pressed')},"],["SummaryLine","     {text: 'Cancel', onPress: () => console.log('Cancel Pressed'), style: 'cancel'},"],["SummaryLine","     {text: 'OK', onPress: () => console.log('OK Pressed')},"],["SummaryLine","   ]"],["SummaryLine",")"],["SummaryLine","```"]],"IsStatic":false,"IsClass":false,"Name":"AlertStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alert","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"title","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"buttons","Optional":true,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"AlertButton","FullName":""}]]},{"Comment":null,"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AlertOptions","FullName":""}]},{"Comment":null,"Name":"``type``","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Wrapper around the Android native module."]],"IsStatic":false,"IsClass":false,"Name":"AlertAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alert","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"title","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"buttons","Optional":true,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"AlertButton","FullName":""}]]},{"Comment":null,"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AlertOptions","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","//FIXME: No documentation - inferred from RCTAdSupport.m"]],"IsStatic":false,"IsClass":false,"Name":"AdSupportIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"getAdvertisingId","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"onSuccess","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"deviceId","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"onFailure","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"err","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Error","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"getAdvertisingTrackingEnabled","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"onSuccess","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"hasTracking","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"onFailure","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"err","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Error","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AlertIOSButton","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"text","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPress","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Mapped",{"Name":"AlertButtonStyle","FullName":"AlertButtonStyle"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AlertType","FullName":"AlertType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"default","Type":"String","Value":"default"},{"Name":"plain-text","Type":"String","Value":"plain-text"},{"Name":"secure-text","Type":"String","Value":"secure-text"},{"Name":"login-password","Type":"String","Value":"login-password"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AlertIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Create and display a popup alert."]],"Kind":"Regular","Index":null,"Name":"alert","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"title","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callbackOrButtons","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"AlertIOSButton","FullName":""}]]}]]}]},{"Comment":null,"Name":"``type``","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AlertType","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Create and display a prompt to enter some text."]],"Kind":"Regular","Index":null,"Name":"prompt","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"title","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callbackOrButtons","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"AlertIOSButton","FullName":""}]]}]]}]},{"Comment":null,"Name":"``type``","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"AlertType","FullName":""}]},{"Comment":null,"Name":"defaultValue","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"keyboardType","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"KeyboardType","FullName":""}],["Mapped",{"Name":"KeyboardTypeIOS","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AppStateEvent","FullName":"AppStateEvent","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"change","Type":"String","Value":"change"},{"Name":"memoryWarning","Type":"String","Value":"memoryWarning"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AppStateStatus","FullName":"AppStateStatus","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"active","Type":"String","Value":"active"},{"Name":"background","Type":"String","Value":"background"},{"Name":"inactive","Type":"String","Value":"inactive"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AppStateStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"currentState","Option":false,"Type":["Mapped",{"Name":"AppStateStatus","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Add a handler to AppState changes by listening to the change event"],["SummaryLine","type and providing the handler"]],"Kind":"Regular","IsStatic":false,"Name":"addEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AppStateEvent","FullName":""}]},{"Comment":null,"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"state","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AppStateStatus","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Remove a handler by passing the change event type and the handler"]],"Kind":"Regular","IsStatic":false,"Name":"removeEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AppStateEvent","FullName":""}]},{"Comment":null,"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"state","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"AppStateStatus","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","AsyncStorage is a simple, unencrypted, asynchronous, persistent, key-value storage"],["SummaryLine","system that is global to the app.  It should be used instead of LocalStorage."],["SummaryLine",""],["SummaryLine","It is recommended that you use an abstraction on top of `AsyncStorage`"],["SummaryLine","instead of `AsyncStorage` directly for anything more than light usage since"],["SummaryLine","it operates globally."],["SummaryLine",""],["SummaryLine","On iOS, `AsyncStorage` is backed by native code that stores small values in a"],["SummaryLine","serialized dictionary and larger values in separate files. On Android,"],["SummaryLine","`AsyncStorage` will use either [RocksDB](http://rocksdb.org/) or SQLite"],["SummaryLine","based on what is available."]],"IsStatic":false,"IsClass":false,"Name":"AsyncStorageStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Fetches key and passes the result to callback, along with an Error if there is any."]],"Kind":"Regular","IsStatic":false,"Name":"getItem","TypeParameters":[],"Params":[{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Error","FullName":""}]},{"Comment":null,"Name":"result","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"string","FullName":"string"}]]}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Sets value for key and calls callback on completion, along with an Error if there is any"]],"Kind":"Regular","IsStatic":false,"Name":"setItem","TypeParameters":[],"Params":[{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Error","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"removeItem","TypeParameters":[],"Params":[{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Error","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Merges existing value with input value, assuming they are stringified json. Returns a Promise object."],["SummaryLine","Not supported by all native implementation"]],"Kind":"Regular","IsStatic":false,"Name":"mergeItem","TypeParameters":[],"Params":[{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Error","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Erases all AsyncStorage for all clients, libraries, etc. You probably don't want to call this."],["SummaryLine","Use removeItem or multiRemove to clear only your own keys instead."]],"Kind":"Regular","IsStatic":false,"Name":"clear","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Error","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets all keys known to the app, for all callers, libraries, etc"]],"Kind":"Regular","IsStatic":false,"Name":"getAllKeys","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Error","FullName":""}]},{"Comment":null,"Name":"keys","Optional":true,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","multiGet invokes callback with an array of key-value pair arrays that matches the input format of multiSet"]],"Kind":"Regular","IsStatic":false,"Name":"multiGet","TypeParameters":[],"Params":[{"Comment":null,"Name":"keys","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]]},{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"errors","Optional":true,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"Error","FullName":""}]]},{"Comment":null,"Name":"result","Optional":true,"ParamArray":false,"Type":["Array",["Tuple",{"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"string","FullName":"string"}]],"Kind":"Tuple"}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Array",["Tuple",{"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"string","FullName":"string"}]],"Kind":"Tuple"}]]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","multiSet and multiMerge take arrays of key-value array pairs that match the output of multiGet,"],["SummaryLine",""],["SummaryLine","multiSet([['k1', 'val1'], ['k2', 'val2']], cb);"]],"Kind":"Regular","IsStatic":false,"Name":"multiSet","TypeParameters":[],"Params":[{"Comment":null,"Name":"keyValuePairs","Optional":false,"ParamArray":false,"Type":["Array",["Array",["Mapped",{"Name":"string","FullName":"string"}]]]},{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"errors","Optional":true,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"Error","FullName":""}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Delete all the keys in the keys array."]],"Kind":"Regular","IsStatic":false,"Name":"multiRemove","TypeParameters":[],"Params":[{"Comment":null,"Name":"keys","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]]},{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"errors","Optional":true,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"Error","FullName":""}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Merges existing values with input values, assuming they are stringified json."],["SummaryLine","Returns a Promise object."],["SummaryLine",""],["SummaryLine","Not supported by all native implementations."]],"Kind":"Regular","IsStatic":false,"Name":"multiMerge","TypeParameters":[],"Params":[{"Comment":null,"Name":"keyValuePairs","Optional":false,"ParamArray":false,"Type":["Array",["Array",["Mapped",{"Name":"string","FullName":"string"}]]]},{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"errors","Optional":true,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"Error","FullName":""}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"unit","FullName":"unit"}]]}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"BackPressEventName","Type":["StringLiteral","hardwareBackPress"],"TypeParameters":[]}],["Interface",{"Comments":[["SummaryLine","Detect hardware back button presses, and programmatically invoke the"],["SummaryLine","default back button functionality to exit the app if there are no"],["SummaryLine","listeners or if none of the listeners return true."],["SummaryLine","Methods don't have more detailed documentation as of 0.25."]],"IsStatic":false,"IsClass":false,"Name":"BackAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"exitApp","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"addEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BackPressEventName","FullName":""}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"removeEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BackPressEventName","FullName":""}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Detect hardware back button presses, and programmatically invoke the"],["SummaryLine","default back button functionality to exit the app if there are no"],["SummaryLine","listeners or if none of the listeners return true."],["SummaryLine","Methods don't have more detailed documentation as of 0.25."]],"IsStatic":false,"IsClass":false,"Name":"BackHandlerStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"exitApp","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"addEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BackPressEventName","FullName":""}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"NativeEventSubscription","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"removeEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"BackPressEventName","FullName":""}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ButtonProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPress","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"ev","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"NativeTouchEvent","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"color","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"accessibilityLabel","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"disabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this button in end-to-end tests."]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Button","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ButtonProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ButtonStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Button","FullName":"Button"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CameraRollGroupType","FullName":"CameraRollGroupType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"Album","Type":"String","Value":"Album"},{"Name":"All","Type":"String","Value":"All"},{"Name":"Event","Type":"String","Value":"Event"},{"Name":"Faces","Type":"String","Value":"Faces"},{"Name":"Library","Type":"String","Value":"Library"},{"Name":"PhotoStream","Type":"String","Value":"PhotoStream"},{"Name":"SavedPhotos","Type":"String","Value":"SavedPhotos"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CameraRollAssetType","FullName":"CameraRollAssetType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"All","Type":"String","Value":"All"},{"Name":"Videos","Type":"String","Value":"Videos"},{"Name":"Photos","Type":"String","Value":"Photos"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CameraRollFetchParams","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"first","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"after","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"groupTypes","Option":true,"Type":["Mapped",{"Name":"CameraRollGroupType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"groupName","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"assetType","Option":true,"Type":["Mapped",{"Name":"CameraRollAssetType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CameraRollNodeInfo","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"image","Option":false,"Type":["Mapped",{"Name":"Image","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"group_name","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"timestamp","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"location","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CameraRollEdgeInfo","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"node","Option":false,"Type":["Mapped",{"Name":"CameraRollNodeInfo","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CameraRollAssetInfo","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"edges","Option":false,"Type":["Array",["Mapped",{"Name":"CameraRollEdgeInfo","FullName":""}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"page_info","Option":false,"Type":["Mapped",{"Name":"CameraRollAssetInfoPage_info","FullName":"CameraRollAssetInfoPage_info"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GetPhotosParamType","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"first","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"after","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"groupTypes","Option":true,"Type":["Mapped",{"Name":"CameraRollGroupType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"groupName","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"assetType","Option":true,"Type":["Mapped",{"Name":"CameraRollAssetType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"mimeTypes","Option":true,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GetPhotosReturnType","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"edges","Option":false,"Type":["Array",["Mapped",{"Name":"GetPhotosReturnTypeEdges","FullName":"GetPhotosReturnTypeEdges"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"page_info","Option":false,"Type":["Mapped",{"Name":"GetPhotosReturnTypePage_info","FullName":"GetPhotosReturnTypePage_info"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","CameraRoll provides access to the local camera roll / gallery."],["SummaryLine","Before using this you must link the RCTCameraRoll library."],["SummaryLine","You can refer to (Linking)[https://facebook.github.io/react-native/docs/linking-libraries-ios.html] for help."]],"IsStatic":false,"IsClass":false,"Name":"CameraRollStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"GroupTypesOptions","Option":false,"Type":["Array",["Mapped",{"Name":"CameraRollGroupType","FullName":""}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AssetTypeOptions","Option":false,"Type":["Array",["Mapped",{"Name":"CameraRollAssetType","FullName":""}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Saves the image to the camera roll / gallery."]],"Kind":"Regular","IsStatic":false,"Name":"saveImageWithTag","TypeParameters":[],"Params":[{"Comment":null,"Name":"tag","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Saves the photo or video to the camera roll / gallery."],["SummaryLine",""],["SummaryLine","On Android, the tag must be a local image or video URI, such as `\"file:///sdcard/img.png\"`."],["SummaryLine",""],["SummaryLine","On iOS, the tag can be any image URI (including local, remote asset-library and base64 data URIs)"],["SummaryLine","or a local video file URI (remote or data URIs are not supported for saving video at this time)."],["SummaryLine",""],["SummaryLine","If the tag has a file extension of .mov or .mp4, it will be inferred as a video. Otherwise"],["SummaryLine","it will be treated as a photo. To override the automatic choice, you can pass an optional"],["SummaryLine","`type` parameter that must be one of 'photo' or 'video'."],["SummaryLine",""],["SummaryLine","Returns a Promise which will resolve with the new URI."]],"Kind":"Regular","IsStatic":false,"Name":"saveToCameraRoll","TypeParameters":[],"Params":[{"Comment":null,"Name":"tag","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"``type``","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"CameraRollStaticSaveToCameraRollType","FullName":"CameraRollStaticSaveToCameraRollType"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invokes callback with photo identifier objects from the local camera roll of the device matching shape defined by getPhotosReturnChecker."]],"Kind":"Regular","IsStatic":false,"Name":"getPhotos","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"params","Description":["See getPhotosParamChecker."]}],"Name":"``params``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GetPhotosParamType","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"GetPhotosReturnType","FullName":""}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CameraRollStaticSaveToCameraRollType","FullName":"CameraRollStaticSaveToCameraRollType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"photo","Type":"String","Value":"photo"},{"Name":"video","Type":"String","Value":"video"}]}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Clipboard gives you an interface for setting and getting content from Clipboard on both iOS and Android"]],"IsStatic":false,"IsClass":false,"Name":"ClipboardStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"getString","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setString","TypeParameters":[],"Params":[{"Comment":null,"Name":"content","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DatePickerAndroidOpenOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"date","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"DateTime","FullName":""}],["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"minDate","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"DateTime","FullName":""}],["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"maxDate","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"DateTime","FullName":""}],["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"mode","Option":true,"Type":["Mapped",{"Name":"DatePickerAndroidOpenOptionsMode","FullName":"DatePickerAndroidOpenOptionsMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DatePickerAndroidOpenReturn","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"action","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"year","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"month","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"day","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DatePickerAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Opens the standard Android date picker dialog."],["SummaryLine",""],["SummaryLine","The available keys for the options object are:"],["SummaryLine","- date (Date object or timestamp in milliseconds) - date to show by default"],["SummaryLine","- minDate (Date or timestamp in milliseconds) - minimum date that can be selected"],["SummaryLine","- maxDate (Date object or timestamp in milliseconds) - maximum date that can be selected"],["SummaryLine","- mode (enum('calendar', 'spinner', 'default')) - To set the date-picker mode to calendar/spinner/default"],["SummaryLine","  - 'calendar': Show a date picker in calendar mode."],["SummaryLine","  - 'spinner': Show a date picker in spinner mode."],["SummaryLine","  - 'default': Show a default native date picker(spinner/calendar) based on android versions."],["SummaryLine",""],["SummaryLine","Returns a Promise which will be invoked an object containing action, year, month (0-11), day if the user picked a date."],["SummaryLine","If the user dismissed the dialog, the Promise will still be resolved with action being DatePickerAndroid.dismissedAction and all the other keys being undefined."],["SummaryLine","Always check whether the action before reading the values."],["SummaryLine",""],["SummaryLine","Note the native date picker dialog has some UI glitches on Android 4 and lower when using the minDate and maxDate options."]],"Kind":"Regular","IsStatic":false,"Name":"``open``","TypeParameters":[],"Params":[{"Comment":null,"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"DatePickerAndroidOpenOptions","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"DatePickerAndroidOpenReturn","FullName":""}]]}],"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A date has been selected."]],"Kind":"Regular","Index":null,"Name":"dateSetAction","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The dialog has been dismissed."]],"Kind":"Regular","Index":null,"Name":"dismissedAction","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IntentAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Starts a corresponding external activity for the given URL."],["SummaryLine",""],["SummaryLine","  For example, if the URL is \"https://www.facebook.com\", the system browser will be opened, or the \"choose application\" dialog will be shown."],["SummaryLine",""],["SummaryLine","  You can use other URLs, like a location (e.g. \"geo:37.484847,-122.148386\"), a contact, or any other URL that can be opened with {@code Intent.ACTION_VIEW}."],["SummaryLine",""],["SummaryLine","  NOTE: This method will fail if the system doesn't know how to open the specified URL. If you're passing in a non-http(s) URL, it's best to check {@code canOpenURL} first."],["SummaryLine",""],["SummaryLine","  NOTE: For web URLs, the protocol (\"http://\", \"https://\") must be set accordingly!"]],"Kind":"Regular","IsStatic":false,"Name":"openURL","TypeParameters":[],"Params":[{"Comment":null,"Name":"url","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Determine whether or not an installed app can handle a given URL."],["SummaryLine",""],["SummaryLine","  You can use other URLs, like a location (e.g. \"geo:37.484847,-122.148386\"), a contact, or any other URL that can be opened with {@code Intent.ACTION_VIEW}."],["SummaryLine",""],["SummaryLine","  NOTE: For web URLs, the protocol (\"http://\", \"https://\") must be set accordingly!"]],"Kind":"Regular","IsStatic":false,"Name":"canOpenURL","TypeParameters":[],"Params":[{"Comment":null,"Name":"url","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"supported","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","If the app launch was triggered by an app link with {@code Intent.ACTION_VIEW}, it will give the link url, otherwise it will give null"],["SummaryLine",""],["SummaryLine","  Refer http://developer.android.com/training/app-indexing/deep-linking.html#handling-intents"]],"Kind":"Regular","IsStatic":false,"Name":"getInitialURL","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"url","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LinkingStatic","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"NativeEventEmitter","FullName":"\"node_modules/@types/react-native/index\".NativeEventEmitter"}]],"Members":[["Function",{"Comments":[["SummaryLine","Add a handler to Linking changes by listening to the `url` event type"],["SummaryLine","and providing the handler"]],"Kind":"Regular","IsStatic":false,"Name":"addEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LinkingStaticAddEventListener","FullName":"LinkingStaticAddEventListener"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Remove a handler by passing the `url` event type and the handler"]],"Kind":"Regular","IsStatic":false,"Name":"removeEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LinkingStaticAddEventListener","FullName":"LinkingStaticAddEventListener"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Try to open the given url with any of the installed apps."],["SummaryLine","You can use other URLs, like a location (e.g. \"geo:37.484847,-122.148386\"), a contact, or any other URL that can be opened with the installed apps."],["SummaryLine","NOTE: This method will fail if the system doesn't know how to open the specified URL. If you're passing in a non-http(s) URL, it's best to check {@code canOpenURL} first."],["SummaryLine","NOTE: For web URLs, the protocol (\"http://\", \"https://\") must be set accordingly!"]],"Kind":"Regular","IsStatic":false,"Name":"openURL","TypeParameters":[],"Params":[{"Comment":null,"Name":"url","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Determine whether or not an installed app can handle a given URL."],["SummaryLine","NOTE: For web URLs, the protocol (\"http://\", \"https://\") must be set accordingly!"],["SummaryLine","NOTE: As of iOS 9, your app needs to provide the LSApplicationQueriesSchemes key inside Info.plist."]],"Kind":"Regular","IsStatic":false,"Name":"canOpenURL","TypeParameters":[],"Params":[{"Comment":null,"Name":"url","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","If the app launch was triggered by an app link with, it will give the link url, otherwise it will give null"],["SummaryLine","NOTE: To support deep linking on Android, refer http://developer.android.com/training/app-indexing/deep-linking.html#handling-intents"]],"Kind":"Regular","IsStatic":false,"Name":"getInitialURL","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LinkingIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Add a handler to LinkingIOS changes by listening to the url event type and providing the handler"]],"Kind":"Regular","IsStatic":false,"Name":"addEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LinkingStaticAddEventListener","FullName":"LinkingStaticAddEventListener"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Remove a handler by passing the url event type and the handler"]],"Kind":"Regular","IsStatic":false,"Name":"removeEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"LinkingStaticAddEventListener","FullName":"LinkingStaticAddEventListener"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Try to open the given url with any of the installed apps."]],"Kind":"Regular","IsStatic":false,"Name":"openURL","TypeParameters":[],"Params":[{"Comment":null,"Name":"url","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Determine whether or not an installed app can handle a given URL. The callback function will be called with bool supported as the only argument"],["SummaryLine","NOTE: As of iOS 9, your app needs to provide the LSApplicationQueriesSchemes key inside Info.plist."]],"Kind":"Regular","IsStatic":false,"Name":"canOpenURL","TypeParameters":[],"Params":[{"Comment":null,"Name":"url","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"supported","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","If the app launch was triggered by an app link, it will pop the link url, otherwise it will return null"]],"Kind":"Regular","IsStatic":false,"Name":"popInitialURL","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ConnectionType","FullName":"ConnectionType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"wifi","Type":"String","Value":"wifi"},{"Name":"cell","Type":"String","Value":"cell"},{"Name":"unknown","Type":"String","Value":"unknown"},{"Name":"NONE","Type":"String","Value":"NONE"},{"Name":"MOBILE","Type":"String","Value":"MOBILE"},{"Name":"WIFI","Type":"String","Value":"WIFI"},{"Name":"MOBILE_MMS","Type":"String","Value":"MOBILE_MMS"},{"Name":"MOBILE_SUPL","Type":"String","Value":"MOBILE_SUPL"},{"Name":"MOBILE_DUN","Type":"String","Value":"MOBILE_DUN"},{"Name":"MOBILE_HIPRI","Type":"String","Value":"MOBILE_HIPRI"},{"Name":"WIMAX","Type":"String","Value":"WIMAX"},{"Name":"BLUETOOTH","Type":"String","Value":"BLUETOOTH"},{"Name":"DUMMY","Type":"String","Value":"DUMMY"},{"Name":"ETHERNET","Type":"String","Value":"ETHERNET"},{"Name":"MOBILE_FOTA","Type":"String","Value":"MOBILE_FOTA"},{"Name":"MOBILE_IMS","Type":"String","Value":"MOBILE_IMS"},{"Name":"MOBILE_CBS","Type":"String","Value":"MOBILE_CBS"},{"Name":"WIFI_P2P","Type":"String","Value":"WIFI_P2P"},{"Name":"MOBILE_IA","Type":"String","Value":"MOBILE_IA"},{"Name":"MOBILE_EMERGENCY","Type":"String","Value":"MOBILE_EMERGENCY"},{"Name":"PROXY","Type":"String","Value":"PROXY"},{"Name":"VPN","Type":"String","Value":"VPN"},{"Name":"UNKNOWN","Type":"String","Value":"UNKNOWN"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EffectiveConnectionType","FullName":"EffectiveConnectionType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"2g","Type":"String","Value":"2g"},{"Name":"3g","Type":"String","Value":"3g"},{"Name":"4g","Type":"String","Value":"4g"},{"Name":"unknown","Type":"String","Value":"unknown"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ConnectionInfo","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"ConnectionType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"effectiveType","Option":false,"Type":["Mapped",{"Name":"EffectiveConnectionType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NetInfoStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","This function is deprecated. Use `getConnectionInfo` instead. Returns a promise that"],["SummaryLine","resolves with one of the deprecated connectivity types listed above."]],"Kind":"Regular","Index":null,"Name":"fetch","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ConnectionType","FullName":""}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Adds an event handler. Supported events:"],["SummaryLine",""],["SummaryLine","- `connectionChange`: Fires when the network status changes. The argument to the event"],["SummaryLine","   handler is an object with keys:"],["SummaryLine","   - `type`: A `DeprecatedConnectionType` (listed above)"],["SummaryLine","   - `effectiveType`: An `EffectiveConnectionType` (listed above)"],["SummaryLine","- `change`: This event is deprecated. Listen to `connectionChange` instead. Fires when"],["SummaryLine","   the network status changes. The argument to the event handler is one of the deprecated"],["SummaryLine","   connectivity types listed above."]],"Kind":"Regular","Index":null,"Name":"addEventListener","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"result","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ConnectionInfo","FullName":""}],["Mapped",{"Name":"ConnectionType","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Removes the listener for network status changes."]],"Kind":"Regular","Index":null,"Name":"removeEventListener","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"result","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"ConnectionInfo","FullName":""}],["Mapped",{"Name":"ConnectionType","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Returns a promise that resolves to an object with `type` and `effectiveType` keys"],["SummaryLine","whose values are a `ConnectionType` and an `EffectiveConnectionType`, (described above),"],["SummaryLine","respectively."]],"Kind":"Regular","Index":null,"Name":"getConnectionInfo","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ConnectionInfo","FullName":""}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","An object with the same methods as above but the listener receives a"],["SummaryLine","boolean which represents the internet connectivity."],["SummaryLine","Use this if you are only interested with whether the device has internet"],["SummaryLine","connectivity."]],"Kind":"Regular","Index":null,"Name":"isConnected","Option":false,"Type":["Mapped",{"Name":"NetInfoStaticIsConnected","FullName":"NetInfoStaticIsConnected"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Detect if the current active connection is"],["SummaryLine","metered or not. A network is classified as metered when the user is"],["SummaryLine","sensitive to heavy data usage on that connection due to monetary"],["SummaryLine","costs, data limitations or battery/performance issues."]],"Kind":"Regular","Index":null,"Name":"isConnectionExpensive","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PanResponderGestureState","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","ID of the gestureState- persisted as long as there at least one touch on"]],"Kind":"Regular","Index":null,"Name":"stateID","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","the latest screen coordinates of the recently-moved touch"]],"Kind":"Regular","Index":null,"Name":"moveX","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","the latest screen coordinates of the recently-moved touch"]],"Kind":"Regular","Index":null,"Name":"moveY","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","the screen coordinates of the responder grant"]],"Kind":"Regular","Index":null,"Name":"x0","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","the screen coordinates of the responder grant"]],"Kind":"Regular","Index":null,"Name":"y0","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","accumulated distance of the gesture since the touch started"]],"Kind":"Regular","Index":null,"Name":"dx","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","accumulated distance of the gesture since the touch started"]],"Kind":"Regular","Index":null,"Name":"dy","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","current velocity of the gesture"]],"Kind":"Regular","Index":null,"Name":"vx","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","current velocity of the gesture"]],"Kind":"Regular","Index":null,"Name":"vy","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Number of touches currently on screen"]],"Kind":"Regular","Index":null,"Name":"numberActiveTouches","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"_accountsForMovesUpTo","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PanResponderCallbacks","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onMoveShouldSetPanResponder","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onStartShouldSetPanResponder","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPanResponderGrant","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPanResponderMove","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPanResponderRelease","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPanResponderTerminate","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onMoveShouldSetPanResponderCapture","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onStartShouldSetPanResponderCapture","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPanResponderReject","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPanResponderStart","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPanResponderEnd","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onPanResponderTerminationRequest","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"onShouldBlockNativeResponder","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"e","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GestureResponderEvent","FullName":""}]},{"Comment":null,"Name":"gestureState","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderGestureState","FullName":""}]}],"ReturnType":["Mapped",{"Name":"bool","FullName":"bool"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PanResponderInstance","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"panHandlers","Option":false,"Type":["Mapped",{"Name":"GestureResponderHandlers","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","PanResponder reconciles several touches into a single gesture."],["SummaryLine","It makes single-touch gestures resilient to extra touches,"],["SummaryLine","and can be used to recognize simple multi-touch gestures."],["SummaryLine",""],["SummaryLine","It provides a predictable wrapper of the responder handlers provided by the gesture responder system."],["SummaryLine","For each handler, it provides a new gestureState object alongside the normal event."]],"IsStatic":false,"IsClass":false,"Name":"PanResponderStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"create","TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"config","Description":["Enhanced versions of all of the responder callbacks","that provide not only the typical `ResponderSyntheticEvent`, but also the","`PanResponder` gesture state.  Simply replace the word `Responder` with","`PanResponder` in each of the typical `onResponder*` callbacks. For","example, the `config` object would look like:","","- `onMoveShouldSetPanResponder: (e, gestureState) => {...}`","- `onMoveShouldSetPanResponderCapture: (e, gestureState) => {...}`","- `onStartShouldSetPanResponder: (e, gestureState) => {...}`","- `onStartShouldSetPanResponderCapture: (e, gestureState) => {...}`","- `onPanResponderReject: (e, gestureState) => {...}`","- `onPanResponderGrant: (e, gestureState) => {...}`","- `onPanResponderStart: (e, gestureState) => {...}`","- `onPanResponderEnd: (e, gestureState) => {...}`","- `onPanResponderRelease: (e, gestureState) => {...}`","- `onPanResponderMove: (e, gestureState) => {...}`","- `onPanResponderTerminate: (e, gestureState) => {...}`","- `onPanResponderTerminationRequest: (e, gestureState) => {...}`","- `onShouldBlockNativeResponder: (e, gestureState) => {...}`","","In general, for events that have capture equivalents, we update the","gestureState once in the capture phase and can use it in the bubble phase","as well.","","Be careful with onStartShould* callbacks. They only reflect updated","`gestureState` for start/end events that bubble/capture to the Node.","Once the node is the responder, you can rely on every start/end event","being processed by the gesture and `gestureState` being updated","accordingly. (numberActiveTouches) may not be totally accurate unless you","are the responder."]}],"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PanResponderCallbacks","FullName":""}]}],"ReturnType":["Mapped",{"Name":"PanResponderInstance","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Rationale","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"message","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"Permission","FullName":"Permission","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"android.permission.READ_CALENDAR","Type":"String","Value":"android.permission.READ_CALENDAR"},{"Name":"android.permission.WRITE_CALENDAR","Type":"String","Value":"android.permission.WRITE_CALENDAR"},{"Name":"android.permission.CAMERA","Type":"String","Value":"android.permission.CAMERA"},{"Name":"android.permission.READ_CONTACTS","Type":"String","Value":"android.permission.READ_CONTACTS"},{"Name":"android.permission.WRITE_CONTACTS","Type":"String","Value":"android.permission.WRITE_CONTACTS"},{"Name":"android.permission.GET_ACCOUNTS","Type":"String","Value":"android.permission.GET_ACCOUNTS"},{"Name":"android.permission.ACCESS_FINE_LOCATION","Type":"String","Value":"android.permission.ACCESS_FINE_LOCATION"},{"Name":"android.permission.ACCESS_COARSE_LOCATION","Type":"String","Value":"android.permission.ACCESS_COARSE_LOCATION"},{"Name":"android.permission.RECORD_AUDIO","Type":"String","Value":"android.permission.RECORD_AUDIO"},{"Name":"android.permission.READ_PHONE_STATE","Type":"String","Value":"android.permission.READ_PHONE_STATE"},{"Name":"android.permission.CALL_PHONE","Type":"String","Value":"android.permission.CALL_PHONE"},{"Name":"android.permission.READ_CALL_LOG","Type":"String","Value":"android.permission.READ_CALL_LOG"},{"Name":"android.permission.WRITE_CALL_LOG","Type":"String","Value":"android.permission.WRITE_CALL_LOG"},{"Name":"com.android.voicemail.permission.ADD_VOICEMAIL","Type":"String","Value":"com.android.voicemail.permission.ADD_VOICEMAIL"},{"Name":"android.permission.USE_SIP","Type":"String","Value":"android.permission.USE_SIP"},{"Name":"android.permission.PROCESS_OUTGOING_CALLS","Type":"String","Value":"android.permission.PROCESS_OUTGOING_CALLS"},{"Name":"android.permission.BODY_SENSORS","Type":"String","Value":"android.permission.BODY_SENSORS"},{"Name":"android.permission.SEND_SMS","Type":"String","Value":"android.permission.SEND_SMS"},{"Name":"android.permission.RECEIVE_SMS","Type":"String","Value":"android.permission.RECEIVE_SMS"},{"Name":"android.permission.READ_SMS","Type":"String","Value":"android.permission.READ_SMS"},{"Name":"android.permission.RECEIVE_WAP_PUSH","Type":"String","Value":"android.permission.RECEIVE_WAP_PUSH"},{"Name":"android.permission.RECEIVE_MMS","Type":"String","Value":"android.permission.RECEIVE_MMS"},{"Name":"android.permission.READ_EXTERNAL_STORAGE","Type":"String","Value":"android.permission.READ_EXTERNAL_STORAGE"},{"Name":"android.permission.WRITE_EXTERNAL_STORAGE","Type":"String","Value":"android.permission.WRITE_EXTERNAL_STORAGE"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PermissionStatus","FullName":"PermissionStatus","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"granted","Type":"String","Value":"granted"},{"Name":"denied","Type":"String","Value":"denied"},{"Name":"never_ask_again","Type":"String","Value":"never_ask_again"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PermissionsAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","A list of permission results that are returned"]],"Kind":"Regular","Index":null,"Name":"RESULTS","Option":false,"Type":["Mapped",{"Name":"PermissionsAndroidStaticRESULTS","FullName":"PermissionsAndroidStaticRESULTS"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A list of specified \"dangerous\" permissions that require prompting the user"]],"Kind":"Regular","Index":null,"Name":"PERMISSIONS","Option":false,"Type":["Mapped",{"Name":"PermissionsAndroidStaticPERMISSIONS","FullName":"PermissionsAndroidStaticPERMISSIONS"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Deprecated"]],"Kind":"Regular","IsStatic":false,"Name":"checkPermission","TypeParameters":[],"Params":[{"Comment":null,"Name":"permission","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Permission","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Returns a promise resolving to a boolean value as to whether the specified"],["SummaryLine","permissions has been granted"]],"Kind":"Regular","IsStatic":false,"Name":"check","TypeParameters":[],"Params":[{"Comment":null,"Name":"permission","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Permission","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Deprecated"]],"Kind":"Regular","IsStatic":false,"Name":"requestPermission","TypeParameters":[],"Params":[{"Comment":null,"Name":"permission","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Permission","FullName":""}]},{"Comment":null,"Name":"rationale","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Rationale","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Prompts the user to enable a permission and returns a promise resolving to a"],["SummaryLine","string value indicating whether the user allowed or denied the request"],["SummaryLine",""],["SummaryLine","If the optional rationale argument is included (which is an object with a"],["SummaryLine","title and message), this function checks with the OS whether it is necessary"],["SummaryLine","to show a dialog explaining why the permission is needed"],["SummaryLine","(https://developer.android.com/training/permissions/requesting.html#explain)"],["SummaryLine","and then shows the system permission dialog"]],"Kind":"Regular","IsStatic":false,"Name":"request","TypeParameters":[],"Params":[{"Comment":null,"Name":"permission","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Permission","FullName":""}]},{"Comment":null,"Name":"rationale","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"Rationale","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Prompts the user to enable multiple permissions in the same dialog and"],["SummaryLine","returns an object with the permissions as keys and strings as values"],["SummaryLine","indicating whether the user allowed or denied the request"]],"Kind":"Regular","IsStatic":false,"Name":"requestMultiple","TypeParameters":[],"Params":[{"Comment":null,"Name":"permissions","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"PermissionsAndroidStaticRequestMultiplePromise","FullName":"PermissionsAndroidStaticRequestMultiplePromise"}]]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":false,"Name":"PermissionsAndroidStaticStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"PermissionsAndroidStatic","FullName":"PermissionsAndroidStatic"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PushNotificationPermissions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alert","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"badge","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"sound","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PushNotification","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","An alias for `getAlert` to get the notification's main message string"]],"Kind":"Regular","IsStatic":false,"Name":"getMessage","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"Object","FullName":""}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the sound string from the `aps` object"]],"Kind":"Regular","IsStatic":false,"Name":"getSound","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the notification's main message from the `aps` object"]],"Kind":"Regular","IsStatic":false,"Name":"getAlert","TypeParameters":[],"Params":[],"ReturnType":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"Object","FullName":""}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the badge count number from the `aps` object"]],"Kind":"Regular","IsStatic":false,"Name":"getBadgeCount","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the data object on the notif"]],"Kind":"Regular","IsStatic":false,"Name":"getData","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"Object","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","iOS Only"],["SummaryLine","Signifies remote notification handling is complete"]],"Kind":"Regular","IsStatic":false,"Name":"finish","TypeParameters":[],"Params":[{"Comment":null,"Name":"result","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PresentLocalNotificationDetails","FullName":"PresentLocalNotificationDetails","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alertBody","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alertAction","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"soundName","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"category","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"userInfo","Option":true,"Type":["Mapped",{"Name":"Object","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"applicationIconBadgeNumber","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScheduleLocalNotificationDetails","FullName":"ScheduleLocalNotificationDetails","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"fireDate","Option":false,"Type":["Mapped",{"Name":"DateTime","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alertBody","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alertAction","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"soundName","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"category","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"userInfo","Option":true,"Type":["Mapped",{"Name":"Object","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"applicationIconBadgeNumber","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PushNotificationEventName","FullName":"PushNotificationEventName","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"notification","Type":"String","Value":"notification"},{"Name":"localNotification","Type":"String","Value":"localNotification"},{"Name":"register","Type":"String","Value":"register"},{"Name":"registrationError","Type":"String","Value":"registrationError"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FetchResult","FullName":"FetchResult","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"NewData","Option":false,"Type":["StringLiteral","UIBackgroundFetchResultNewData"],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"NoData","Option":false,"Type":["StringLiteral","UIBackgroundFetchResultNoData"],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ResultFailed","Option":false,"Type":["StringLiteral","UIBackgroundFetchResultFailed"],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Handle push notifications for your app, including permission handling and icon badge number."]],"IsStatic":false,"IsClass":false,"Name":"PushNotificationIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Schedules the localNotification for immediate presentation."],["SummaryLine","details is an object containing:"],["SummaryLine","alertBody : The message displayed in the notification alert."],["SummaryLine","alertAction : The \"action\" displayed beneath an actionable notification. Defaults to \"view\";"],["SummaryLine","soundName : The sound played when the notification is fired (optional)."],["SummaryLine","category : The category of this notification, required for actionable notifications (optional)."],["SummaryLine","userInfo : An optional object containing additional notification data."],["SummaryLine","applicationIconBadgeNumber (optional) : The number to display as the app's icon badge. The default value of this property is 0, which means that no badge is displayed."]],"Kind":"Regular","IsStatic":false,"Name":"presentLocalNotification","TypeParameters":[],"Params":[{"Comment":null,"Name":"details","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PresentLocalNotificationDetails","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Schedules the localNotification for future presentation."],["SummaryLine","details is an object containing:"],["SummaryLine","fireDate : The date and time when the system should deliver the notification."],["SummaryLine","alertBody : The message displayed in the notification alert."],["SummaryLine","alertAction : The \"action\" displayed beneath an actionable notification. Defaults to \"view\";"],["SummaryLine","soundName : The sound played when the notification is fired (optional)."],["SummaryLine","category : The category of this notification, required for actionable notifications (optional)."],["SummaryLine","userInfo : An optional object containing additional notification data."],["SummaryLine","applicationIconBadgeNumber (optional) : The number to display as the app's icon badge. Setting the number to 0 removes the icon badge."]],"Kind":"Regular","IsStatic":false,"Name":"scheduleLocalNotification","TypeParameters":[],"Params":[{"Comment":null,"Name":"details","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ScheduleLocalNotificationDetails","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Cancels all scheduled localNotifications"]],"Kind":"Regular","IsStatic":false,"Name":"cancelAllLocalNotifications","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Cancel local notifications."],["SummaryLine","Optionally restricts the set of canceled notifications to those notifications whose userInfo fields match the corresponding fields in the userInfo argument."]],"Kind":"Regular","IsStatic":false,"Name":"cancelLocalNotifications","TypeParameters":[],"Params":[{"Comment":null,"Name":"userInfo","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Object","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Sets the badge number for the app icon on the home screen"]],"Kind":"Regular","IsStatic":false,"Name":"setApplicationIconBadgeNumber","TypeParameters":[],"Params":[{"Comment":null,"Name":"number","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the current badge number for the app icon on the home screen"]],"Kind":"Regular","IsStatic":false,"Name":"getApplicationIconBadgeNumber","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"badge","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Gets the local notifications that are currently scheduled."]],"Kind":"Regular","IsStatic":false,"Name":"getScheduledLocalNotifications","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"notifications","Optional":false,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"ScheduleLocalNotificationDetails","FullName":""}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Attaches a listener to remote notifications while the app is running in the"],["SummaryLine","foreground or the background."],["SummaryLine",""],["SummaryLine","The handler will get be invoked with an instance of `PushNotificationIOS`"],["SummaryLine",""],["SummaryLine","The type MUST be 'notification'"]],"Kind":"Regular","IsStatic":false,"Name":"addEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PushNotificationIOSStaticAddEventListenerType","FullName":"PushNotificationIOSStaticAddEventListenerType"}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"notification","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PushNotification","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Fired when the user registers for remote notifications."],["SummaryLine",""],["SummaryLine","The handler will be invoked with a hex string representing the deviceToken."],["SummaryLine",""],["SummaryLine","The type MUST be 'register'"]],"Kind":["StringParam","$0.addEventListener('register',$1)"],"IsStatic":false,"Name":"addEventListener_register","TypeParameters":[],"Params":[{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"deviceToken","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Fired when the user fails to register for remote notifications."],["SummaryLine","Typically occurs when APNS is having issues, or the device is a simulator."],["SummaryLine",""],["SummaryLine","The handler will be invoked with {message: string, code: number, details: any}."],["SummaryLine",""],["SummaryLine","The type MUST be 'registrationError'"]],"Kind":["StringParam","$0.addEventListener('registrationError',$1)"],"IsStatic":false,"Name":"addEventListener_registrationError","TypeParameters":[],"Params":[{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PushNotificationIOSStaticAddEventListener_registrationError","FullName":"PushNotificationIOSStaticAddEventListener_registrationError"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Removes the event listener. Do this in `componentWillUnmount` to prevent"],["SummaryLine","memory leaks"]],"Kind":"Regular","IsStatic":false,"Name":"removeEventListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"``type``","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PushNotificationEventName","FullName":""}]},{"Comment":null,"Name":"handler","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"notification","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PushNotification","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"deviceToken","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PushNotificationIOSStaticAddEventListener_registrationError","FullName":"PushNotificationIOSStaticAddEventListener_registrationError"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Requests all notification permissions from iOS, prompting the user's"],["SummaryLine","dialog box."]],"Kind":"Regular","IsStatic":false,"Name":"requestPermissions","TypeParameters":[],"Params":[{"Comment":null,"Name":"permissions","Optional":true,"ParamArray":false,"Type":["Array",["Mapped",{"Name":"PushNotificationPermissions","FullName":""}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Requests all notification permissions from iOS, prompting the user's"],["SummaryLine","dialog box."]],"Kind":"Regular","IsStatic":false,"Name":"requestPermissions","TypeParameters":[],"Params":[{"Comment":null,"Name":"permissions","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"PushNotificationPermissions","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"PushNotificationPermissions","FullName":""}]]}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Unregister for all remote notifications received via Apple Push"],["SummaryLine","Notification service."],["SummaryLine","You should call this method in rare circumstances only, such as when"],["SummaryLine","a new version of the app removes support for all types of remote"],["SummaryLine","notifications. Users can temporarily prevent apps from receiving"],["SummaryLine","remote notifications through the Notifications section of the"],["SummaryLine","Settings app. Apps unregistered through this method can always"],["SummaryLine","re-register."]],"Kind":"Regular","IsStatic":false,"Name":"abandonPermissions","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","See what push permissions are currently enabled. `callback` will be"],["SummaryLine","invoked with a `permissions` object:"],["SummaryLine",""],["SummaryLine","  - `alert` :boolean"],["SummaryLine","  - `badge` :boolean"],["SummaryLine","  - `sound` :boolean"]],"Kind":"Regular","IsStatic":false,"Name":"checkPermissions","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"permissions","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"PushNotificationPermissions","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","This method returns a promise that resolves to either the notification"],["SummaryLine","object if the app was launched by a push notification, or `null` otherwise."]],"Kind":"Regular","IsStatic":false,"Name":"getInitialNotification","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"PushNotification","FullName":""}]]}],"Accessibility":null}],["Property",{"Comments":[["SummaryLine","iOS fetch results that best describe the result of a finished remote notification handler."],["SummaryLine","For a list of possible values, see `PushNotificationIOS.FetchResult`."]],"Kind":"Regular","Index":null,"Name":"FetchResult","Option":false,"Type":["Mapped",{"Name":"FetchResult","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PushNotificationIOSStaticAddEventListenerType","FullName":"PushNotificationIOSStaticAddEventListenerType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"notification","Type":"String","Value":"notification"},{"Name":"localNotification","Type":"String","Value":"localNotification"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SettingsStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"get","TypeParameters":[],"Params":[{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"set","TypeParameters":[],"Params":[{"Comment":null,"Name":"settings","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Object","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"watchKeys","TypeParameters":[],"Params":[{"Comment":null,"Name":"keys","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}]]}]},{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"clearWatch","TypeParameters":[],"Params":[{"Comment":null,"Name":"watchId","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"StatusBarStyle","FullName":"StatusBarStyle","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"default","Type":"String","Value":"default"},{"Name":"light-content","Type":"String","Value":"light-content"},{"Name":"dark-content","Type":"String","Value":"dark-content"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"StatusBarAnimation","FullName":"StatusBarAnimation","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"fade","Type":"String","Value":"fade"},{"Name":"slide","Type":"String","Value":"slide"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"StatusBarPropsIOS","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Sets the color of the status bar text."]],"Kind":"Regular","Index":null,"Name":"barStyle","Option":true,"Type":["Mapped",{"Name":"StatusBarStyle","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If the network activity indicator should be visible."]],"Kind":"Regular","Index":null,"Name":"networkActivityIndicatorVisible","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The transition effect when showing and hiding the status bar using"],["SummaryLine","the hidden prop. Defaults to 'fade'."]],"Kind":"Regular","Index":null,"Name":"showHideTransition","Option":true,"Type":["Mapped",{"Name":"StatusBarPropsIOSShowHideTransition","FullName":"StatusBarPropsIOSShowHideTransition"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"StatusBarPropsAndroid","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","The background color of the status bar."]],"Kind":"Regular","Index":null,"Name":"backgroundColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If the status bar is translucent. When translucent is set to true,"],["SummaryLine","the app will draw under the status bar. This is useful when using a"],["SummaryLine","semi transparent status bar color."]],"Kind":"Regular","Index":null,"Name":"translucent","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"StatusBarProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"StatusBarPropsIOS","FullName":"\"node_modules/@types/react-native/index\".StatusBarPropsIOS"}],["Mapped",{"Name":"StatusBarPropsAndroid","FullName":"\"node_modules/@types/react-native/index\".StatusBarPropsAndroid"}]],"Members":[["Property",{"Comments":[["SummaryLine","If the transition between status bar property changes should be"],["SummaryLine","animated. Supported for backgroundColor, barStyle and hidden."]],"Kind":"Regular","Index":null,"Name":"animated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","If the status bar is hidden."]],"Kind":"Regular","Index":null,"Name":"hidden","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"StatusBar","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"StatusBarProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"StatusBarStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"StatusBar","FullName":"StatusBar"}],"TypeParameters":[]}],"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The current height of the status bar on the device."]],"Kind":"Regular","Index":null,"Name":"currentHeight","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Show or hide the status bar"]],"Kind":"Regular","Index":null,"Name":"setHidden","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"hidden","Description":["The dialog's title."]}],"Name":"hidden","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]},{"Comment":["Param",{"Name":"animation","Description":["Optional animation when","changing the status bar hidden property."]}],"Name":"animation","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"StatusBarAnimation","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set the status bar style"]],"Kind":"Regular","Index":null,"Name":"setBarStyle","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"style","Description":["Status bar style to set"]}],"Name":"style","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"StatusBarStyle","FullName":""}]},{"Comment":["Param",{"Name":"animated","Description":["Animate the style change."]}],"Name":"animated","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Control the visibility of the network activity indicator"]],"Kind":"Regular","Index":null,"Name":"setNetworkActivityIndicatorVisible","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"visible","Description":["Show the indicator."]}],"Name":"visible","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Set the background color for the status bar"]],"Kind":"Regular","Index":null,"Name":"setBackgroundColor","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"color","Description":["Background color."]}],"Name":"color","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":["Param",{"Name":"animated","Description":["Animate the style change."]}],"Name":"animated","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Control the translucency of the status bar"]],"Kind":"Regular","Index":null,"Name":"setTranslucent","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":["Param",{"Name":"translucent","Description":["Set as translucent."]}],"Name":"translucent","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":true,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","StatusBarIOS is deprecated."],["SummaryLine","Use `StatusBar` for mutating the status bar."]],"IsStatic":false,"IsClass":false,"Name":"StatusBarIOSStatic","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"NativeEventEmitter","FullName":"\"node_modules/@types/react-native/index\".NativeEventEmitter"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TimePickerAndroidOpenOptions","FullName":"TimePickerAndroidOpenOptions","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"hour","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"minute","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"is24Hour","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"mode","Option":true,"Type":["Mapped",{"Name":"TimePickerAndroidOpenOptionsMode","FullName":"TimePickerAndroidOpenOptionsMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Opens the standard Android time picker dialog."],["SummaryLine",""],["SummaryLine","### Example"],["SummaryLine",""],["SummaryLine","```"],["SummaryLine","try {"],["SummaryLine","   const {action, hour, minute} = await TimePickerAndroid.open({"],["SummaryLine","     hour: 14,"],["SummaryLine","     minute: 0,"],["SummaryLine","     is24Hour: false, // Will display '2 PM'"],["SummaryLine","   });"],["SummaryLine","   if (action !== TimePickerAndroid.dismissedAction) {"],["SummaryLine","     // Selected hour (0-23), minute (0-59)"],["SummaryLine","   }"],["SummaryLine","} catch ({code, message}) {"],["SummaryLine","   console.warn('Cannot open time picker', message);"],["SummaryLine","}"],["SummaryLine","```"]],"IsStatic":false,"IsClass":false,"Name":"TimePickerAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Opens the standard Android time picker dialog."],["SummaryLine",""],["SummaryLine","The available keys for the `options` object are:"],["SummaryLine","   * `hour` (0-23) - the hour to show, defaults to the current time"],["SummaryLine","   * `minute` (0-59) - the minute to show, defaults to the current time"],["SummaryLine","   * `is24Hour` (boolean) - If `true`, the picker uses the 24-hour format. If `false`,"],["SummaryLine","     the picker shows an AM/PM chooser. If undefined, the default for the current locale"],["SummaryLine","     is used."],["SummaryLine","   * `mode` (enum('clock', 'spinner', 'default')) - set the time picker mode"],["SummaryLine","     * 'clock': Show a time picker in clock mode."],["SummaryLine","     * 'spinner': Show a time picker in spinner mode."],["SummaryLine","     * 'default': Show a default time picker based on Android versions."],["SummaryLine",""],["SummaryLine","Returns a Promise which will be invoked an object containing `action`, `hour` (0-23),"],["SummaryLine","`minute` (0-59) if the user picked a time. If the user dismissed the dialog, the Promise will"],["SummaryLine","still be resolved with action being `TimePickerAndroid.dismissedAction` and all the other keys"],["SummaryLine","being undefined. **Always** check whether the `action` before reading the values."]],"Kind":"Regular","IsStatic":false,"Name":"``open``","TypeParameters":[],"Params":[{"Comment":null,"Name":"options","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TimePickerAndroidOpenOptions","FullName":""}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"TimePickerAndroidStaticOpenPromise","FullName":"TimePickerAndroidStaticOpenPromise"}]]}],"Accessibility":null}],["Property",{"Comments":[["SummaryLine","A time has been selected."]],"Kind":"Regular","Index":null,"Name":"timeSetAction","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The dialog has been dismissed."]],"Kind":"Regular","Index":null,"Name":"dismissedAction","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","This exposes the native ToastAndroid module as a JS module. This has a function 'show'"],["SummaryLine","which takes the following parameters:"],["SummaryLine",""],["SummaryLine","1. String message: A string with the text to toast"],["SummaryLine","2. int duration: The duration of the toast. May be ToastAndroid.SHORT or ToastAndroid.LONG"],["SummaryLine",""],["SummaryLine","There is also a function `showWithGravity` to specify the layout gravity. May be"],["SummaryLine","ToastAndroid.TOP, ToastAndroid.BOTTOM, ToastAndroid.CENTER"]],"IsStatic":false,"IsClass":false,"Name":"ToastAndroidStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","String message: A string with the text to toast"],["SummaryLine","int duration: The duration of the toast."],["SummaryLine","May be ToastAndroid.SHORT or ToastAndroid.LONG"]],"Kind":"Regular","IsStatic":false,"Name":"show","TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"duration","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","`gravity` may be ToastAndroid.TOP, ToastAndroid.BOTTOM, ToastAndroid.CENTER"]],"Kind":"Regular","IsStatic":false,"Name":"showWithGravity","TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"duration","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"gravity","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"SHORT","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"LONG","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"TOP","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"BOTTOM","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"CENTER","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UIManagerStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Capture an image of the screen, window or an individual view. The image"],["SummaryLine","will be stored in a temporary file that will only exist for as long as the"],["SummaryLine","app is running."],["SummaryLine",""],["SummaryLine","The `view` argument can be the literal string `window` if you want to"],["SummaryLine","capture the entire window, or it can be a reference to a specific"],["SummaryLine","React Native component."],["SummaryLine",""],["SummaryLine","The `options` argument may include:"],["SummaryLine","- width/height (number) - the width and height of the image to capture."],["SummaryLine","- format (string) - either 'png' or 'jpeg'. Defaults to 'png'."],["SummaryLine","- quality (number) - the quality when using jpeg. 0.0 - 1.0 (default)."],["SummaryLine",""],["SummaryLine","Returns a Promise<string> (tempFilePath)"]],"Kind":"Regular","Index":null,"Name":"takeSnapshot","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"view","Optional":true,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Generic",{"Type":["Mapped",{"Name":"React.ReactElement","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],["Mapped",{"Name":"float","FullName":"float"}],["Enum",{"Name":"StringEnum","Cases":[{"Name":"window","Type":"String","Value":"window"}]}]]}]},{"Comment":null,"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"UIManagerStaticTakeSnapshot","FullName":"UIManagerStaticTakeSnapshot"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"string","FullName":"string"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Determines the location on screen, width, and height of the given view and"],["SummaryLine","returns the values via an async callback. If successful, the callback will"],["SummaryLine","be called with the following arguments:"],["SummaryLine",""],["SummaryLine","  - x"],["SummaryLine","  - y"],["SummaryLine","  - width"],["SummaryLine","  - height"],["SummaryLine","  - pageX"],["SummaryLine","  - pageY"],["SummaryLine",""],["SummaryLine","Note that these measurements are not available until after the rendering"],["SummaryLine","has been completed in native. If you need the measurements as soon as"],["SummaryLine","possible, consider using the [`onLayout`"],["SummaryLine","prop](docs/view.html#onlayout) instead."]],"Kind":"Regular","IsStatic":false,"Name":"``measure``","TypeParameters":[],"Params":[{"Comment":null,"Name":"node","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MeasureOnSuccessCallback","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Determines the location of the given view in the window and returns the"],["SummaryLine","values via an async callback. If the React root view is embedded in"],["SummaryLine","another native view, this will give you the absolute coordinates. If"],["SummaryLine","successful, the callback will be called with the following"],["SummaryLine","arguments:"],["SummaryLine",""],["SummaryLine","  - x"],["SummaryLine","  - y"],["SummaryLine","  - width"],["SummaryLine","  - height"],["SummaryLine",""],["SummaryLine","Note that these measurements are not available until after the rendering"],["SummaryLine","has been completed in native."]],"Kind":"Regular","IsStatic":false,"Name":"measureInWindow","TypeParameters":[],"Params":[{"Comment":null,"Name":"node","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MeasureInWindowOnSuccessCallback","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Like [`measure()`](#measure), but measures the view relative an ancestor,"],["SummaryLine","specified as `relativeToNativeNode`. This means that the returned x, y"],["SummaryLine","are relative to the origin x, y of the ancestor view."],["SummaryLine",""],["SummaryLine","As always, to obtain a native node handle for a component, you can use"],["SummaryLine","`React.findNodeHandle(component)`."]],"Kind":"Regular","IsStatic":false,"Name":"measureLayout","TypeParameters":[],"Params":[{"Comment":null,"Name":"node","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"relativeToNativeNode","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"onFail","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"onSuccess","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"MeasureLayoutOnSuccessCallback","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Automatically animates views to their new positions when the"],["SummaryLine","next layout happens."],["SummaryLine",""],["SummaryLine","A common way to use this API is to call it before calling `setState`."],["SummaryLine",""],["SummaryLine","Note that in order to get this to work on **Android** you need to set the following flags via `UIManager`:"],["SummaryLine",""],["SummaryLine","     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);"]],"Kind":"Regular","IsStatic":false,"Name":"setLayoutAnimationEnabledExperimental","TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SwitchPropsIOS","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ViewProps","FullName":"\"node_modules/@types/react-native/index\".ViewProps"}]],"Members":[["Property",{"Comments":[["SummaryLine","Background color when the switch is turned on."]],"Kind":"Regular","Index":null,"Name":"onTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Color of the foreground switch grip."]],"Kind":"Regular","Index":null,"Name":"thumbTintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Background color when the switch is turned off."]],"Kind":"Regular","Index":null,"Name":"tintColor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SwitchProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"SwitchPropsIOS","FullName":"\"node_modules/@types/react-native/index\".SwitchPropsIOS"}]],"Members":[["Property",{"Comments":[["SummaryLine","If true the user won't be able to toggle the switch."],["SummaryLine","Default value is false."]],"Kind":"Regular","Index":null,"Name":"disabled","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Invoked with the new value when the value changes."]],"Kind":"Regular","Index":null,"Name":"onValueChange","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Used to locate this view in end-to-end tests."]],"Kind":"Regular","Index":null,"Name":"testID","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The value of the switch. If true the switch will be turned on."],["SummaryLine","Default value is false."]],"Kind":"Regular","Index":null,"Name":"value","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Renders a boolean input."],["SummaryLine",""],["SummaryLine","This is a controlled component that requires an `onValueChange` callback that"],["SummaryLine","updates the `value` prop in order for the component to reflect user actions."],["SummaryLine","If the `value` prop is not updated, the component will continue to render"],["SummaryLine","the supplied `value` prop instead of the expected result of any user actions."]],"IsStatic":false,"IsClass":true,"Name":"SwitchComponent","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"SwitchProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Renders a boolean input."],["SummaryLine",""],["SummaryLine","This is a controlled component that requires an `onValueChange` callback that"],["SummaryLine","updates the `value` prop in order for the component to reflect user actions."],["SummaryLine","If the `value` prop is not updated, the component will continue to render"],["SummaryLine","the supplied `value` prop instead of the expected result of any user actions."]],"IsStatic":true,"IsClass":true,"Name":"SwitchComponentStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"SwitchComponent","FullName":"SwitchComponent"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Switch","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"SwitchBase","FullName":"error"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"SwitchStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Switch","FullName":"Switch"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","NOTE: `VibrationIOS` is being deprecated. Use `Vibration` instead."],["SummaryLine",""],["SummaryLine","The Vibration API is exposed at VibrationIOS.vibrate()."],["SummaryLine","On iOS, calling this function will trigger a one second vibration."],["SummaryLine","The vibration is asynchronous so this method will return immediately."],["SummaryLine",""],["SummaryLine","There will be no effect on devices that do not support Vibration, eg. the iOS simulator."],["SummaryLine",""],["SummaryLine","Vibration patterns are currently unsupported."]],"IsStatic":false,"IsClass":false,"Name":"VibrationIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"vibrate","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","The Vibration API is exposed at `Vibration.vibrate()`."],["SummaryLine","The vibration is asynchronous so this method will return immediately."],["SummaryLine",""],["SummaryLine","There will be no effect on devices that do not support Vibration, eg. the simulator."],["SummaryLine",""],["SummaryLine","**Note for android**"],["SummaryLine","add `<uses-permission android:name=\"android.permission.VIBRATE\"/>` to `AndroidManifest.xml`"],["SummaryLine",""],["SummaryLine","**Android Usage:**"],["SummaryLine",""],["SummaryLine","[0, 500, 200, 500]"],["SummaryLine","V(0.5s) --wait(0.2s)--> V(0.5s)"],["SummaryLine",""],["SummaryLine","[300, 500, 200, 500]"],["SummaryLine","--wait(0.3s)--> V(0.5s) --wait(0.2s)--> V(0.5s)"],["SummaryLine",""],["SummaryLine","**iOS Usage:**"],["SummaryLine","if first argument is 0, it will not be included in pattern array."],["SummaryLine",""],["SummaryLine","[0, 1000, 2000, 3000]"],["SummaryLine","V(fixed) --wait(1s)--> V(fixed) --wait(2s)--> V(fixed) --wait(3s)--> V(fixed)"]],"IsStatic":false,"IsClass":false,"Name":"VibrationStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"vibrate","TypeParameters":[],"Params":[{"Comment":null,"Name":"pattern","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Array",["Mapped",{"Name":"float","FullName":"float"}]]]}]},{"Comment":null,"Name":"repeat","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Stop vibration"]],"Kind":"Regular","IsStatic":false,"Name":"cancel","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EasingFunction","FullName":"EasingFunction","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EasingStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"step0","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"step1","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"linear","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ease","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"quad","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"cubic","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"poly","TypeParameters":[],"Params":[{"Comment":null,"Name":"n","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"EasingFunction","FullName":""}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"sin","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"circle","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"exp","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"elastic","TypeParameters":[],"Params":[{"Comment":null,"Name":"bounciness","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"EasingFunction","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"back","TypeParameters":[],"Params":[{"Comment":null,"Name":"s","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"EasingFunction","FullName":""}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"bounce","Option":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"bezier","TypeParameters":[],"Params":[{"Comment":null,"Name":"x1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"y1","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"x2","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"y2","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"EasingFunction","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"``in``","TypeParameters":[],"Params":[{"Comment":null,"Name":"easing","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}]}],"ReturnType":["Mapped",{"Name":"EasingFunction","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"out","TypeParameters":[],"Params":[{"Comment":null,"Name":"easing","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}]}],"ReturnType":["Mapped",{"Name":"EasingFunction","FullName":""}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"inOut","TypeParameters":[],"Params":[{"Comment":null,"Name":"easing","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EasingFunction","FullName":""}]}],"ReturnType":["Mapped",{"Name":"EasingFunction","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Module",{"HasDeclare":false,"IsNamespace":true,"Name":"Animated","Types":[["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Animated","Option":false,"Type":["Mapped",{"Name":"AnimatedStatic","FullName":"AnimatedStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AnimatedWithChildren","Option":false,"Type":["Mapped",{"Name":"AnimatedWithChildrenStatic","FullName":"AnimatedWithChildrenStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AnimatedInterpolation","Option":false,"Type":["Mapped",{"Name":"AnimatedInterpolationStatic","FullName":"AnimatedInterpolationStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Value","Option":false,"Type":["Mapped",{"Name":"ValueStatic","FullName":"ValueStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ValueXY","Option":false,"Type":["Mapped",{"Name":"ValueXYStatic","FullName":"ValueXYStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Animates a value from an initial velocity to zero based on a decay"],["SummaryLine","coefficient."]],"Kind":"Regular","IsStatic":false,"Name":"decay","TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"AnimatedValue","FullName":""}],["Mapped",{"Name":"AnimatedValueXY","FullName":""}]]}]},{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"DecayAnimationConfig","FullName":""}]}],"ReturnType":["Mapped",{"Name":"CompositeAnimation","FullName":""}],"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":true,"Name":"timing","Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"AnimatedValue","FullName":""}],["Mapped",{"Name":"AnimatedValueXY","FullName":""}]]}]},{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"TimingAnimationConfig","FullName":""}]}],"ReturnType":["Mapped",{"Name":"CompositeAnimation","FullName":""}],"Accessibility":null}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Creates a new Animated value composed from two Animated values added"],["SummaryLine","together."]],"Kind":"Regular","IsStatic":false,"Name":"add","TypeParameters":[],"Params":[{"Comment":null,"Name":"a","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Animated","FullName":""}]},{"Comment":null,"Name":"b","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Animated","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AnimatedAddition","FullName":""}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AnimatedAddition","Option":false,"Type":["Mapped",{"Name":"AnimatedAdditionStatic","FullName":"AnimatedAdditionStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Creates a new Animated value composed by dividing the first Animated"],["SummaryLine","value by the second Animated value."]],"Kind":"Regular","IsStatic":false,"Name":"divide","TypeParameters":[],"Params":[{"Comment":null,"Name":"a","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Animated","FullName":""}]},{"Comment":null,"Name":"b","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Animated","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AnimatedDivision","FullName":""}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AnimatedDivision","Option":false,"Type":["Mapped",{"Name":"AnimatedDivisionStatic","FullName":"AnimatedDivisionStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Creates a new Animated value composed from two Animated values multiplied"],["SummaryLine","together."]],"Kind":"Regular","IsStatic":false,"Name":"multiply","TypeParameters":[],"Params":[{"Comment":null,"Name":"a","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Animated","FullName":""}]},{"Comment":null,"Name":"b","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Animated","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AnimatedMultiplication","FullName":""}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AnimatedMultiplication","Option":false,"Type":["Mapped",{"Name":"AnimatedMultiplicationStatic","FullName":"AnimatedMultiplicationStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Creates a new Animated value that is the (non-negative) modulo of the"],["SummaryLine","provided Animated value"]],"Kind":"Regular","IsStatic":false,"Name":"modulo","TypeParameters":[],"Params":[{"Comment":null,"Name":"a","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Animated","FullName":""}]},{"Comment":null,"Name":"modulus","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"AnimatedModulo","FullName":""}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AnimatedModulo","Option":false,"Type":["Mapped",{"Name":"AnimatedModuloStatic","FullName":"AnimatedModuloStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Create a new Animated value that is limited between 2 values. It uses the"],["SummaryLine","difference between the last value so even if the value is far from the bounds"],["SummaryLine","it will start changing when the value starts getting closer again."],["SummaryLine","(`value = clamp(value + diff, min, max)`)."],["SummaryLine",""],["SummaryLine","This is useful with scroll events, for example, to show the navbar when"],["SummaryLine","scrolling up and to hide it when scrolling down."]],"Kind":"Regular","IsStatic":false,"Name":"diffClamp","TypeParameters":[],"Params":[{"Comment":null,"Name":"a","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Animated","FullName":""}]},{"Comment":null,"Name":"min","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"max","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"AnimatedDiffClamp","FullName":""}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"AnimatedDiffClamp","Option":false,"Type":["Mapped",{"Name":"AnimatedDiffClampStatic","FullName":"AnimatedDiffClampStatic"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Starts an animation after the given delay."]],"Kind":"Regular","IsStatic":false,"Name":"delay","TypeParameters":[],"Params":[{"Comment":null,"Name":"time","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"CompositeAnimation","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Starts an array of animations in order, waiting for each to complete"],["SummaryLine","before starting the next.  If the current running animation is stopped, no"],["SummaryLine","following animations will be started."]],"Kind":"Regular","IsStatic":false,"Name":"sequence","TypeParameters":[],"Params":[{"Comment":null,"Name":"animations","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"CompositeAnimation","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"CompositeAnimation","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Array of animations may run in parallel (overlap), but are started in"],["SummaryLine","sequence with successive delays.  Nice for doing trailing effects."]],"Kind":"Regular","IsStatic":false,"Name":"stagger","TypeParameters":[],"Params":[{"Comment":null,"Name":"time","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]},{"Comment":null,"Name":"animations","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"CompositeAnimation","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"CompositeAnimation","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Loops a given animation continuously, so that each time it reaches the end,"],["SummaryLine","it resets and begins again from the start. Can specify number of times to"],["SummaryLine","loop using the key 'iterations' in the config. Will loop without blocking"],["SummaryLine","the UI thread if the child animation is set to 'useNativeDriver'."]],"Kind":"Regular","IsStatic":false,"Name":"loop","TypeParameters":[],"Params":[{"Comment":null,"Name":"animation","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"CompositeAnimation","FullName":""}]},{"Comment":null,"Name":"config","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"LoopAnimationConfig","FullName":""}]}],"ReturnType":["Mapped",{"Name":"CompositeAnimation","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Spring animation based on Rebound and Origami.  Tracks velocity state to"],["SummaryLine","create fluid motions as the `toValue` updates, and can be chained together."]],"Kind":"Regular","IsStatic":false,"Name":"spring","TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"AnimatedValue","FullName":""}],["Mapped",{"Name":"AnimatedValueXY","FullName":""}]]}]},{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"SpringAnimationConfig","FullName":""}]}],"ReturnType":["Mapped",{"Name":"CompositeAnimation","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Starts an array of animations all at the same time.  By default, if one"],["SummaryLine","of the animations is stopped, they will all be stopped.  You can override"],["SummaryLine","this with the `stopTogether` flag."]],"Kind":"Regular","IsStatic":false,"Name":"``parallel``","TypeParameters":[],"Params":[{"Comment":null,"Name":"animations","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"CompositeAnimation","FullName":""}]]}]},{"Comment":null,"Name":"config","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ParallelConfig","FullName":""}]}],"ReturnType":["Mapped",{"Name":"CompositeAnimation","FullName":""}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Takes an array of mappings and extracts values from each arg accordingly,"],["SummaryLine","then calls `setValue` on the mapped outputs.  e.g."],["SummaryLine",""],["SummaryLine","```javascript"],["SummaryLine","onScroll={Animated.event("],["SummaryLine","   [{nativeEvent: {contentOffset: {x: this._scrollX}}}]"],["SummaryLine","   {listener},          // Optional async listener"],["SummaryLine",")"],["SummaryLine","..."],["SummaryLine","onPanResponderMove: Animated.event(["],["SummaryLine","   null,                // raw event arg ignored"],["SummaryLine","   {dx: this._panX},    // gestureState arg"],["SummaryLine","]),"],["SummaryLine","```"]],"Kind":"Regular","IsStatic":false,"Name":"``event``","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Params":[{"Comment":null,"Name":"argMapping","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"Mapping","FullName":""}]]}]]}]},{"Comment":null,"Name":"config","Optional":true,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"EventConfig","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]}],"ReturnType":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"args","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Make any React component Animatable.  Used to create `Animated.View`, etc."]],"Kind":"Regular","IsStatic":false,"Name":"createAnimatedComponent","TypeParameters":[],"Params":[{"Comment":null,"Name":"``component``","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":true,"Name":"View","Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":true,"Name":"Image","Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":true,"Name":"Text","Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}],["Variable",{"Export":null,"HasDeclare":true,"Name":"ScrollView","Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"AnimatedValue","Type":["Mapped",{"Name":"Value","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"AnimatedValueXY","Type":["Mapped",{"Name":"ValueXY","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"Base","Type":["Mapped",{"Name":"Animated","FullName":""}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Animated","FullName":"","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AnimatedStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Animated","FullName":"Animated"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AnimatedWithChildren","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"Animated","FullName":"\"node_modules/@types/react-native/index\".Animated.Animated"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AnimatedWithChildrenStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AnimatedWithChildren","FullName":"AnimatedWithChildren"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AnimatedInterpolation","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimatedWithChildren","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimatedWithChildren"}]],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"interpolate","TypeParameters":[],"Params":[{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"InterpolationConfigType","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AnimatedInterpolation","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AnimatedInterpolationStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AnimatedInterpolation","FullName":"AnimatedInterpolation"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ExtrapolateType","FullName":"ExtrapolateType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"extend","Type":"String","Value":"extend"},{"Name":"identity","Type":"String","Value":"identity"},{"Name":"clamp","Type":"String","Value":"clamp"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"InterpolationConfigType","FullName":"InterpolationConfigType","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"inputRange","Option":false,"Type":["Array",["Mapped",{"Name":"float","FullName":"float"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"outputRange","Option":false,"Type":["Union",{"Option":false,"Types":[["Array",["Mapped",{"Name":"float","FullName":"float"}]],["Array",["Mapped",{"Name":"string","FullName":"string"}]]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"easing","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"input","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"extrapolate","Option":true,"Type":["Mapped",{"Name":"ExtrapolateType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"extrapolateLeft","Option":true,"Type":["Mapped",{"Name":"ExtrapolateType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"extrapolateRight","Option":true,"Type":["Mapped",{"Name":"ExtrapolateType","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueListenerCallback","FullName":"ValueListenerCallback","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"state","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueListenerCallbackInvokeState","FullName":"ValueListenerCallbackInvokeState"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueListenerCallbackInvokeState","FullName":"ValueListenerCallbackInvokeState","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"value","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Standard value for driving animations.  One `Animated.Value` can drive"],["SummaryLine","multiple properties in a synchronized fashion, but can only be driven by one"],["SummaryLine","mechanism at a time.  Using a new mechanism (e.g. starting a new animation,"],["SummaryLine","or calling `setValue`) will stop any previous ones."]],"IsStatic":false,"IsClass":true,"Name":"Value","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimatedWithChildren","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimatedWithChildren"}]],"Members":[["Function",{"Comments":[["SummaryLine","Directly set the value.  This will stop any animations running on the value"],["SummaryLine","and update all the bound properties."]],"Kind":"Regular","IsStatic":false,"Name":"setValue","TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Sets an offset that is applied on top of whatever value is set, whether via"],["SummaryLine","`setValue`, an animation, or `Animated.event`.  Useful for compensating"],["SummaryLine","things like the start of a pan gesture."]],"Kind":"Regular","IsStatic":false,"Name":"setOffset","TypeParameters":[],"Params":[{"Comment":null,"Name":"offset","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Merges the offset value into the base value and resets the offset to zero."],["SummaryLine","The final output of the value is unchanged."]],"Kind":"Regular","IsStatic":false,"Name":"flattenOffset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Sets the offset value to the base value, and resets the base value to zero."],["SummaryLine","The final output of the value is unchanged."]],"Kind":"Regular","IsStatic":false,"Name":"extractOffset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Adds an asynchronous listener to the value so you can observe updates from"],["SummaryLine","animations.  This is useful because there is no way to"],["SummaryLine","synchronously read the value because it might be driven natively."]],"Kind":"Regular","IsStatic":false,"Name":"addListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueListenerCallback","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"removeListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"id","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"removeAllListeners","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Stops any running animation or tracking.  `callback` is invoked with the"],["SummaryLine","final value after stopping the animation, which is useful for updating"],["SummaryLine","state to match the animation position with layout."]],"Kind":"Regular","IsStatic":false,"Name":"stopAnimation","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Interpolates the value before updating the property, e.g. mapping 0-1 to"],["SummaryLine","0-10."]],"Kind":"Regular","IsStatic":false,"Name":"interpolate","TypeParameters":[],"Params":[{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"InterpolationConfigType","FullName":""}]}],"ReturnType":["Mapped",{"Name":"AnimatedInterpolation","FullName":""}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Standard value for driving animations.  One `Animated.Value` can drive"],["SummaryLine","multiple properties in a synchronized fashion, but can only be driven by one"],["SummaryLine","mechanism at a time.  Using a new mechanism (e.g. starting a new animation,"],["SummaryLine","or calling `setValue`) will stop any previous ones."]],"IsStatic":true,"IsClass":true,"Name":"ValueStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Value","FullName":"Value"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueXYListenerCallback","FullName":"ValueXYListenerCallback","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueXYListenerCallbackInvokeValue","FullName":"ValueXYListenerCallbackInvokeValue"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueXYListenerCallbackInvokeValue","FullName":"ValueXYListenerCallbackInvokeValue","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","2D Value for driving 2D animations, such as pan gestures.  Almost identical"],["SummaryLine","API to normal `Animated.Value`, but multiplexed.  Contains two regular"],["SummaryLine","`Animated.Value`s under the hood."]],"IsStatic":false,"IsClass":true,"Name":"ValueXY","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimatedWithChildren","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimatedWithChildren"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"AnimatedValue","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"AnimatedValue","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setValue","TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueXYSetValueValue","FullName":"ValueXYSetValueValue"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setOffset","TypeParameters":[],"Params":[{"Comment":null,"Name":"offset","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueXYSetOffsetOffset","FullName":"ValueXYSetOffsetOffset"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"flattenOffset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"extractOffset","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"stopAnimation","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueXYStopAnimation","FullName":"ValueXYStopAnimation"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"addListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ValueXYListenerCallback","FullName":""}]}],"ReturnType":["Mapped",{"Name":"string","FullName":"string"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"removeListener","TypeParameters":[],"Params":[{"Comment":null,"Name":"id","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Converts `{x, y}` into `{left, top}` for use in style, e.g."],["SummaryLine",""],["SummaryLine","```javascript"],["SummaryLine","  style={this.state.anim.getLayout()}"],["SummaryLine","```"]],"Kind":"Regular","IsStatic":false,"Name":"getLayout","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ValueXYGetLayoutReturn","FullName":"ValueXYGetLayoutReturn"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Converts `{x, y}` into a useable translation transform, e.g."],["SummaryLine",""],["SummaryLine","```javascript"],["SummaryLine","  style={{"],["SummaryLine","    transform: this.state.anim.getTranslateTransform()"],["SummaryLine","  }}"],["SummaryLine","```"]],"Kind":"Regular","IsStatic":false,"Name":"getTranslateTransform","TypeParameters":[],"Params":[],"ReturnType":["Array",["Mapped",{"Name":"ValueXYGetTranslateTransform","FullName":"ValueXYGetTranslateTransform"}]],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueXYSetValueValue","FullName":"ValueXYSetValueValue","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueXYSetOffsetOffset","FullName":"ValueXYSetOffsetOffset","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueXYGetLayoutReturn","FullName":"ValueXYGetLayoutReturn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"AnimatedValue","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","2D Value for driving 2D animations, such as pan gestures.  Almost identical"],["SummaryLine","API to normal `Animated.Value`, but multiplexed.  Contains two regular"],["SummaryLine","`Animated.Value`s under the hood."]],"IsStatic":true,"IsClass":true,"Name":"ValueXYStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[{"Comment":null,"Name":"valueIn","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"ValueXYStaticValueIn","FullName":"ValueXYStaticValueIn"}]}],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ValueXY","FullName":"ValueXY"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueXYStaticValueIn","FullName":"ValueXYStaticValueIn","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"AnimatedValue","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"AnimatedValue","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EndResult","FullName":"EndResult","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"finished","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EndCallback","FullName":"EndCallback","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"result","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"EndResult","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CompositeAnimation","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"start","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"EndCallback","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"stop","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AnimationConfig","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"isInteraction","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"useNativeDriver","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DecayAnimationConfig","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimationConfig","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimationConfig"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"velocity","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"ValueXYStopAnimation","FullName":"ValueXYStopAnimation"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"deceleration","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TimingAnimationConfig","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimationConfig","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimationConfig"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"toValue","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"AnimatedValue","FullName":""}],["Mapped",{"Name":"ValueXYStopAnimation","FullName":"ValueXYStopAnimation"}],["Mapped",{"Name":"AnimatedValueXY","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"easing","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"duration","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"delay","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SpringAnimationConfig","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimationConfig","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimationConfig"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"toValue","Option":false,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"AnimatedValue","FullName":""}],["Mapped",{"Name":"ValueXYStopAnimation","FullName":"ValueXYStopAnimation"}],["Mapped",{"Name":"AnimatedValueXY","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"overshootClamping","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"restDisplacementThreshold","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"restSpeedThreshold","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"velocity","Option":true,"Type":["Union",{"Option":false,"Types":[["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"ValueXYStopAnimation","FullName":"ValueXYStopAnimation"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"bounciness","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"speed","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"tension","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"friction","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"stiffness","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"mass","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"damping","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LoopAnimationConfig","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"iterations","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AnimatedAddition","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimatedInterpolation","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimatedInterpolation"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AnimatedAdditionStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AnimatedAddition","FullName":"AnimatedAddition"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AnimatedDivision","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimatedInterpolation","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimatedInterpolation"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AnimatedDivisionStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AnimatedDivision","FullName":"AnimatedDivision"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AnimatedMultiplication","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimatedInterpolation","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimatedInterpolation"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AnimatedMultiplicationStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AnimatedMultiplication","FullName":"AnimatedMultiplication"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AnimatedModulo","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimatedInterpolation","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimatedInterpolation"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AnimatedModuloStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AnimatedModulo","FullName":"AnimatedModulo"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"AnimatedDiffClamp","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"AnimatedInterpolation","FullName":"\"node_modules/@types/react-native/index\".Animated.AnimatedInterpolation"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"AnimatedDiffClampStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"AnimatedDiffClamp","FullName":"AnimatedDiffClamp"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ParallelConfig","FullName":"ParallelConfig","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"stopTogether","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"Mapping","Type":["Union",{"Option":false,"Types":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"Mapping","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Mapped",{"Name":"AnimatedValue","FullName":""}]]}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"EventConfig","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'T"}]],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"listener","Option":true,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``event``","Optional":false,"ParamArray":false,"Type":["Generic",{"Type":["Mapped",{"Name":"NativeSyntheticEvent","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'T","FullName":""}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"useNativeDriver","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueXYStopAnimation","FullName":"ValueXYStopAnimation","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ValueXYGetTranslateTransform","FullName":"ValueXYGetTranslateTransform","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"AnimatedValue","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"I18nManagerStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"isRTL","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"allowRTL","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"allowRTL","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"I18nManagerStaticAllowRTL","FullName":"I18nManagerStaticAllowRTL"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"forceRTL","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"forceRTL","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"I18nManagerStaticAllowRTL","FullName":"I18nManagerStaticAllowRTL"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GeolocationStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Invokes the success callback once with the latest location info.  Supported"],["SummaryLine","options: timeout (ms), maximumAge (ms), enableHighAccuracy (bool)"],["SummaryLine","On Android, this can return almost immediately if the location is cached or"],["SummaryLine","request an update, which might take a while."]],"Kind":"Regular","IsStatic":false,"Name":"getCurrentPosition","TypeParameters":[],"Params":[{"Comment":null,"Name":"geo_success","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"position","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GeolocationReturnType","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"geo_error","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GeolocationError","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"geo_options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"GeoOptions","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Invokes the success callback whenever the location changes.  Supported"],["SummaryLine","options: timeout (ms), maximumAge (ms), enableHighAccuracy (bool), distanceFilter(m)"]],"Kind":"Regular","IsStatic":false,"Name":"watchPosition","TypeParameters":[],"Params":[{"Comment":null,"Name":"success","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"position","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GeolocationReturnType","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"error","Optional":true,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GeolocationError","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"options","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"GeoOptions","FullName":""}]}],"ReturnType":["Mapped",{"Name":"float","FullName":"float"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"clearWatch","TypeParameters":[],"Params":[{"Comment":null,"Name":"watchID","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"float","FullName":"float"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"stopObserving","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"requestAuthorization","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"setRNConfiguration","TypeParameters":[],"Params":[{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"GeoConfiguration","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"OpenCameraDialogOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Defaults to false"]],"Kind":"Regular","Index":null,"Name":"videoMode","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"OpenSelectDialogOptions","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","Defaults to true"]],"Kind":"Regular","Index":null,"Name":"showImages","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","Defaults to false"]],"Kind":"Regular","Index":null,"Name":"showVideos","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"ImagePickerResult","Type":["Tuple",{"Types":[["Mapped",{"Name":"string","FullName":"string"}],["Mapped",{"Name":"float","FullName":"float"}],["Mapped",{"Name":"float","FullName":"float"}]],"Kind":"Tuple"}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImagePickerIOSStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"canRecordVideos","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"canUseCamera","TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"value","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"openCameraDialog","TypeParameters":[],"Params":[{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"OpenCameraDialogOptions","FullName":""}]},{"Comment":null,"Name":"successCallback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"args","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ImagePickerResult","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"cancelCallback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"args","Optional":false,"ParamArray":false,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"openSelectDialog","TypeParameters":[],"Params":[{"Comment":null,"Name":"config","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"OpenSelectDialogOptions","FullName":""}]},{"Comment":null,"Name":"successCallback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"args","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ImagePickerResult","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"cancelCallback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"args","Optional":false,"ParamArray":false,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageStoreStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Check if the ImageStore contains image data for the specified URI."]],"Kind":"Regular","IsStatic":false,"Name":"hasImageForTag","TypeParameters":[],"Params":[{"Comment":null,"Name":"uri","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"hasImage","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Delete an image from the ImageStore. Images are stored in memory and"],["SummaryLine","must be manually removed when you are finished with them, otherwise they"],["SummaryLine","will continue to use up RAM until the app is terminated. It is safe to"],["SummaryLine","call `removeImageForTag()` without first calling `hasImageForTag()`, it"],["SummaryLine","will simply fail silently."]],"Kind":"Regular","IsStatic":false,"Name":"removeImageForTag","TypeParameters":[],"Params":[{"Comment":null,"Name":"uri","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Stores a base64-encoded image in the ImageStore, and returns a URI that"],["SummaryLine","can be used to access or display the image later. Images are stored in"],["SummaryLine","memory only, and must be manually deleted when you are finished with"],["SummaryLine","them by calling `removeImageForTag()`."],["SummaryLine",""],["SummaryLine","Note that it is very inefficient to transfer large quantities of binary"],["SummaryLine","data between JS and native code, so you should avoid calling this more"],["SummaryLine","than necessary."]],"Kind":"Regular","IsStatic":false,"Name":"addImageFromBase64","TypeParameters":[],"Params":[{"Comment":null,"Name":"base64ImageData","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"success","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"uri","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"failure","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[["SummaryLine","Retrieves the base64-encoded data for an image in the ImageStore. If the"],["SummaryLine","specified URI does not match an image in the store, the failure callback"],["SummaryLine","will be called."],["SummaryLine",""],["SummaryLine","Note that it is very inefficient to transfer large quantities of binary"],["SummaryLine","data between JS and native code, so you should avoid calling this more"],["SummaryLine","than necessary. To display an image in the ImageStore, you can just pass"],["SummaryLine","the URI to an `<Image/>` component; there is no need to retrieve the"],["SummaryLine","base64 data."]],"Kind":"Regular","IsStatic":false,"Name":"getBase64ForTag","TypeParameters":[],"Params":[{"Comment":null,"Name":"uri","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"success","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"base64ImageData","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"failure","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeEventSubscription","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Call this method to un-subscribe from a native-event"]],"Kind":"Regular","IsStatic":false,"Name":"remove","TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"RCTNativeAppEventEmitter","Type":["Mapped",{"Name":"DeviceEventEmitterStatic","FullName":""}],"TypeParameters":[]}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageCropData","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[["SummaryLine","The top-left corner of the cropped image, specified in the original"],["SummaryLine","image's coordinate space."]],"Kind":"Regular","Index":null,"Name":"offset","Option":false,"Type":["Mapped",{"Name":"TextInputScrollEventDataContentOffset","FullName":"TextInputScrollEventDataContentOffset"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","The size (dimensions) of the cropped image, specified in the original"],["SummaryLine","image's coordinate space."]],"Kind":"Regular","Index":null,"Name":"size","Option":false,"Type":["Mapped",{"Name":"ShadowPropTypesIOSStaticShadowOffset","FullName":"ShadowPropTypesIOSStaticShadowOffset"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","(Optional) size to scale the cropped image to."]],"Kind":"Regular","Index":null,"Name":"displaySize","Option":true,"Type":["Mapped",{"Name":"ShadowPropTypesIOSStaticShadowOffset","FullName":"ShadowPropTypesIOSStaticShadowOffset"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","(Optional) the resizing mode to use when scaling the image. If the"],["SummaryLine","`displaySize` param is not specified, this has no effect."]],"Kind":"Regular","Index":null,"Name":"resizeMode","Option":true,"Type":["Mapped",{"Name":"ImageCropDataResizeMode","FullName":"ImageCropDataResizeMode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageEditorStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[["SummaryLine","Crop the image specified by the URI param. If URI points to a remote"],["SummaryLine","image, it will be downloaded automatically. If the image cannot be"],["SummaryLine","loaded/downloaded, the failure callback will be called."],["SummaryLine",""],["SummaryLine","If the cropping process is successful, the resultant cropped image"],["SummaryLine","will be stored in the ImageStore, and the URI returned in the success"],["SummaryLine","callback will point to the image in the store. Remember to delete the"],["SummaryLine","cropped image from the ImageStore when you are done with it."]],"Kind":"Regular","IsStatic":false,"Name":"cropImage","TypeParameters":[],"Params":[{"Comment":null,"Name":"uri","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"cropData","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ImageCropData","FullName":""}]},{"Comment":null,"Name":"success","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"uri","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]},{"Comment":null,"Name":"failure","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"Object","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTNodeMixin","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"opacity","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"originX","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"originY","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleX","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scaleY","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"scale","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"title","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"visible","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTGroupProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ARTNodeMixin","FullName":"\"node_modules/@types/react-native/index\".ARTNodeMixin"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTClippingRectangleProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ARTNodeMixin","FullName":"\"node_modules/@types/react-native/index\".ARTNodeMixin"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTRenderableMixin","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ARTNodeMixin","FullName":"\"node_modules/@types/react-native/index\".ARTNodeMixin"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"fill","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"stroke","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"strokeCap","Option":true,"Type":["Mapped",{"Name":"ARTRenderableMixinStrokeCap","FullName":"ARTRenderableMixinStrokeCap"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"strokeDash","Option":true,"Type":["Array",["Mapped",{"Name":"float","FullName":"float"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"strokeJoin","Option":true,"Type":["Mapped",{"Name":"ARTRenderableMixinStrokeJoin","FullName":"ARTRenderableMixinStrokeJoin"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"strokeWidth","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTShapeProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ARTRenderableMixin","FullName":"\"node_modules/@types/react-native/index\".ARTRenderableMixin"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"d","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTTextProps","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"ARTRenderableMixin","FullName":"\"node_modules/@types/react-native/index\".ARTRenderableMixin"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"font","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"alignment","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTSurfaceProps","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"style","Option":true,"Type":["Generic",{"Type":["Mapped",{"Name":"StyleProp","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewStyle","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ClippingRectangle","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ARTClippingRectangleProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ClippingRectangleStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ClippingRectangle","FullName":"ClippingRectangle"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Group","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ARTGroupProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"GroupStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Group","FullName":"Group"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Shape","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ARTShapeProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ShapeStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Shape","FullName":"Shape"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"Surface","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ARTSurfaceProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"SurfaceStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Surface","FullName":"Surface"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":true,"Name":"ARTText","FullName":"","TypeParameters":[],"Inherits":[["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":"error"}],"TypeParameters":[["Mapped",{"Name":"ARTTextProps","FullName":""}]]}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":true,"IsClass":true,"Name":"ARTTextStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Constructor","IsStatic":true,"Name":"Create","TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"ARTText","FullName":"ARTText"}],"TypeParameters":[]}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ClippingRectangle","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Group","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Shape","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Surface","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"Text","Option":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"KeyboardStatic","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"NativeEventEmitter","FullName":"\"node_modules/@types/react-native/index\".NativeEventEmitter"}]],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"dismiss","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"ART","Type":["Mapped",{"Name":"ARTStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"ImagePickerIOS","Type":["Mapped",{"Name":"ImagePickerIOSStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"LayoutAnimation","Type":["Mapped",{"Name":"LayoutAnimationStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"SectionList","Type":["Generic",{"Type":["Mapped",{"Name":"SectionListStatic","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}],"TypeParameters":[["GenericTypeParameter",{"Name":"'ItemT"}]]}],["Alias",{"Name":"Systrace","Type":["Mapped",{"Name":"SystraceStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"ActionSheetIOS","Type":["Mapped",{"Name":"ActionSheetIOSStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"Share","Type":["Mapped",{"Name":"ShareStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"AdSupportIOS","Type":["Mapped",{"Name":"AdSupportIOSStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"AccessibilityInfo","Type":["Mapped",{"Name":"AccessibilityInfoStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"Alert","Type":["Mapped",{"Name":"AlertStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"AlertAndroid","Type":["Mapped",{"Name":"AlertAndroidStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"AlertIOS","Type":["Mapped",{"Name":"AlertIOSStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"AppState","Type":["Mapped",{"Name":"AppStateStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"AppStateIOS","Type":["Mapped",{"Name":"AppStateStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"AsyncStorage","Type":["Mapped",{"Name":"AsyncStorageStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"BackAndroid","Type":["Mapped",{"Name":"BackAndroidStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"BackHandler","Type":["Mapped",{"Name":"BackHandlerStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"CameraRoll","Type":["Mapped",{"Name":"CameraRollStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"Clipboard","Type":["Mapped",{"Name":"ClipboardStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"DatePickerAndroid","Type":["Mapped",{"Name":"DatePickerAndroidStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"Geolocation","Type":["Mapped",{"Name":"GeolocationStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"I18nManager","Type":["Mapped",{"Name":"I18nManagerStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"ImageEditor","Type":["Mapped",{"Name":"ImageEditorStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"ImageStore","Type":["Mapped",{"Name":"ImageStoreStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"IntentAndroid","Type":["Mapped",{"Name":"IntentAndroidStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"Linking","Type":["Mapped",{"Name":"LinkingStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"LinkingIOS","Type":["Mapped",{"Name":"LinkingIOSStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"NativeMethodsMixin","Type":["Mapped",{"Name":"NativeMethodsMixinStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"NativeComponent","Type":["Mapped",{"Name":"NativeMethodsMixinStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"NetInfo","Type":["Mapped",{"Name":"NetInfoStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"PanResponder","Type":["Mapped",{"Name":"PanResponderStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"PermissionsAndroid","Type":["Mapped",{"Name":"PermissionsAndroidStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"PushNotificationIOS","Type":["Mapped",{"Name":"PushNotificationIOSStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"Settings","Type":["Mapped",{"Name":"SettingsStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"StatusBarIOS","Type":["Mapped",{"Name":"StatusBarIOSStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"TimePickerAndroid","Type":["Mapped",{"Name":"TimePickerAndroidStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"ToastAndroid","Type":["Mapped",{"Name":"ToastAndroidStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"UIManager","Type":["Mapped",{"Name":"UIManagerStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"VibrationIOS","Type":["Mapped",{"Name":"VibrationIOSStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"Vibration","Type":["Mapped",{"Name":"VibrationStatic","FullName":""}],"TypeParameters":[]}],["Alias",{"Name":"Easing","Type":["Mapped",{"Name":"EasingStatic","FullName":""}],"TypeParameters":[]}],["Interface",{"Comments":[["SummaryLine","Abstract base class for implementing event-emitting modules. This implements"],["SummaryLine","a subset of the standard EventEmitter node module API."]],"IsStatic":false,"IsClass":false,"Name":"NativeEventEmitter","FullName":"","TypeParameters":[],"Inherits":[["Mapped",{"Name":"EventEmitter","FullName":"\"node_modules/@types/react-native/index\".EventEmitter"}]],"Members":[],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Interface for NativeModules which allows to augment NativeModules with type informations."],["SummaryLine","See react-native-sensor-manager for example."]],"IsStatic":false,"IsClass":false,"Name":"NativeModulesStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"name","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ComponentInterface","FullName":"","TypeParameters":[["GenericTypeParameter",{"Name":"'P"}]],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"name","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"displayName","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"propTypes","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"PropTypes.ValidationMap","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'P","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ErrorHandlerCallback","FullName":"ErrorHandlerCallback","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Call","IsStatic":false,"Name":"Invoke","TypeParameters":[],"Params":[{"Comment":null,"Name":"error","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]},{"Comment":null,"Name":"isFatal","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ErrorUtils","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"setGlobalHandler","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"callback","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ErrorHandlerCallback","FullName":""}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"getGlobalHandler","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"ErrorHandlerCallback","FullName":""}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Module",{"HasDeclare":false,"IsNamespace":true,"Name":"Addons","Types":[["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"IExports","FullName":"IExports","TypeParameters":[],"Inherits":[],"Members":[["Variable",{"Export":null,"HasDeclare":true,"Name":"TestModule","Type":["Mapped",{"Name":"TestModuleStatic","FullName":""}],"IsConst":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TestModuleStatic","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"verifySnapshot","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"``done``","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"indicator","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"markTestPassed","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"indicator","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"markTestCompleted","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Alias",{"Name":"TestModule","Type":["Mapped",{"Name":"TestModuleStatic","FullName":""}],"TypeParameters":[]}]],"HelperLines":[],"Attributes":[]}],["Interface",{"Comments":[["SummaryLine","Console polyfill"]],"IsStatic":false,"IsClass":false,"Name":"Console","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"error","TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Comment":null,"Name":"optionalParams","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"info","TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Comment":null,"Name":"optionalParams","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"log","TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Comment":null,"Name":"optionalParams","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"warn","TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Comment":null,"Name":"optionalParams","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"trace","TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Comment":null,"Name":"optionalParams","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"debug","TypeParameters":[],"Params":[{"Comment":null,"Name":"message","Optional":true,"ParamArray":false,"Type":["Mapped",{"Name":"obj","FullName":"obj"}]},{"Comment":null,"Name":"optionalParams","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"Name":"table","TypeParameters":[],"Params":[{"Comment":null,"Name":"data","Optional":false,"ParamArray":true,"Type":["Array",["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"disableYellowBox","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"ignoredYellowBox","Option":false,"Type":["Array",["Mapped",{"Name":"string","FullName":"string"}]],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[["SummaryLine","Navigator object for accessing location API"]],"IsStatic":false,"IsClass":false,"Name":"Navigator","FullName":"","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"product","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"geolocation","Option":false,"Type":["Mapped",{"Name":"Geolocation","FullName":""}],"IsReadonly":true,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NativeMethodsMixinStaticRefs","FullName":"NativeMethodsMixinStaticRefs","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"React.Component","FullName":""}],"TypeParameters":[["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutAnimationStaticConfigChecker","FullName":"LayoutAnimationStaticConfigChecker","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutAnimationStaticPresets","FullName":"LayoutAnimationStaticPresets","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"easeInEaseOut","Option":false,"Type":["Mapped",{"Name":"LayoutAnimationConfig","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"linear","Option":false,"Type":["Mapped",{"Name":"LayoutAnimationConfig","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"spring","Option":false,"Type":["Mapped",{"Name":"LayoutAnimationConfig","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlexStyleAlignContent","FullName":"FlexStyleAlignContent","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"flex-start","Type":"String","Value":"flex-start"},{"Name":"flex-end","Type":"String","Value":"flex-end"},{"Name":"center","Type":"String","Value":"center"},{"Name":"stretch","Type":"String","Value":"stretch"},{"Name":"space-between","Type":"String","Value":"space-between"},{"Name":"space-around","Type":"String","Value":"space-around"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlexStyleDisplay","FullName":"FlexStyleDisplay","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"flex","Type":"String","Value":"flex"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlexStyleFlexDirection","FullName":"FlexStyleFlexDirection","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"row","Type":"String","Value":"row"},{"Name":"column","Type":"String","Value":"column"},{"Name":"row-reverse","Type":"String","Value":"row-reverse"},{"Name":"column-reverse","Type":"String","Value":"column-reverse"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlexStyleFlexWrap","FullName":"FlexStyleFlexWrap","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"wrap","Type":"String","Value":"wrap"},{"Name":"nowrap","Type":"String","Value":"nowrap"},{"Name":"wrap-reverse","Type":"String","Value":"wrap-reverse"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlexStyleJustifyContent","FullName":"FlexStyleJustifyContent","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"flex-start","Type":"String","Value":"flex-start"},{"Name":"flex-end","Type":"String","Value":"flex-end"},{"Name":"center","Type":"String","Value":"center"},{"Name":"space-between","Type":"String","Value":"space-between"},{"Name":"space-around","Type":"String","Value":"space-around"},{"Name":"space-evenly","Type":"String","Value":"space-evenly"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlexStyleOverflow","FullName":"FlexStyleOverflow","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"visible","Type":"String","Value":"visible"},{"Name":"hidden","Type":"String","Value":"hidden"},{"Name":"scroll","Type":"String","Value":"scroll"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlexStylePosition","FullName":"FlexStylePosition","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"absolute","Type":"String","Value":"absolute"},{"Name":"relative","Type":"String","Value":"relative"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlexStyleDirection","FullName":"FlexStyleDirection","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"inherit","Type":"String","Value":"inherit"},{"Name":"ltr","Type":"String","Value":"ltr"},{"Name":"rtl","Type":"String","Value":"rtl"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ShadowPropTypesIOSStaticShadowOffset","FullName":"ShadowPropTypesIOSStaticShadowOffset","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GeolocationReturnTypeCoords","FullName":"GeolocationReturnTypeCoords","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"latitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"longitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"altitude","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"accuracy","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"altitudeAccuracy","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"heading","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"speed","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"float","FullName":"float"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LayoutChangeEventNativeEvent","FullName":"LayoutChangeEventNativeEvent","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"layout","Option":false,"Type":["Mapped",{"Name":"LayoutRectangle","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleIOSTextDecorationStyle","FullName":"TextStyleIOSTextDecorationStyle","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"solid","Type":"String","Value":"solid"},{"Name":"double","Type":"String","Value":"double"},{"Name":"dotted","Type":"String","Value":"dotted"},{"Name":"dashed","Type":"String","Value":"dashed"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleIOSTextTransform","FullName":"TextStyleIOSTextTransform","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"capitalize","Type":"String","Value":"capitalize"},{"Name":"uppercase","Type":"String","Value":"uppercase"},{"Name":"lowercase","Type":"String","Value":"lowercase"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleIOSWritingDirection","FullName":"TextStyleIOSWritingDirection","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"auto","Type":"String","Value":"auto"},{"Name":"ltr","Type":"String","Value":"ltr"},{"Name":"rtl","Type":"String","Value":"rtl"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleAndroidTextAlignVertical","FullName":"TextStyleAndroidTextAlignVertical","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"auto","Type":"String","Value":"auto"},{"Name":"top","Type":"String","Value":"top"},{"Name":"bottom","Type":"String","Value":"bottom"},{"Name":"center","Type":"String","Value":"center"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleFontStyle","FullName":"TextStyleFontStyle","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"normal","Type":"String","Value":"normal"},{"Name":"italic","Type":"String","Value":"italic"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleFontWeight","FullName":"TextStyleFontWeight","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"normal","Type":"String","Value":"normal"},{"Name":"bold","Type":"String","Value":"bold"},{"Name":"100","Type":"String","Value":"100"},{"Name":"200","Type":"String","Value":"200"},{"Name":"300","Type":"String","Value":"300"},{"Name":"400","Type":"String","Value":"400"},{"Name":"500","Type":"String","Value":"500"},{"Name":"600","Type":"String","Value":"600"},{"Name":"700","Type":"String","Value":"700"},{"Name":"800","Type":"String","Value":"800"},{"Name":"900","Type":"String","Value":"900"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleTextAlign","FullName":"TextStyleTextAlign","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"auto","Type":"String","Value":"auto"},{"Name":"left","Type":"String","Value":"left"},{"Name":"right","Type":"String","Value":"right"},{"Name":"center","Type":"String","Value":"center"},{"Name":"justify","Type":"String","Value":"justify"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextStyleTextDecorationLine","FullName":"TextStyleTextDecorationLine","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"underline","Type":"String","Value":"underline"},{"Name":"line-through","Type":"String","Value":"line-through"},{"Name":"underline line-through","Type":"String","Value":"underline line-through"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextPropsAndroidTextBreakStrategy","FullName":"TextPropsAndroidTextBreakStrategy","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"simple","Type":"String","Value":"simple"},{"Name":"highQuality","Type":"String","Value":"highQuality"},{"Name":"balanced","Type":"String","Value":"balanced"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextPropsEllipsizeMode","FullName":"TextPropsEllipsizeMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"head","Type":"String","Value":"head"},{"Name":"middle","Type":"String","Value":"middle"},{"Name":"tail","Type":"String","Value":"tail"},{"Name":"clip","Type":"String","Value":"clip"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputIOSPropsClearButtonMode","FullName":"TextInputIOSPropsClearButtonMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"never","Type":"String","Value":"never"},{"Name":"while-editing","Type":"String","Value":"while-editing"},{"Name":"unless-editing","Type":"String","Value":"unless-editing"},{"Name":"always","Type":"String","Value":"always"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputIOSPropsKeyboardAppearance","FullName":"TextInputIOSPropsKeyboardAppearance","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"default","Type":"String","Value":"default"},{"Name":"light","Type":"String","Value":"light"},{"Name":"dark","Type":"String","Value":"dark"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputIOSPropsTextContentType","FullName":"TextInputIOSPropsTextContentType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"URL","Type":"String","Value":"URL"},{"Name":"addressCity","Type":"String","Value":"addressCity"},{"Name":"addressCityAndState","Type":"String","Value":"addressCityAndState"},{"Name":"addressState","Type":"String","Value":"addressState"},{"Name":"countryName","Type":"String","Value":"countryName"},{"Name":"creditCardNumber","Type":"String","Value":"creditCardNumber"},{"Name":"emailAddress","Type":"String","Value":"emailAddress"},{"Name":"familyName","Type":"String","Value":"familyName"},{"Name":"fullStreetAddress","Type":"String","Value":"fullStreetAddress"},{"Name":"givenName","Type":"String","Value":"givenName"},{"Name":"jobTitle","Type":"String","Value":"jobTitle"},{"Name":"location","Type":"String","Value":"location"},{"Name":"middleName","Type":"String","Value":"middleName"},{"Name":"name","Type":"String","Value":"name"},{"Name":"namePrefix","Type":"String","Value":"namePrefix"},{"Name":"nameSuffix","Type":"String","Value":"nameSuffix"},{"Name":"nickname","Type":"String","Value":"nickname"},{"Name":"organizationName","Type":"String","Value":"organizationName"},{"Name":"postalCode","Type":"String","Value":"postalCode"},{"Name":"streetAddressLine1","Type":"String","Value":"streetAddressLine1"},{"Name":"streetAddressLine2","Type":"String","Value":"streetAddressLine2"},{"Name":"sublocality","Type":"String","Value":"sublocality"},{"Name":"telephoneNumber","Type":"String","Value":"telephoneNumber"},{"Name":"username","Type":"String","Value":"username"},{"Name":"password","Type":"String","Value":"password"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputScrollEventDataContentOffset","FullName":"TextInputScrollEventDataContentOffset","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputSelectionChangeEventDataSelection","FullName":"TextInputSelectionChangeEventDataSelection","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"start","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``end``","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputPropsAutoCapitalize","FullName":"TextInputPropsAutoCapitalize","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"sentences","Type":"String","Value":"sentences"},{"Name":"words","Type":"String","Value":"words"},{"Name":"characters","Type":"String","Value":"characters"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TextInputPropsSelection","FullName":"TextInputPropsSelection","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"start","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``end``","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ToolbarAndroidActionShow","FullName":"ToolbarAndroidActionShow","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"always","Type":"String","Value":"always"},{"Name":"ifRoom","Type":"String","Value":"ifRoom"},{"Name":"never","Type":"String","Value":"never"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewStyleBackfaceVisibility","FullName":"ViewStyleBackfaceVisibility","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"visible","Type":"String","Value":"visible"},{"Name":"hidden","Type":"String","Value":"hidden"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewStyleBorderStyle","FullName":"ViewStyleBorderStyle","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"solid","Type":"String","Value":"solid"},{"Name":"dotted","Type":"String","Value":"dotted"},{"Name":"dashed","Type":"String","Value":"dashed"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityPropsAndroidAccessibilityComponentType","FullName":"AccessibilityPropsAndroidAccessibilityComponentType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"button","Type":"String","Value":"button"},{"Name":"radiobutton_checked","Type":"String","Value":"radiobutton_checked"},{"Name":"radiobutton_unchecked","Type":"String","Value":"radiobutton_unchecked"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityPropsAndroidAccessibilityLiveRegion","FullName":"AccessibilityPropsAndroidAccessibilityLiveRegion","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"polite","Type":"String","Value":"polite"},{"Name":"assertive","Type":"String","Value":"assertive"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AccessibilityPropsAndroidImportantForAccessibility","FullName":"AccessibilityPropsAndroidImportantForAccessibility","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"auto","Type":"String","Value":"auto"},{"Name":"yes","Type":"String","Value":"yes"},{"Name":"no","Type":"String","Value":"no"},{"Name":"no-hide-descendants","Type":"String","Value":"no-hide-descendants"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewPropsPointerEvents","FullName":"ViewPropsPointerEvents","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"box-none","Type":"String","Value":"box-none"},{"Name":"none","Type":"String","Value":"none"},{"Name":"box-only","Type":"String","Value":"box-only"},{"Name":"auto","Type":"String","Value":"auto"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewPagerAndroidPropsOnPageScrollStateChanged","FullName":"ViewPagerAndroidPropsOnPageScrollStateChanged","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"Idle","Type":"String","Value":"Idle"},{"Name":"Dragging","Type":"String","Value":"Dragging"},{"Name":"Settling","Type":"String","Value":"Settling"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewPagerAndroidPropsKeyboardDismissMode","FullName":"ViewPagerAndroidPropsKeyboardDismissMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"on-drag","Type":"String","Value":"on-drag"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"KeyboardAvoidingViewPropsBehavior","FullName":"KeyboardAvoidingViewPropsBehavior","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"height","Type":"String","Value":"height"},{"Name":"position","Type":"String","Value":"position"},{"Name":"padding","Type":"String","Value":"padding"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewPropsAndroidMixedContentMode","FullName":"WebViewPropsAndroidMixedContentMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"never","Type":"String","Value":"never"},{"Name":"always","Type":"String","Value":"always"},{"Name":"compatibility","Type":"String","Value":"compatibility"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewIOSLoadRequestEventNavigationType","FullName":"WebViewIOSLoadRequestEventNavigationType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"click","Type":"String","Value":"click"},{"Name":"formsubmit","Type":"String","Value":"formsubmit"},{"Name":"backforward","Type":"String","Value":"backforward"},{"Name":"reload","Type":"String","Value":"reload"},{"Name":"formresubmit","Type":"String","Value":"formresubmit"},{"Name":"other","Type":"String","Value":"other"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"WebViewUriSourceMethod","FullName":"WebViewUriSourceMethod","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"GET","Type":"String","Value":"GET"},{"Name":"POST","Type":"String","Value":"POST"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ActivityIndicatorIOSPropsOnLayoutNativeEventLayout","FullName":"ActivityIndicatorIOSPropsOnLayoutNativeEventLayout","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ActivityIndicatorIOSPropsOnLayoutNativeEvent","FullName":"ActivityIndicatorIOSPropsOnLayoutNativeEvent","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"layout","Option":false,"Type":["Mapped",{"Name":"ActivityIndicatorIOSPropsOnLayoutNativeEventLayout","FullName":"ActivityIndicatorIOSPropsOnLayoutNativeEventLayout"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ActivityIndicatorIOSPropsOnLayout","FullName":"ActivityIndicatorIOSPropsOnLayout","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"nativeEvent","Option":false,"Type":["Mapped",{"Name":"ActivityIndicatorIOSPropsOnLayoutNativeEvent","FullName":"ActivityIndicatorIOSPropsOnLayoutNativeEvent"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ActivityIndicatorIOSPropsSize","FullName":"ActivityIndicatorIOSPropsSize","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"small","Type":"String","Value":"small"},{"Name":"large","Type":"String","Value":"large"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DatePickerIOSPropsMinuteInterval","FullName":"DatePickerIOSPropsMinuteInterval","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"NumericEnum","Cases":[{"Name":"1","Type":"Numeric","Value":"1"},{"Name":"2","Type":"Numeric","Value":"2"},{"Name":"3","Type":"Numeric","Value":"3"},{"Name":"4","Type":"Numeric","Value":"4"},{"Name":"5","Type":"Numeric","Value":"5"},{"Name":"6","Type":"Numeric","Value":"6"},{"Name":"10","Type":"Numeric","Value":"10"},{"Name":"12","Type":"Numeric","Value":"12"},{"Name":"15","Type":"Numeric","Value":"15"},{"Name":"20","Type":"Numeric","Value":"20"},{"Name":"30","Type":"Numeric","Value":"30"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DatePickerIOSPropsMode","FullName":"DatePickerIOSPropsMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"date","Type":"String","Value":"date"},{"Name":"time","Type":"String","Value":"time"},{"Name":"datetime","Type":"String","Value":"datetime"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DrawerLayoutAndroidPropsDrawerLockMode","FullName":"DrawerLayoutAndroidPropsDrawerLockMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"unlocked","Type":"String","Value":"unlocked"},{"Name":"locked-closed","Type":"String","Value":"locked-closed"},{"Name":"locked-open","Type":"String","Value":"locked-open"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PickerPropsAndroidMode","FullName":"PickerPropsAndroidMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"dialog","Type":"String","Value":"dialog"},{"Name":"dropdown","Type":"String","Value":"dropdown"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ProgressBarAndroidPropsStyleAttr","FullName":"ProgressBarAndroidPropsStyleAttr","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"Horizontal","Type":"String","Value":"Horizontal"},{"Name":"Normal","Type":"String","Value":"Normal"},{"Name":"Small","Type":"String","Value":"Small"},{"Name":"Large","Type":"String","Value":"Large"},{"Name":"Inverse","Type":"String","Value":"Inverse"},{"Name":"SmallInverse","Type":"String","Value":"SmallInverse"},{"Name":"LargeInverse","Type":"String","Value":"LargeInverse"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ProgressViewIOSPropsProgressViewStyle","FullName":"ProgressViewIOSPropsProgressViewStyle","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"default","Type":"String","Value":"default"},{"Name":"bar","Type":"String","Value":"bar"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"RecyclerViewBackedScrollViewScrollTo","FullName":"RecyclerViewBackedScrollViewScrollTo","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"x","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"y","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageURISourceHeaders","FullName":"ImageURISourceHeaders","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageURISourceCache","FullName":"ImageURISourceCache","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"default","Type":"String","Value":"default"},{"Name":"reload","Type":"String","Value":"reload"},{"Name":"force-cache","Type":"String","Value":"force-cache"},{"Name":"only-if-cached","Type":"String","Value":"only-if-cached"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImagePropsAndroidResizeMethod","FullName":"ImagePropsAndroidResizeMethod","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"auto","Type":"String","Value":"auto"},{"Name":"resize","Type":"String","Value":"resize"},{"Name":"scale","Type":"String","Value":"scale"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageLoadEventDataSource","FullName":"ImageLoadEventDataSource","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"url","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageStaticQueryCachePromiseMap","FullName":"ImageStaticQueryCachePromiseMap","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"memory","Type":"String","Value":"memory"},{"Name":"disk","Type":"String","Value":"disk"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ViewabilityConfigCallbackPairOnViewableItemsChanged","FullName":"ViewabilityConfigCallbackPairOnViewableItemsChanged","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewableItems","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewToken","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"changed","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"Array","FullName":""}],"TypeParameters":[["Mapped",{"Name":"ViewToken","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ListRenderItemInfoSeparatorsUpdateProps","FullName":"ListRenderItemInfoSeparatorsUpdateProps","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"leading","Type":"String","Value":"leading"},{"Name":"trailing","Type":"String","Value":"trailing"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ListRenderItemInfoSeparators","FullName":"ListRenderItemInfoSeparators","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"highlight","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"unhighlight","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"updateProps","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"select","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"ListRenderItemInfoSeparatorsUpdateProps","FullName":"ListRenderItemInfoSeparatorsUpdateProps"}]},{"Comment":null,"Name":"newProps","Optional":false,"ParamArray":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlatListPropsGetItemLayout","FullName":"FlatListPropsGetItemLayout","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"length","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"offset","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"index","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlatListPropsOnEndReached","FullName":"FlatListPropsOnEndReached","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"distanceFromEnd","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlatListGetMetrics","FullName":"FlatListGetMetrics","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"contentLength","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"totalRows","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"renderedRows","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"visibleRows","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlatListScrollToEnd","FullName":"FlatListScrollToEnd","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlatListScrollToIndex","FullName":"FlatListScrollToIndex","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"index","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewOffset","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewPosition","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlatListScrollToItem","FullName":"FlatListScrollToItem","TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"item","Option":false,"Type":["Mapped",{"Name":"'ItemT","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"viewPosition","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"FlatListScrollToOffset","FullName":"FlatListScrollToOffset","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"animated","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"offset","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SectionListPropsOnScrollToIndexFailed","FullName":"SectionListPropsOnScrollToIndexFailed","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"index","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"highestMeasuredFrameIndex","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"averageItemLength","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"SectionListPropsRenderSectionHeader","FullName":"SectionListPropsRenderSectionHeader","TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"section","Option":false,"Type":["Generic",{"Type":["Mapped",{"Name":"SectionListData","FullName":""}],"TypeParameters":[["Mapped",{"Name":"'ItemT","FullName":""}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ListViewPropsOnChangeVisibleRowsArrayItem","FullName":"ListViewPropsOnChangeVisibleRowsArrayItem","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"rowID","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ListViewPropsOnChangeVisibleRowsArray","FullName":"ListViewPropsOnChangeVisibleRowsArray","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"sectionId","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"ListViewPropsOnChangeVisibleRowsArrayItem","FullName":"ListViewPropsOnChangeVisibleRowsArrayItem"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MapViewOverlayCoordinates","FullName":"MapViewOverlayCoordinates","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"latitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"longitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MapViewPropsMapType","FullName":"MapViewPropsMapType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"standard","Type":"String","Value":"standard"},{"Name":"satellite","Type":"String","Value":"satellite"},{"Name":"hybrid","Type":"String","Value":"hybrid"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"MapViewStaticPinColors","FullName":"MapViewStaticPinColors","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"RED","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"GREEN","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"PURPLE","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ModalBasePropsAnimationType","FullName":"ModalBasePropsAnimationType","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"slide","Type":"String","Value":"slide"},{"Name":"fade","Type":"String","Value":"fade"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ModalPropsIOSPresentationStyle","FullName":"ModalPropsIOSPresentationStyle","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"fullScreen","Type":"String","Value":"fullScreen"},{"Name":"pageSheet","Type":"String","Value":"pageSheet"},{"Name":"formSheet","Type":"String","Value":"formSheet"},{"Name":"overFullScreen","Type":"String","Value":"overFullScreen"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ModalPropsIOSSupportedOrientationsArray","FullName":"ModalPropsIOSSupportedOrientationsArray","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"portrait","Type":"String","Value":"portrait"},{"Name":"portrait-upside-down","Type":"String","Value":"portrait-upside-down"},{"Name":"landscape","Type":"String","Value":"landscape"},{"Name":"landscape-left","Type":"String","Value":"landscape-left"},{"Name":"landscape-right","Type":"String","Value":"landscape-right"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TabBarIOSItemPropsSystemIcon","FullName":"TabBarIOSItemPropsSystemIcon","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"bookmarks","Type":"String","Value":"bookmarks"},{"Name":"contacts","Type":"String","Value":"contacts"},{"Name":"downloads","Type":"String","Value":"downloads"},{"Name":"favorites","Type":"String","Value":"favorites"},{"Name":"featured","Type":"String","Value":"featured"},{"Name":"history","Type":"String","Value":"history"},{"Name":"more","Type":"String","Value":"more"},{"Name":"most-recent","Type":"String","Value":"most-recent"},{"Name":"most-viewed","Type":"String","Value":"most-viewed"},{"Name":"recents","Type":"String","Value":"recents"},{"Name":"search","Type":"String","Value":"search"},{"Name":"top-rated","Type":"String","Value":"top-rated"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TabBarIOSPropsItemPositioning","FullName":"TabBarIOSPropsItemPositioning","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"fill","Type":"String","Value":"fill"},{"Name":"center","Type":"String","Value":"center"},{"Name":"auto","Type":"String","Value":"auto"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DimensionsAddEventListener_change","FullName":"DimensionsAddEventListener_change","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"window","Option":false,"Type":["Mapped",{"Name":"ScaledSize","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"screen","Option":false,"Type":["Mapped",{"Name":"ScaledSize","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"InteractionManagerStaticEvents","FullName":"InteractionManagerStaticEvents","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"interactionStart","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"interactionComplete","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollViewPropsIOSContentInsetAdjustmentBehavior","FullName":"ScrollViewPropsIOSContentInsetAdjustmentBehavior","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"automatic","Type":"String","Value":"automatic"},{"Name":"scrollableAxes","Type":"String","Value":"scrollableAxes"},{"Name":"never","Type":"String","Value":"never"},{"Name":"always","Type":"String","Value":"always"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollViewPropsIOSIndicatorStyle","FullName":"ScrollViewPropsIOSIndicatorStyle","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"default","Type":"String","Value":"default"},{"Name":"black","Type":"String","Value":"black"},{"Name":"white","Type":"String","Value":"white"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollViewPropsIOSSnapToAlignment","FullName":"ScrollViewPropsIOSSnapToAlignment","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"start","Type":"String","Value":"start"},{"Name":"center","Type":"String","Value":"center"},{"Name":"end","Type":"String","Value":"end"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollViewPropsAndroidOverScrollMode","FullName":"ScrollViewPropsAndroidOverScrollMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"auto","Type":"String","Value":"auto"},{"Name":"always","Type":"String","Value":"always"},{"Name":"never","Type":"String","Value":"never"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ScrollViewPropsKeyboardDismissMode","FullName":"ScrollViewPropsKeyboardDismissMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"none","Type":"String","Value":"none"},{"Name":"interactive","Type":"String","Value":"interactive"},{"Name":"on-drag","Type":"String","Value":"on-drag"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"AlertButtonStyle","FullName":"AlertButtonStyle","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"default","Type":"String","Value":"default"},{"Name":"cancel","Type":"String","Value":"cancel"},{"Name":"destructive","Type":"String","Value":"destructive"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"CameraRollAssetInfoPage_info","FullName":"CameraRollAssetInfoPage_info","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"has_next_page","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"end_cursor","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GetPhotosReturnTypeEdgesNodeImage","FullName":"GetPhotosReturnTypeEdgesNodeImage","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"uri","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"isStored","Option":true,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GetPhotosReturnTypeEdgesNodeLocation","FullName":"GetPhotosReturnTypeEdgesNodeLocation","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"latitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"longitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"altitude","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"heading","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"speed","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GetPhotosReturnTypeEdgesNode","FullName":"GetPhotosReturnTypeEdgesNode","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"``type``","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"group_name","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"image","Option":false,"Type":["Mapped",{"Name":"GetPhotosReturnTypeEdgesNodeImage","FullName":"GetPhotosReturnTypeEdgesNodeImage"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"timestamp","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"location","Option":false,"Type":["Mapped",{"Name":"GetPhotosReturnTypeEdgesNodeLocation","FullName":"GetPhotosReturnTypeEdgesNodeLocation"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GetPhotosReturnTypeEdges","FullName":"GetPhotosReturnTypeEdges","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"node","Option":false,"Type":["Mapped",{"Name":"GetPhotosReturnTypeEdgesNode","FullName":"GetPhotosReturnTypeEdgesNode"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"GetPhotosReturnTypePage_info","FullName":"GetPhotosReturnTypePage_info","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"has_next_page","Option":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"start_cursor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"end_cursor","Option":true,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"DatePickerAndroidOpenOptionsMode","FullName":"DatePickerAndroidOpenOptionsMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"calendar","Type":"String","Value":"calendar"},{"Name":"spinner","Type":"String","Value":"spinner"},{"Name":"default","Type":"String","Value":"default"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"LinkingStaticAddEventListener","FullName":"LinkingStaticAddEventListener","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"url","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"NetInfoStaticIsConnected","FullName":"NetInfoStaticIsConnected","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"fetch","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[],"ReturnType":["Generic",{"Type":["Mapped",{"Name":"Promise","FullName":""}],"TypeParameters":[["Mapped",{"Name":"bool","FullName":"bool"}]]}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","eventName is expected to be `change`(deprecated) or `connectionChange`"]],"Kind":"Regular","Index":null,"Name":"addEventListener","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"result","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[["SummaryLine","eventName is expected to be `change`(deprecated) or `connectionChange`"]],"Kind":"Regular","Index":null,"Name":"removeEventListener","Option":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"eventName","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},{"Comment":null,"Name":"listener","Optional":false,"ParamArray":false,"Type":["Function",{"Comments":[],"Kind":"Regular","IsStatic":false,"TypeParameters":[],"Params":[{"Comment":null,"Name":"result","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"bool","FullName":"bool"}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}]}],"ReturnType":["Mapped",{"Name":"unit","FullName":"unit"}],"Accessibility":null}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PermissionsAndroidStaticRESULTS","FullName":"PermissionsAndroidStaticRESULTS","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"PermissionStatus","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PermissionsAndroidStaticPERMISSIONS","FullName":"PermissionsAndroidStaticPERMISSIONS","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"key","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"Permission","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PermissionsAndroidStaticRequestMultiplePromise","FullName":"PermissionsAndroidStaticRequestMultiplePromise","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Index","Index":{"Comment":null,"Name":"permission","Optional":false,"ParamArray":false,"Type":["Mapped",{"Name":"string","FullName":"string"}]},"Name":"Item","Option":false,"Type":["Mapped",{"Name":"PermissionStatus","FullName":""}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"PushNotificationIOSStaticAddEventListener_registrationError","FullName":"PushNotificationIOSStaticAddEventListener_registrationError","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"message","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"code","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"details","Option":false,"Type":["Union",{"Option":true,"Types":[["Mapped",{"Name":"obj","FullName":"obj"}]]}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"StatusBarPropsIOSShowHideTransition","FullName":"StatusBarPropsIOSShowHideTransition","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"fade","Type":"String","Value":"fade"},{"Name":"slide","Type":"String","Value":"slide"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TimePickerAndroidOpenOptionsMode","FullName":"TimePickerAndroidOpenOptionsMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"clock","Type":"String","Value":"clock"},{"Name":"spinner","Type":"String","Value":"spinner"},{"Name":"default","Type":"String","Value":"default"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"TimePickerAndroidStaticOpenPromise","FullName":"TimePickerAndroidStaticOpenPromise","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"action","Option":false,"Type":["Mapped",{"Name":"string","FullName":"string"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"hour","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"minute","Option":false,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UIManagerStaticTakeSnapshotFormat","FullName":"UIManagerStaticTakeSnapshotFormat","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"png","Type":"String","Value":"png"},{"Name":"jpeg","Type":"String","Value":"jpeg"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"UIManagerStaticTakeSnapshot","FullName":"UIManagerStaticTakeSnapshot","TypeParameters":[],"Inherits":[],"Members":[["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"width","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"height","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"format","Option":true,"Type":["Mapped",{"Name":"UIManagerStaticTakeSnapshotFormat","FullName":"UIManagerStaticTakeSnapshotFormat"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}],["Property",{"Comments":[],"Kind":"Regular","Index":null,"Name":"quality","Option":true,"Type":["Mapped",{"Name":"float","FullName":"float"}],"IsReadonly":false,"IsStatic":false,"Accessibility":null}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"I18nManagerStaticAllowRTL","FullName":"I18nManagerStaticAllowRTL","TypeParameters":[],"Inherits":[],"Members":[],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ImageCropDataResizeMode","FullName":"ImageCropDataResizeMode","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"contain","Type":"String","Value":"contain"},{"Name":"cover","Type":"String","Value":"cover"},{"Name":"stretch","Type":"String","Value":"stretch"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTRenderableMixinStrokeCap","FullName":"ARTRenderableMixinStrokeCap","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"butt","Type":"String","Value":"butt"},{"Name":"square","Type":"String","Value":"square"},{"Name":"round","Type":"String","Value":"round"}]}]],"Accessibility":null}],["Interface",{"Comments":[],"IsStatic":false,"IsClass":false,"Name":"ARTRenderableMixinStrokeJoin","FullName":"ARTRenderableMixinStrokeJoin","TypeParameters":[],"Inherits":[],"Members":[["Enum",{"Name":"StringEnum","Cases":[{"Name":"bevel","Type":"String","Value":"bevel"},{"Name":"miter","Type":"String","Value":"miter"},{"Name":"round","Type":"String","Value":"round"}]}]],"Accessibility":null}]],"HelperLines":[],"Attributes":[]}]}],"AbbrevTypes":["type Array<'T> = System.Collections.Generic.IList<'T>","type Error = System.Exception","type ReadonlyArray<'T> = System.Collections.Generic.IReadOnlyList<'T>"]}